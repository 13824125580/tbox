!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
A	pixman-private.h	/^    double     A;$/;"	m	struct:radial_gradient
ACCESS	pixman-accessor.h	30;"	d
ACCESS	pixman-accessor.h	3;"	d
ADD	pixman-combine32.c	1214;"	d	file:
ADD	pixman-combine64.c	1214;"	d	file:
ADDRECT	pixman-region.c	237;"	d	file:
ADD_ALPHA	pixman-edge.c	89;"	d	file:
ADD_ALPHA	pixman-edge.c	98;"	d	file:
ADD_SATURATE_8	pixman-edge.c	130;"	d	file:
ADD_UN16	pixman-combine64.h	37;"	d
ADD_UN8	pixman-combine32.h	37;"	d
AG_MASK	pixman-combine32.h	18;"	d
AG_MASK	pixman-combine64.h	18;"	d
ALPHA_16	pixman-combine64.h	22;"	d
ALPHA_8	pixman-combine32.h	22;"	d
APPEND_REGIONS	pixman-region.c	694;"	d	file:
AVV	pixman-vmx.c	33;"	d	file:
A_MASK	pixman-combine32.h	13;"	d
A_MASK	pixman-combine64.h	13;"	d
A_SHIFT	pixman-combine32.h	10;"	d
A_SHIFT	pixman-combine64.h	10;"	d
BAD_RECT	pixman-region.c	86;"	d	file:
BIND_COMBINE_U	pixman-arm-neon.c	/^BIND_COMBINE_U (over)$/;"	f
BIND_COMBINE_U	pixman-arm-neon.c	308;"	d	file:
BITS	pixman-private.h	/^    BITS,$/;"	e	enum:__anon2
BLUE_16	pixman-combine64.h	25;"	d
BLUE_8	pixman-combine32.h	25;"	d
CHECKPOINT	pixman-mmx.c	45;"	d	file:
CHECKPOINT	pixman-mmx.c	47;"	d	file:
CH_MAX	pixman-combine32.c	1118;"	d	file:
CH_MAX	pixman-combine32.c	887;"	d	file:
CH_MAX	pixman-combine64.c	1118;"	d	file:
CH_MAX	pixman-combine64.c	887;"	d	file:
CH_MIN	pixman-combine32.c	1119;"	d	file:
CH_MIN	pixman-combine32.c	886;"	d	file:
CH_MIN	pixman-combine64.c	1119;"	d	file:
CH_MIN	pixman-combine64.c	886;"	d	file:
CLIP	pixman-private.h	697;"	d
CMOV	pixman-cpu.c	/^    CMOV = 0x10$/;"	e	enum:__anon8	file:
COALESCE	pixman-region.c	628;"	d	file:
COMBINE_A	pixman-combine32.c	1153;"	d	file:
COMBINE_A	pixman-combine64.c	1153;"	d	file:
COMBINE_A_ATOP	pixman-combine32.c	1157;"	d	file:
COMBINE_A_ATOP	pixman-combine64.c	1157;"	d	file:
COMBINE_A_IN	pixman-combine32.c	1148;"	d	file:
COMBINE_A_IN	pixman-combine64.c	1148;"	d	file:
COMBINE_A_OUT	pixman-combine32.c	1147;"	d	file:
COMBINE_A_OUT	pixman-combine64.c	1147;"	d	file:
COMBINE_A_OVER	pixman-combine32.c	1155;"	d	file:
COMBINE_A_OVER	pixman-combine64.c	1155;"	d	file:
COMBINE_B	pixman-combine32.c	1154;"	d	file:
COMBINE_B	pixman-combine64.c	1154;"	d	file:
COMBINE_B_ATOP	pixman-combine32.c	1158;"	d	file:
COMBINE_B_ATOP	pixman-combine64.c	1158;"	d	file:
COMBINE_B_IN	pixman-combine32.c	1150;"	d	file:
COMBINE_B_IN	pixman-combine64.c	1150;"	d	file:
COMBINE_B_OUT	pixman-combine32.c	1149;"	d	file:
COMBINE_B_OUT	pixman-combine64.c	1149;"	d	file:
COMBINE_B_OVER	pixman-combine32.c	1156;"	d	file:
COMBINE_B_OVER	pixman-combine64.c	1156;"	d	file:
COMBINE_CLEAR	pixman-combine32.c	1152;"	d	file:
COMBINE_CLEAR	pixman-combine64.c	1152;"	d	file:
COMBINE_XOR	pixman-combine32.c	1159;"	d	file:
COMBINE_XOR	pixman-combine64.c	1159;"	d	file:
COMPONENT_SIZE	pixman-combine32.h	6;"	d
COMPONENT_SIZE	pixman-combine64.h	6;"	d
COMPUTE_SHIFT_MASK	pixman-vmx.c	131;"	d	file:
COMPUTE_SHIFT_MASKC	pixman-vmx.c	139;"	d	file:
COMPUTE_SHIFT_MASKS	pixman-vmx.c	134;"	d	file:
CONICAL	pixman-private.h	/^    CONICAL,$/;"	e	enum:__anon2
CONVERT_0565_TO_0565	pixman-private.h	715;"	d
CONVERT_0565_TO_0888	pixman-private.h	706;"	d
CONVERT_0565_TO_8888	pixman-private.h	711;"	d
CONVERT_8888_TO_0565	pixman-private.h	701;"	d
CONVERT_8888_TO_8888	pixman-private.h	714;"	d
CONVERT_RGB24_TO_RGB15	pixman-access.c	43;"	d	file:
CONVERT_RGB24_TO_Y15	pixman-access.c	38;"	d	file:
CREATE_BITMASK	pixman-fast-path.c	1030;"	d	file:
CREATE_BITMASK	pixman-fast-path.c	1033;"	d	file:
DEBUG	pixman-private.h	735;"	d
DEBUG	pixman-private.h	750;"	d
DEFINE_ALPHA	pixman-edge.c	100;"	d	file:
DEFINE_ALPHA	pixman-edge.c	83;"	d	file:
DIV	pixman-private.h	690;"	d
DIV_ONE_UN16	pixman-combine64.h	41;"	d
DIV_ONE_UN8	pixman-combine32.h	41;"	d
DIV_UN16	pixman-combine64.h	34;"	d
DIV_UN8	pixman-combine32.h	34;"	d
DOWNSIZE	pixman-region.c	263;"	d	file:
DST_R	pixman-arm-neon-asm.h	/^    add         DST_R, DST_R, #lowbit$/;"	v
DST_R	pixman-arm-neon-asm.h	/^    mov         DST_R, DST_W$/;"	v
DST_STRIDE	pixman-arm-neon-asm.h	/^    add         DST_W, DST_W, DST_STRIDE, lsl #dst_bpp_shift$/;"	v
DST_STRIDE	pixman-arm-neon-asm.h	/^    sub         DST_STRIDE, DST_STRIDE, W$/;"	v
DST_STRIDE	pixman-arm-neon-asm.h	/^    sub         DST_STRIDE, DST_STRIDE, W, lsl #1$/;"	v
DST_W	pixman-arm-neon-asm.h	/^    add         DST_W, DST_W, DST_STRIDE, lsl #dst_bpp_shift$/;"	v
DST_W	pixman-arm-neon-asm.h	/^    sub         DST_W, DST_W, W, lsl #dst_bpp_shift$/;"	v
EPSILON	pixman-matrix.c	365;"	d	file:
EXCHANGE_RECTS	pixman-region.c	1451;"	d	file:
EXTENTCHECK	pixman-region.c	167;"	d	file:
F	pixman-matrix.c	35;"	d	file:
FALSE	pixman-private.h	674;"	d
FAST_NEAREST	pixman-fast-path.c	1397;"	d	file:
FAST_PATH	pixman-private.h	609;"	d
FAST_PATH_16BIT_SAFE	pixman-private.h	584;"	d
FAST_PATH_COMPONENT_ALPHA	pixman-private.h	575;"	d
FAST_PATH_COVERS_CLIP	pixman-private.h	574;"	d
FAST_PATH_ID_TRANSFORM	pixman-private.h	567;"	d
FAST_PATH_IS_OPAQUE	pixman-private.h	580;"	d
FAST_PATH_NEAREST_FILTER	pixman-private.h	578;"	d
FAST_PATH_NEEDS_WORKAROUND	pixman-private.h	581;"	d
FAST_PATH_NO_ACCESSORS	pixman-private.h	572;"	d
FAST_PATH_NO_ALPHA_MAP	pixman-private.h	568;"	d
FAST_PATH_NO_CONVOLUTION_FILTER	pixman-private.h	569;"	d
FAST_PATH_NO_NONE_REPEAT	pixman-private.h	582;"	d
FAST_PATH_NO_PAD_REPEAT	pixman-private.h	570;"	d
FAST_PATH_NO_REFLECT_REPEAT	pixman-private.h	571;"	d
FAST_PATH_NO_WIDE_FORMAT	pixman-private.h	573;"	d
FAST_PATH_SAMPLES_COVER_CLIP	pixman-private.h	583;"	d
FAST_PATH_SCALE_TRANSFORM	pixman-private.h	577;"	d
FAST_PATH_SIMPLE_REPEAT	pixman-private.h	579;"	d
FAST_PATH_STD_DEST_FLAGS	pixman-private.h	605;"	d
FAST_PATH_STD_MASK_CA_FLAGS	pixman-private.h	602;"	d
FAST_PATH_STD_MASK_U_FLAGS	pixman-private.h	599;"	d
FAST_PATH_STD_SRC_FLAGS	pixman-private.h	597;"	d
FAST_PATH_UNIFIED_ALPHA	pixman-private.h	576;"	d
FAST_PATH_X_UNIT_POSITIVE	pixman-private.h	585;"	d
FETCH_4	pixman-access.c	858;"	d	file:
FETCH_4	pixman-access.c	861;"	d	file:
FETCH_8	pixman-access.c	856;"	d	file:
FIND_BAND	pixman-region.c	684;"	d	file:
FORMAT_INFO	pixman-access.c	2742;"	d	file:
FREE_DATA	pixman-region.c	212;"	d	file:
FUNC	pixman-compiler.h	14;"	d
FUNC	pixman-compiler.h	16;"	d
FUNC	pixman-compiler.h	18;"	d
GENERIC	pixman-combine32.c	1218;"	d	file:
GENERIC	pixman-combine64.c	1218;"	d	file:
GET_0565_ALPHA	pixman-fast-path.c	1395;"	d	file:
GET_4	pixman-edge.c	79;"	d	file:
GET_8888_ALPHA	pixman-fast-path.c	1392;"	d	file:
GET_COMP	pixman-combine32.c	1212;"	d	file:
GET_COMP	pixman-combine64.c	1212;"	d	file:
GOOD	pixman-region.c	90;"	d	file:
GOOD	pixman-region.c	99;"	d	file:
GOOD_RECT	pixman-region.c	85;"	d	file:
GREEN_16	pixman-combine64.h	24;"	d
GREEN_8	pixman-combine32.h	24;"	d
G_MASK	pixman-combine32.h	15;"	d
G_MASK	pixman-combine64.h	15;"	d
G_SHIFT	pixman-combine32.h	12;"	d
G_SHIFT	pixman-combine64.h	12;"	d
H	pixman-arm-neon-asm.h	/^    PF mov      PF_CTL, H, lsl #4$/;"	v
H	pixman-arm-neon-asm.h	/^    subs        H, H, #1$/;"	v
HAS_NORMAL_REPEAT_FLAGS	pixman-fast-path.c	1813;"	d	file:
HAVE_DLFCN_H	confdefs.h	23;"	d
HAVE_DLFCN_H	config.h	8;"	d
HAVE_INTTYPES_H	confdefs.h	20;"	d
HAVE_INTTYPES_H	config.h	14;"	d
HAVE_MEMORY_H	confdefs.h	18;"	d
HAVE_MEMORY_H	config.h	17;"	d
HAVE_POSIX_MEMALIGN	config.h	20;"	d
HAVE_STDINT_H	confdefs.h	21;"	d
HAVE_STDINT_H	config.h	26;"	d
HAVE_STDLIB_H	confdefs.h	16;"	d
HAVE_STDLIB_H	config.h	29;"	d
HAVE_STRINGS_H	confdefs.h	19;"	d
HAVE_STRINGS_H	config.h	32;"	d
HAVE_STRING_H	confdefs.h	17;"	d
HAVE_STRING_H	config.h	35;"	d
HAVE_SYS_STAT_H	confdefs.h	15;"	d
HAVE_SYS_STAT_H	config.h	38;"	d
HAVE_SYS_TYPES_H	confdefs.h	14;"	d
HAVE_SYS_TYPES_H	config.h	41;"	d
HAVE_UNISTD_H	confdefs.h	22;"	d
HAVE_UNISTD_H	config.h	44;"	d
INBOX	pixman-region.c	174;"	d	file:
INT16_MAX	pixman-compiler.h	26;"	d
INT16_MIN	pixman-compiler.h	22;"	d
INT32_MAX	pixman-compiler.h	34;"	d
INT32_MIN	pixman-compiler.h	30;"	d
IS_16BIT	pixman.c	482;"	d	file:
IS_INT	pixman-matrix.c	374;"	d	file:
IS_ONE	pixman-matrix.c	369;"	d	file:
IS_SAME	pixman-matrix.c	367;"	d	file:
IS_UNIT	pixman-matrix.c	370;"	d	file:
IS_ZERO	pixman-matrix.c	368;"	d	file:
LEFT_MASK	pixman-edge-imp.h	86;"	d
LINEAR	pixman-private.h	/^    LINEAR,$/;"	e	enum:__anon2
LOAD_VECTORS	pixman-vmx.c	149;"	d	file:
LOAD_VECTORSC	pixman-vmx.c	159;"	d	file:
LOAD_VECTORSM	pixman-vmx.c	173;"	d	file:
LT_OBJDIR	confdefs.h	24;"	d
LT_OBJDIR	config.h	48;"	d
LUM	pixman-combine32.c	1117;"	d	file:
LUM	pixman-combine32.c	888;"	d	file:
LUM	pixman-combine64.c	1117;"	d	file:
LUM	pixman-combine64.c	888;"	d	file:
M64	pixman-mmx.c	/^M64 (uint64_t x)$/;"	f	file:
M64C	pixman-x64-mmx-emulation.h	13;"	d
M64U	pixman-x64-mmx-emulation.h	14;"	d
M64_MEMBER	pixman-mmx.c	78;"	d	file:
M64_MEMBER	pixman-mmx.c	80;"	d	file:
MASK	pixman-arm-neon-asm.h	/^    add         MASK, MASK, MASK_STRIDE, lsl #mask_bpp_shift$/;"	v
MASK	pixman-arm-neon-asm.h	/^    sub         MASK, MASK, W, lsl #mask_bpp_shift$/;"	v
MASK	pixman-combine32.h	7;"	d
MASK	pixman-combine64.h	7;"	d
MASK_BITS	pixman-edge-imp.h	93;"	d
MASK_STRIDE	pixman-arm-neon-asm.h	/^    add         MASK, MASK, MASK_STRIDE, lsl #mask_bpp_shift$/;"	v
MASK_STRIDE	pixman-arm-neon-asm.h	/^    sub         MASK_STRIDE, MASK_STRIDE, W$/;"	v
MASK_STRIDE	pixman-arm-neon-asm.h	/^    sub         MASK_STRIDE, MASK_STRIDE, W, lsl #1$/;"	v
MAX	pixman-private.h	686;"	d
MAX_ALPHA	pixman-private.h	343;"	d
MC	pixman-mmx.c	132;"	d	file:
MC	pixman-mmx.c	134;"	d	file:
MC	pixman-mmx.c	137;"	d	file:
MEMCPY_WRAPPED	pixman-accessor.h	10;"	d
MEMCPY_WRAPPED	pixman-accessor.h	34;"	d
MEMSET_WRAPPED	pixman-accessor.h	19;"	d
MEMSET_WRAPPED	pixman-accessor.h	36;"	d
MERGERECT	pixman-region.c	1227;"	d	file:
MIN	pixman-private.h	682;"	d
MMX	pixman-cpu.c	/^    MMX = 0x1,$/;"	e	enum:__anon8	file:
MMXDATA_INIT	pixman-mmx.c	104;"	d	file:
MMXDATA_INIT	pixman-mmx.c	106;"	d	file:
MMXDATA_INIT	pixman-mmx.c	108;"	d	file:
MMX_EXTENSIONS	pixman-cpu.c	/^    MMX_EXTENSIONS = 0x2,$/;"	e	enum:__anon8	file:
MMX_X64_H_INCLUDED	pixman-x64-mmx-emulation.h	2;"	d
MOD	pixman-private.h	695;"	d
MUL_UN16	pixman-combine64.h	31;"	d
MUL_UN8	pixman-combine32.h	31;"	d
M_PI	pixman-compiler.h	46;"	d
NEAREST_FAST_PATH	pixman-fast-path.c	1853;"	d	file:
NEWRECT	pixman-region.c	248;"	d	file:
NO_FEATURES	pixman-cpu.c	/^    NO_FEATURES = 0,$/;"	e	enum:__anon8	file:
N_BITS	pixman-edge.c	102;"	d	file:
N_BITS	pixman-edge.c	109;"	d	file:
N_BITS	pixman-edge.c	115;"	d	file:
N_BITS	pixman-edge.c	70;"	d	file:
N_CACHED_FAST_PATHS	pixman.c	553;"	d	file:
N_TMP_BOXES	pixman-utils.c	170;"	d	file:
N_X_FRAC	pixman-private.h	345;"	d
N_Y_FRAC	pixman-private.h	344;"	d
OIL_STAMP	pixman-private.h	832;"	d
ONE_HALF	pixman-combine32.h	8;"	d
ONE_HALF	pixman-combine64.h	8;"	d
PACK	pixman.c	42;"	d	file:
PACKAGE	confdefs.h	11;"	d
PACKAGE	config.h	51;"	d
PACKAGE_BUGREPORT	confdefs.h	9;"	d
PACKAGE_BUGREPORT	config.h	54;"	d
PACKAGE_NAME	confdefs.h	5;"	d
PACKAGE_NAME	config.h	57;"	d
PACKAGE_STRING	confdefs.h	8;"	d
PACKAGE_STRING	config.h	60;"	d
PACKAGE_TARNAME	confdefs.h	6;"	d
PACKAGE_TARNAME	config.h	63;"	d
PACKAGE_URL	confdefs.h	10;"	d
PACKAGE_URL	config.h	66;"	d
PACKAGE_VERSION	confdefs.h	7;"	d
PACKAGE_VERSION	config.h	69;"	d
PDF_NON_SEPARABLE_BLEND_MODE	pixman-combine32.c	1120;"	d	file:
PDF_NON_SEPARABLE_BLEND_MODE	pixman-combine32.c	891;"	d	file:
PDF_NON_SEPARABLE_BLEND_MODE	pixman-combine64.c	1120;"	d	file:
PDF_NON_SEPARABLE_BLEND_MODE	pixman-combine64.c	891;"	d	file:
PDF_SEPARABLE_BLEND_MODE	pixman-combine32.c	495;"	d	file:
PDF_SEPARABLE_BLEND_MODE	pixman-combine32.c	775;"	d	file:
PDF_SEPARABLE_BLEND_MODE	pixman-combine64.c	495;"	d	file:
PDF_SEPARABLE_BLEND_MODE	pixman-combine64.c	775;"	d	file:
PF_CTL	pixman-arm-neon-asm.h	/^    PF add      PF_CTL, #(prefetch_distance - 0x10)$/;"	v
PF_CTL	pixman-arm-neon-asm.h	/^    PF mov      PF_CTL, H, lsl #4$/;"	v
PF_CTL	pixman-arm-neon-asm.h	/^    PF subges PF_CTL, PF_CTL, #0x10$/;"	v
PF_CTL	pixman-arm-neon-asm.h	/^    PF subne PF_CTL, PF_CTL, #1$/;"	v
PF_DST	pixman-arm-neon-asm.h	/^    PF mov      PF_DST, DST_R$/;"	v
PF_MASK	pixman-arm-neon-asm.h	/^    PF mov      PF_MASK, MASK$/;"	v
PF_X	pixman-arm-neon-asm.h	/^    PF add      PF_X, PF_X, #(lowbit * 8 \/ dst_w_bpp)$/;"	v
PF_X	pixman-arm-neon-asm.h	/^    PF add      PF_X, PF_X, #chunk_size$/;"	v
PF_X	pixman-arm-neon-asm.h	/^    PF add      PF_X, PF_X, #pixblock_size$/;"	v
PF_X	pixman-arm-neon-asm.h	/^    PF add PF_X, PF_X, #std_increment$/;"	v
PF_X	pixman-arm-neon-asm.h	/^    PF addne PF_X, PF_X, #boost_increment$/;"	v
PF_X	pixman-arm-neon-asm.h	/^    PF cmp PF_X, ORIG_W$/;"	v
PF_X	pixman-arm-neon-asm.h	/^    PF subge PF_X, PF_X, ORIG_W$/;"	v
PIXMAN_ARM_BIND_FAST_PATH_N_DST	pixman-arm-common.h	88;"	d
PIXMAN_ARM_BIND_FAST_PATH_N_MASK_DST	pixman-arm-common.h	129;"	d
PIXMAN_ARM_BIND_FAST_PATH_SRC_DST	pixman-arm-common.h	48;"	d
PIXMAN_ARM_BIND_FAST_PATH_SRC_MASK_DST	pixman-arm-common.h	226;"	d
PIXMAN_ARM_BIND_FAST_PATH_SRC_N_DST	pixman-arm-common.h	178;"	d
PIXMAN_ARM_COMMON_H	pixman-arm-common.h	27;"	d
PIXMAN_BEGIN_DECLS	pixman.h	75;"	d
PIXMAN_BEGIN_DECLS	pixman.h	78;"	d
PIXMAN_CONFDEFS_H	confdefs.h	3;"	d
PIXMAN_DEFINE_THREAD_LOCAL	pixman-compiler.h	129;"	d
PIXMAN_DEFINE_THREAD_LOCAL	pixman-compiler.h	75;"	d
PIXMAN_DEFINE_THREAD_LOCAL	pixman-compiler.h	82;"	d
PIXMAN_DEFINE_THREAD_LOCAL	pixman-compiler.h	91;"	d
PIXMAN_DISABLE_DEPRECATED	pixman-private.h	8;"	d
PIXMAN_DISABLE_DEPRECATED	pixman-region16.c	29;"	d	file:
PIXMAN_END_DECLS	pixman.h	76;"	d
PIXMAN_END_DECLS	pixman.h	79;"	d
PIXMAN_EXPORT	pixman-compiler.h	64;"	d
PIXMAN_EXPORT	pixman-compiler.h	67;"	d
PIXMAN_EXPORT	pixman-compiler.h	69;"	d
PIXMAN_FB_ACCESSORS	pixman-access-accessors.c	1;"	d	file:
PIXMAN_FB_ACCESSORS	pixman-edge-accessors.c	2;"	d	file:
PIXMAN_FILTER_BEST	pixman.h	/^    PIXMAN_FILTER_BEST,$/;"	e	enum:__anon12
PIXMAN_FILTER_BILINEAR	pixman.h	/^    PIXMAN_FILTER_BILINEAR,$/;"	e	enum:__anon12
PIXMAN_FILTER_CONVOLUTION	pixman.h	/^    PIXMAN_FILTER_CONVOLUTION$/;"	e	enum:__anon12
PIXMAN_FILTER_FAST	pixman.h	/^    PIXMAN_FILTER_FAST,$/;"	e	enum:__anon12
PIXMAN_FILTER_GOOD	pixman.h	/^    PIXMAN_FILTER_GOOD,$/;"	e	enum:__anon12
PIXMAN_FILTER_NEAREST	pixman.h	/^    PIXMAN_FILTER_NEAREST,$/;"	e	enum:__anon12
PIXMAN_FORMAT	pixman.h	612;"	d
PIXMAN_FORMAT_A	pixman.h	621;"	d
PIXMAN_FORMAT_B	pixman.h	624;"	d
PIXMAN_FORMAT_BPP	pixman.h	619;"	d
PIXMAN_FORMAT_COLOR	pixman.h	642;"	d
PIXMAN_FORMAT_DEPTH	pixman.h	627;"	d
PIXMAN_FORMAT_G	pixman.h	623;"	d
PIXMAN_FORMAT_IS_WIDE	pixman-private.h	717;"	d
PIXMAN_FORMAT_R	pixman.h	622;"	d
PIXMAN_FORMAT_RGB	pixman.h	625;"	d
PIXMAN_FORMAT_TYPE	pixman.h	620;"	d
PIXMAN_FORMAT_VIS	pixman.h	626;"	d
PIXMAN_GET_THREAD_LOCAL	pixman-compiler.h	124;"	d
PIXMAN_GET_THREAD_LOCAL	pixman-compiler.h	131;"	d
PIXMAN_GET_THREAD_LOCAL	pixman-compiler.h	77;"	d
PIXMAN_GET_THREAD_LOCAL	pixman-compiler.h	84;"	d
PIXMAN_GRADIENT_WALKER_NEED_RESET	pixman-gradient-walker.c	218;"	d	file:
PIXMAN_H__	pixman.h	70;"	d
PIXMAN_IMAGE_GET_LINE	pixman-private.h	292;"	d
PIXMAN_MAX_INDEXED	pixman.h	594;"	d
PIXMAN_N_OPERATORS	pixman.h	/^    PIXMAN_N_OPERATORS,$/;"	e	enum:__anon13
PIXMAN_OP_ADD	pixman.h	/^    PIXMAN_OP_ADD			= 0x0c,$/;"	e	enum:__anon13
PIXMAN_OP_ATOP	pixman.h	/^    PIXMAN_OP_ATOP			= 0x09,$/;"	e	enum:__anon13
PIXMAN_OP_ATOP_REVERSE	pixman.h	/^    PIXMAN_OP_ATOP_REVERSE		= 0x0a,$/;"	e	enum:__anon13
PIXMAN_OP_CLEAR	pixman.h	/^    PIXMAN_OP_CLEAR			= 0x00,$/;"	e	enum:__anon13
PIXMAN_OP_COLOR_BURN	pixman.h	/^    PIXMAN_OP_COLOR_BURN                = 0x36,$/;"	e	enum:__anon13
PIXMAN_OP_COLOR_DODGE	pixman.h	/^    PIXMAN_OP_COLOR_DODGE               = 0x35,$/;"	e	enum:__anon13
PIXMAN_OP_CONJOINT_ATOP	pixman.h	/^    PIXMAN_OP_CONJOINT_ATOP		= 0x29,$/;"	e	enum:__anon13
PIXMAN_OP_CONJOINT_ATOP_REVERSE	pixman.h	/^    PIXMAN_OP_CONJOINT_ATOP_REVERSE	= 0x2a,$/;"	e	enum:__anon13
PIXMAN_OP_CONJOINT_CLEAR	pixman.h	/^    PIXMAN_OP_CONJOINT_CLEAR		= 0x20,$/;"	e	enum:__anon13
PIXMAN_OP_CONJOINT_DST	pixman.h	/^    PIXMAN_OP_CONJOINT_DST		= 0x22,$/;"	e	enum:__anon13
PIXMAN_OP_CONJOINT_IN	pixman.h	/^    PIXMAN_OP_CONJOINT_IN		= 0x25,$/;"	e	enum:__anon13
PIXMAN_OP_CONJOINT_IN_REVERSE	pixman.h	/^    PIXMAN_OP_CONJOINT_IN_REVERSE	= 0x26,$/;"	e	enum:__anon13
PIXMAN_OP_CONJOINT_OUT	pixman.h	/^    PIXMAN_OP_CONJOINT_OUT		= 0x27,$/;"	e	enum:__anon13
PIXMAN_OP_CONJOINT_OUT_REVERSE	pixman.h	/^    PIXMAN_OP_CONJOINT_OUT_REVERSE	= 0x28,$/;"	e	enum:__anon13
PIXMAN_OP_CONJOINT_OVER	pixman.h	/^    PIXMAN_OP_CONJOINT_OVER		= 0x23,$/;"	e	enum:__anon13
PIXMAN_OP_CONJOINT_OVER_REVERSE	pixman.h	/^    PIXMAN_OP_CONJOINT_OVER_REVERSE	= 0x24,$/;"	e	enum:__anon13
PIXMAN_OP_CONJOINT_SRC	pixman.h	/^    PIXMAN_OP_CONJOINT_SRC		= 0x21,$/;"	e	enum:__anon13
PIXMAN_OP_CONJOINT_XOR	pixman.h	/^    PIXMAN_OP_CONJOINT_XOR		= 0x2b,$/;"	e	enum:__anon13
PIXMAN_OP_DARKEN	pixman.h	/^    PIXMAN_OP_DARKEN                    = 0x33,$/;"	e	enum:__anon13
PIXMAN_OP_DIFFERENCE	pixman.h	/^    PIXMAN_OP_DIFFERENCE                = 0x39,$/;"	e	enum:__anon13
PIXMAN_OP_DISJOINT_ATOP	pixman.h	/^    PIXMAN_OP_DISJOINT_ATOP		= 0x19,$/;"	e	enum:__anon13
PIXMAN_OP_DISJOINT_ATOP_REVERSE	pixman.h	/^    PIXMAN_OP_DISJOINT_ATOP_REVERSE	= 0x1a,$/;"	e	enum:__anon13
PIXMAN_OP_DISJOINT_CLEAR	pixman.h	/^    PIXMAN_OP_DISJOINT_CLEAR		= 0x10,$/;"	e	enum:__anon13
PIXMAN_OP_DISJOINT_DST	pixman.h	/^    PIXMAN_OP_DISJOINT_DST		= 0x12,$/;"	e	enum:__anon13
PIXMAN_OP_DISJOINT_IN	pixman.h	/^    PIXMAN_OP_DISJOINT_IN		= 0x15,$/;"	e	enum:__anon13
PIXMAN_OP_DISJOINT_IN_REVERSE	pixman.h	/^    PIXMAN_OP_DISJOINT_IN_REVERSE	= 0x16,$/;"	e	enum:__anon13
PIXMAN_OP_DISJOINT_OUT	pixman.h	/^    PIXMAN_OP_DISJOINT_OUT		= 0x17,$/;"	e	enum:__anon13
PIXMAN_OP_DISJOINT_OUT_REVERSE	pixman.h	/^    PIXMAN_OP_DISJOINT_OUT_REVERSE	= 0x18,$/;"	e	enum:__anon13
PIXMAN_OP_DISJOINT_OVER	pixman.h	/^    PIXMAN_OP_DISJOINT_OVER		= 0x13,$/;"	e	enum:__anon13
PIXMAN_OP_DISJOINT_OVER_REVERSE	pixman.h	/^    PIXMAN_OP_DISJOINT_OVER_REVERSE	= 0x14,$/;"	e	enum:__anon13
PIXMAN_OP_DISJOINT_SRC	pixman.h	/^    PIXMAN_OP_DISJOINT_SRC		= 0x11,$/;"	e	enum:__anon13
PIXMAN_OP_DISJOINT_XOR	pixman.h	/^    PIXMAN_OP_DISJOINT_XOR		= 0x1b,$/;"	e	enum:__anon13
PIXMAN_OP_DST	pixman.h	/^    PIXMAN_OP_DST			= 0x02,$/;"	e	enum:__anon13
PIXMAN_OP_EXCLUSION	pixman.h	/^    PIXMAN_OP_EXCLUSION                 = 0x3a,$/;"	e	enum:__anon13
PIXMAN_OP_HARD_LIGHT	pixman.h	/^    PIXMAN_OP_HARD_LIGHT                = 0x37,$/;"	e	enum:__anon13
PIXMAN_OP_HSL_COLOR	pixman.h	/^    PIXMAN_OP_HSL_COLOR			= 0x3d,$/;"	e	enum:__anon13
PIXMAN_OP_HSL_HUE	pixman.h	/^    PIXMAN_OP_HSL_HUE			= 0x3b,$/;"	e	enum:__anon13
PIXMAN_OP_HSL_LUMINOSITY	pixman.h	/^    PIXMAN_OP_HSL_LUMINOSITY		= 0x3e$/;"	e	enum:__anon13
PIXMAN_OP_HSL_SATURATION	pixman.h	/^    PIXMAN_OP_HSL_SATURATION		= 0x3c,$/;"	e	enum:__anon13
PIXMAN_OP_IN	pixman.h	/^    PIXMAN_OP_IN			= 0x05,$/;"	e	enum:__anon13
PIXMAN_OP_IN_REVERSE	pixman.h	/^    PIXMAN_OP_IN_REVERSE		= 0x06,$/;"	e	enum:__anon13
PIXMAN_OP_LIGHTEN	pixman.h	/^    PIXMAN_OP_LIGHTEN                   = 0x34,$/;"	e	enum:__anon13
PIXMAN_OP_MULTIPLY	pixman.h	/^    PIXMAN_OP_MULTIPLY                  = 0x30,$/;"	e	enum:__anon13
PIXMAN_OP_NONE	pixman.h	/^    PIXMAN_OP_NONE = PIXMAN_N_OPERATORS$/;"	e	enum:__anon13
PIXMAN_OP_OUT	pixman.h	/^    PIXMAN_OP_OUT			= 0x07,$/;"	e	enum:__anon13
PIXMAN_OP_OUT_REVERSE	pixman.h	/^    PIXMAN_OP_OUT_REVERSE		= 0x08,$/;"	e	enum:__anon13
PIXMAN_OP_OVER	pixman.h	/^    PIXMAN_OP_OVER			= 0x03,$/;"	e	enum:__anon13
PIXMAN_OP_OVERLAY	pixman.h	/^    PIXMAN_OP_OVERLAY                   = 0x32,$/;"	e	enum:__anon13
PIXMAN_OP_OVER_REVERSE	pixman.h	/^    PIXMAN_OP_OVER_REVERSE		= 0x04,$/;"	e	enum:__anon13
PIXMAN_OP_SATURATE	pixman.h	/^    PIXMAN_OP_SATURATE			= 0x0d,$/;"	e	enum:__anon13
PIXMAN_OP_SCREEN	pixman.h	/^    PIXMAN_OP_SCREEN                    = 0x31,$/;"	e	enum:__anon13
PIXMAN_OP_SOFT_LIGHT	pixman.h	/^    PIXMAN_OP_SOFT_LIGHT                = 0x38,$/;"	e	enum:__anon13
PIXMAN_OP_SRC	pixman.h	/^    PIXMAN_OP_SRC			= 0x01,$/;"	e	enum:__anon13
PIXMAN_OP_XOR	pixman.h	/^    PIXMAN_OP_XOR			= 0x0b,$/;"	e	enum:__anon13
PIXMAN_OP_any	pixman-private.h	565;"	d
PIXMAN_PRIVATE_H	pixman-private.h	6;"	d
PIXMAN_RASTERIZE_EDGES	pixman-edge.c	/^PIXMAN_RASTERIZE_EDGES (pixman_image_t *image,$/;"	f	file:
PIXMAN_RASTERIZE_EDGES	pixman-edge.c	61;"	d	file:
PIXMAN_RASTERIZE_EDGES	pixman-edge.c	63;"	d	file:
PIXMAN_REGION_IN	pixman.h	/^    PIXMAN_REGION_IN,$/;"	e	enum:__anon14
PIXMAN_REGION_OUT	pixman.h	/^    PIXMAN_REGION_OUT,$/;"	e	enum:__anon14
PIXMAN_REGION_PART	pixman.h	/^    PIXMAN_REGION_PART$/;"	e	enum:__anon14
PIXMAN_REPEAT_NONE	pixman.h	/^    PIXMAN_REPEAT_NONE,$/;"	e	enum:__anon11
PIXMAN_REPEAT_NORMAL	pixman.h	/^    PIXMAN_REPEAT_NORMAL,$/;"	e	enum:__anon11
PIXMAN_REPEAT_PAD	pixman.h	/^    PIXMAN_REPEAT_PAD,$/;"	e	enum:__anon11
PIXMAN_REPEAT_REFLECT	pixman.h	/^    PIXMAN_REPEAT_REFLECT$/;"	e	enum:__anon11
PIXMAN_STD_FAST_PATH	pixman-private.h	619;"	d
PIXMAN_STD_FAST_PATH_CA	pixman-private.h	627;"	d
PIXMAN_TYPE_A	pixman.h	633;"	d
PIXMAN_TYPE_ABGR	pixman.h	635;"	d
PIXMAN_TYPE_ARGB	pixman.h	634;"	d
PIXMAN_TYPE_BGRA	pixman.h	640;"	d
PIXMAN_TYPE_COLOR	pixman.h	636;"	d
PIXMAN_TYPE_GRAY	pixman.h	637;"	d
PIXMAN_TYPE_OTHER	pixman.h	632;"	d
PIXMAN_TYPE_YUY2	pixman.h	638;"	d
PIXMAN_TYPE_YV12	pixman.h	639;"	d
PIXMAN_USE_INTERNAL_API	pixman-private.h	9;"	d
PIXMAN_VERSION	pixman-version.h	45;"	d
PIXMAN_VERSION_ENCODE	pixman-version.h	40;"	d
PIXMAN_VERSION_H__	pixman-version.h	28;"	d
PIXMAN_VERSION_MAJOR	pixman-version.h	34;"	d
PIXMAN_VERSION_MICRO	pixman-version.h	36;"	d
PIXMAN_VERSION_MINOR	pixman-version.h	35;"	d
PIXMAN_VERSION_STRING	pixman-version.h	38;"	d
PIXMAN_a1	pixman.h	/^    PIXMAN_a1 =		 PIXMAN_FORMAT(1,PIXMAN_TYPE_A,1,0,0,0),$/;"	e	enum:__anon15
PIXMAN_a1b1g1r1	pixman.h	/^    PIXMAN_a1b1g1r1 =	 PIXMAN_FORMAT(4,PIXMAN_TYPE_ABGR,1,1,1,1),$/;"	e	enum:__anon15
PIXMAN_a1b5g5r5	pixman.h	/^    PIXMAN_a1b5g5r5 =	 PIXMAN_FORMAT(16,PIXMAN_TYPE_ABGR,1,5,5,5),$/;"	e	enum:__anon15
PIXMAN_a1r1g1b1	pixman.h	/^    PIXMAN_a1r1g1b1 =	 PIXMAN_FORMAT(4,PIXMAN_TYPE_ARGB,1,1,1,1),$/;"	e	enum:__anon15
PIXMAN_a1r5g5b5	pixman.h	/^    PIXMAN_a1r5g5b5 =	 PIXMAN_FORMAT(16,PIXMAN_TYPE_ARGB,1,5,5,5),$/;"	e	enum:__anon15
PIXMAN_a2b10g10r10	pixman.h	/^    PIXMAN_a2b10g10r10 = PIXMAN_FORMAT(32,PIXMAN_TYPE_ABGR,2,10,10,10),$/;"	e	enum:__anon15
PIXMAN_a2b2g2r2	pixman.h	/^    PIXMAN_a2b2g2r2 =	 PIXMAN_FORMAT(8,PIXMAN_TYPE_ABGR,2,2,2,2),$/;"	e	enum:__anon15
PIXMAN_a2r10g10b10	pixman.h	/^    PIXMAN_a2r10g10b10 = PIXMAN_FORMAT(32,PIXMAN_TYPE_ARGB,2,10,10,10),$/;"	e	enum:__anon15
PIXMAN_a2r2g2b2	pixman.h	/^    PIXMAN_a2r2g2b2 =	 PIXMAN_FORMAT(8,PIXMAN_TYPE_ARGB,2,2,2,2),$/;"	e	enum:__anon15
PIXMAN_a4	pixman.h	/^    PIXMAN_a4 =		 PIXMAN_FORMAT(4,PIXMAN_TYPE_A,4,0,0,0),$/;"	e	enum:__anon15
PIXMAN_a4b4g4r4	pixman.h	/^    PIXMAN_a4b4g4r4 =	 PIXMAN_FORMAT(16,PIXMAN_TYPE_ABGR,4,4,4,4),$/;"	e	enum:__anon15
PIXMAN_a4r4g4b4	pixman.h	/^    PIXMAN_a4r4g4b4 =	 PIXMAN_FORMAT(16,PIXMAN_TYPE_ARGB,4,4,4,4),$/;"	e	enum:__anon15
PIXMAN_a8	pixman.h	/^    PIXMAN_a8 =		 PIXMAN_FORMAT(8,PIXMAN_TYPE_A,8,0,0,0),$/;"	e	enum:__anon15
PIXMAN_a8b8g8r8	pixman.h	/^    PIXMAN_a8b8g8r8 =	 PIXMAN_FORMAT(32,PIXMAN_TYPE_ABGR,8,8,8,8),$/;"	e	enum:__anon15
PIXMAN_a8r8g8b8	pixman.h	/^    PIXMAN_a8r8g8b8 =	 PIXMAN_FORMAT(32,PIXMAN_TYPE_ARGB,8,8,8,8),$/;"	e	enum:__anon15
PIXMAN_any	pixman-private.h	563;"	d
PIXMAN_b1g2r1	pixman.h	/^    PIXMAN_b1g2r1 =	 PIXMAN_FORMAT(4,PIXMAN_TYPE_ABGR,0,1,2,1),$/;"	e	enum:__anon15
PIXMAN_b2g3r3	pixman.h	/^    PIXMAN_b2g3r3 =	 PIXMAN_FORMAT(8,PIXMAN_TYPE_ABGR,0,3,3,2),$/;"	e	enum:__anon15
PIXMAN_b5g6r5	pixman.h	/^    PIXMAN_b5g6r5 =	 PIXMAN_FORMAT(16,PIXMAN_TYPE_ABGR,0,5,6,5),$/;"	e	enum:__anon15
PIXMAN_b8g8r8	pixman.h	/^    PIXMAN_b8g8r8 =	 PIXMAN_FORMAT(24,PIXMAN_TYPE_ABGR,0,8,8,8),$/;"	e	enum:__anon15
PIXMAN_b8g8r8a8	pixman.h	/^    PIXMAN_b8g8r8a8 =	 PIXMAN_FORMAT(32,PIXMAN_TYPE_BGRA,8,8,8,8),$/;"	e	enum:__anon15
PIXMAN_b8g8r8x8	pixman.h	/^    PIXMAN_b8g8r8x8 =	 PIXMAN_FORMAT(32,PIXMAN_TYPE_BGRA,0,8,8,8),$/;"	e	enum:__anon15
PIXMAN_c4	pixman.h	/^    PIXMAN_c4 =		 PIXMAN_FORMAT(4,PIXMAN_TYPE_COLOR,0,0,0,0),$/;"	e	enum:__anon15
PIXMAN_c8	pixman.h	/^    PIXMAN_c8 =		 PIXMAN_FORMAT(8,PIXMAN_TYPE_COLOR,0,0,0,0),$/;"	e	enum:__anon15
PIXMAN_g1	pixman.h	/^    PIXMAN_g1 =		 PIXMAN_FORMAT(1,PIXMAN_TYPE_GRAY,0,0,0,0),$/;"	e	enum:__anon15
PIXMAN_g4	pixman.h	/^    PIXMAN_g4 =		 PIXMAN_FORMAT(4,PIXMAN_TYPE_GRAY,0,0,0,0),$/;"	e	enum:__anon15
PIXMAN_g8	pixman.h	/^    PIXMAN_g8 =		 PIXMAN_FORMAT(8,PIXMAN_TYPE_GRAY,0,0,0,0),$/;"	e	enum:__anon15
PIXMAN_null	pixman-private.h	558;"	d
PIXMAN_pixbuf	pixman-private.h	560;"	d
PIXMAN_r1g2b1	pixman.h	/^    PIXMAN_r1g2b1 =	 PIXMAN_FORMAT(4,PIXMAN_TYPE_ARGB,0,1,2,1),$/;"	e	enum:__anon15
PIXMAN_r3g3b2	pixman.h	/^    PIXMAN_r3g3b2 =	 PIXMAN_FORMAT(8,PIXMAN_TYPE_ARGB,0,3,3,2),$/;"	e	enum:__anon15
PIXMAN_r5g6b5	pixman.h	/^    PIXMAN_r5g6b5 =	 PIXMAN_FORMAT(16,PIXMAN_TYPE_ARGB,0,5,6,5),$/;"	e	enum:__anon15
PIXMAN_r8g8b8	pixman.h	/^    PIXMAN_r8g8b8 =	 PIXMAN_FORMAT(24,PIXMAN_TYPE_ARGB,0,8,8,8),$/;"	e	enum:__anon15
PIXMAN_rpixbuf	pixman-private.h	561;"	d
PIXMAN_solid	pixman-private.h	559;"	d
PIXMAN_unknown	pixman-private.h	562;"	d
PIXMAN_x1b5g5r5	pixman.h	/^    PIXMAN_x1b5g5r5 =	 PIXMAN_FORMAT(16,PIXMAN_TYPE_ABGR,0,5,5,5),$/;"	e	enum:__anon15
PIXMAN_x1r5g5b5	pixman.h	/^    PIXMAN_x1r5g5b5 =	 PIXMAN_FORMAT(16,PIXMAN_TYPE_ARGB,0,5,5,5),$/;"	e	enum:__anon15
PIXMAN_x2b10g10r10	pixman.h	/^    PIXMAN_x2b10g10r10 = PIXMAN_FORMAT(32,PIXMAN_TYPE_ABGR,0,10,10,10),$/;"	e	enum:__anon15
PIXMAN_x2r10g10b10	pixman.h	/^    PIXMAN_x2r10g10b10 = PIXMAN_FORMAT(32,PIXMAN_TYPE_ARGB,0,10,10,10),$/;"	e	enum:__anon15
PIXMAN_x4a4	pixman.h	/^    PIXMAN_x4a4 =	 PIXMAN_FORMAT(8,PIXMAN_TYPE_A,4,0,0,0),$/;"	e	enum:__anon15
PIXMAN_x4b4g4r4	pixman.h	/^    PIXMAN_x4b4g4r4 =	 PIXMAN_FORMAT(16,PIXMAN_TYPE_ABGR,0,4,4,4),$/;"	e	enum:__anon15
PIXMAN_x4c4	pixman.h	/^    PIXMAN_x4c4 =	 PIXMAN_FORMAT(8,PIXMAN_TYPE_COLOR,0,0,0,0),$/;"	e	enum:__anon15
PIXMAN_x4g4	pixman.h	/^    PIXMAN_x4g4 =	 PIXMAN_FORMAT(8,PIXMAN_TYPE_GRAY,0,0,0,0),$/;"	e	enum:__anon15
PIXMAN_x4r4g4b4	pixman.h	/^    PIXMAN_x4r4g4b4 =	 PIXMAN_FORMAT(16,PIXMAN_TYPE_ARGB,0,4,4,4),$/;"	e	enum:__anon15
PIXMAN_x8b8g8r8	pixman.h	/^    PIXMAN_x8b8g8r8 =	 PIXMAN_FORMAT(32,PIXMAN_TYPE_ABGR,0,8,8,8),$/;"	e	enum:__anon15
PIXMAN_x8r8g8b8	pixman.h	/^    PIXMAN_x8r8g8b8 =	 PIXMAN_FORMAT(32,PIXMAN_TYPE_ARGB,0,8,8,8),$/;"	e	enum:__anon15
PIXMAN_yuy2	pixman.h	/^    PIXMAN_yuy2 =	 PIXMAN_FORMAT(16,PIXMAN_TYPE_YUY2,0,0,0,0),$/;"	e	enum:__anon15
PIXMAN_yv12	pixman.h	/^    PIXMAN_yv12 =	 PIXMAN_FORMAT(12,PIXMAN_TYPE_YV12,0,0,0,0)$/;"	e	enum:__anon15
PIXREGION_BOX	pixman-region.c	81;"	d	file:
PIXREGION_BOXPTR	pixman-region.c	80;"	d	file:
PIXREGION_END	pixman-region.c	83;"	d	file:
PIXREGION_NAR	pixman-region.c	74;"	d	file:
PIXREGION_NIL	pixman-region.c	72;"	d	file:
PIXREGION_NUMRECTS	pixman-region.c	75;"	d	file:
PIXREGION_RECTS	pixman-region.c	77;"	d	file:
PIXREGION_SIZE	pixman-region.c	76;"	d	file:
PIXREGION_SZOF	pixman-region.c	/^PIXREGION_SZOF (size_t n)$/;"	f	file:
PIXREGION_TOP	pixman-region.c	82;"	d	file:
PREFETCH_TYPE_CURRENT	pixman-arm-neon-asm.h	/^    .set PREFETCH_TYPE_CURRENT, PREFETCH_TYPE_SIMPLE$/;"	v
PREFIX	pixman-region16.c	43;"	d	file:
PREFIX	pixman-region32.c	41;"	d	file:
PUT_4	pixman-edge.c	80;"	d	file:
RADIAL	pixman-private.h	/^    RADIAL,$/;"	e	enum:__anon2
RASTERIZE_EDGES	pixman-edge-imp.h	/^RASTERIZE_EDGES (pixman_image_t  *image,$/;"	f
RASTERIZE_EDGES	pixman-edge.c	101;"	d	file:
RASTERIZE_EDGES	pixman-edge.c	110;"	d	file:
RASTERIZE_EDGES	pixman-edge.c	114;"	d	file:
RASTERIZE_EDGES	pixman-edge.c	71;"	d	file:
RB_MASK	pixman-combine32.h	17;"	d
RB_MASK	pixman-combine64.h	17;"	d
RB_MASK_PLUS_ONE	pixman-combine32.h	20;"	d
RB_MASK_PLUS_ONE	pixman-combine64.h	20;"	d
RB_ONE_HALF	pixman-combine32.h	19;"	d
RB_ONE_HALF	pixman-combine64.h	19;"	d
READ	pixman-accessor.h	32;"	d
READ	pixman-accessor.h	5;"	d
READ	pixman-region.c	2516;"	d	file:
RECTALLOC	pixman-region.c	225;"	d	file:
RECTALLOC_BAIL	pixman-region.c	214;"	d	file:
RED_16	pixman-combine64.h	23;"	d
RED_8	pixman-combine32.h	23;"	d
RENDER_EDGE_STEP_BIG	pixman-edge.c	49;"	d	file:
RENDER_EDGE_STEP_SMALL	pixman-edge.c	35;"	d	file:
RENDER_SAMPLES_X	pixman-private.h	359;"	d
RGB15_TO_ENTRY	pixman-access.c	48;"	d	file:
RGB24_TO_ENTRY	pixman-access.c	51;"	d	file:
RGB24_TO_ENTRY_Y	pixman-access.c	54;"	d	file:
RIGHT_MASK	pixman-edge-imp.h	89;"	d
R_MASK	pixman-combine32.h	14;"	d
R_MASK	pixman-combine64.h	14;"	d
R_SHIFT	pixman-combine32.h	11;"	d
R_SHIFT	pixman-combine64.h	11;"	d
SAT	pixman-combine32.c	1116;"	d	file:
SAT	pixman-combine32.c	889;"	d	file:
SAT	pixman-combine64.c	1116;"	d	file:
SAT	pixman-combine64.c	889;"	d	file:
SCALED_NEAREST_FLAGS	pixman-fast-path.c	1806;"	d	file:
SCANLINE_BUFFER_LENGTH	pixman-general.c	42;"	d	file:
SCREEN_SHIFT_LEFT	pixman-private.h	724;"	d
SCREEN_SHIFT_LEFT	pixman-private.h	727;"	d
SCREEN_SHIFT_RIGHT	pixman-private.h	725;"	d
SCREEN_SHIFT_RIGHT	pixman-private.h	728;"	d
SET_BIT	pixman-fast-path.c	1039;"	d	file:
SHIFT_4	pixman-edge.c	74;"	d	file:
SHIFT_4	pixman-edge.c	76;"	d	file:
SIMPLE_NEAREST_FAST_PATH	pixman-fast-path.c	1818;"	d	file:
SIZEOF_LONG	confdefs.h	25;"	d
SIZEOF_LONG	config.h	75;"	d
SOLID	pixman-private.h	/^    SOLID$/;"	e	enum:__anon2
SOURCE_IMAGE_CLASS_HORIZONTAL	pixman-private.h	/^    SOURCE_IMAGE_CLASS_HORIZONTAL,$/;"	e	enum:__anon3
SOURCE_IMAGE_CLASS_UNKNOWN	pixman-private.h	/^    SOURCE_IMAGE_CLASS_UNKNOWN,$/;"	e	enum:__anon3
SOURCE_IMAGE_CLASS_VERTICAL	pixman-private.h	/^    SOURCE_IMAGE_CLASS_VERTICAL,$/;"	e	enum:__anon3
SPLIT	pixman-access.c	1828;"	d	file:
SPLIT_A	pixman-access.c	1822;"	d	file:
SRC	pixman-arm-neon-asm.h	/^    add         SRC, SRC, SRC_STRIDE, lsl #src_bpp_shift$/;"	v
SRC	pixman-arm-neon-asm.h	/^    sub         SRC, SRC, W, lsl #src_bpp_shift$/;"	v
SRC_STRIDE	pixman-arm-neon-asm.h	/^    add         SRC, SRC, SRC_STRIDE, lsl #src_bpp_shift$/;"	v
SRC_STRIDE	pixman-arm-neon-asm.h	/^    sub         SRC_STRIDE, SRC_STRIDE, W$/;"	v
SRC_STRIDE	pixman-arm-neon-asm.h	/^    sub         SRC_STRIDE, SRC_STRIDE, W, lsl #1$/;"	v
SSE	pixman-cpu.c	/^    SSE = 0x6,$/;"	e	enum:__anon8	file:
SSE2	pixman-cpu.c	/^    SSE2 = 0x8,$/;"	e	enum:__anon8	file:
STDC_HEADERS	confdefs.h	13;"	d
STDC_HEADERS	config.h	78;"	d
STEP_ALPHA	pixman-edge.c	87;"	d	file:
STEP_ALPHA	pixman-edge.c	99;"	d	file:
STEP_X_BIG	pixman-private.h	354;"	d
STEP_X_SMALL	pixman-private.h	353;"	d
STEP_Y_BIG	pixman-private.h	348;"	d
STEP_Y_SMALL	pixman-private.h	347;"	d
STORE_4	pixman-access.c	2444;"	d	file:
STORE_4	pixman-access.c	2457;"	d	file:
STORE_8	pixman-access.c	2441;"	d	file:
STORE_VECTOR	pixman-vmx.c	178;"	d	file:
SUBSUMES	pixman-region.c	181;"	d	file:
TEST_BIT	pixman-fast-path.c	1037;"	d	file:
TIMER_BEGIN	pixman-private.h	849;"	d
TIMER_END	pixman-private.h	864;"	d
TOOLCHAIN_SUPPORTS__THREAD	config.h	81;"	d
TRUE	pixman-private.h	678;"	d
UINT32_MAX	pixman-compiler.h	42;"	d
UINT32_MIN	pixman-compiler.h	38;"	d
UINT64	pixman-mmx.c	/^UINT64 (__m64 x)$/;"	f	file:
UN16_rb_ADD_UN16_rb	pixman-combine64.h	64;"	d
UN16_rb_MUL_UN16	pixman-combine64.h	52;"	d
UN16_rb_MUL_UN16_rb	pixman-combine64.h	75;"	d
UN16x4_ADD_UN16x4	pixman-combine64.h	216;"	d
UN16x4_MUL_UN16	pixman-combine64.h	88;"	d
UN16x4_MUL_UN16_ADD_UN16x4	pixman-combine64.h	105;"	d
UN16x4_MUL_UN16_ADD_UN16x4_MUL_UN16	pixman-combine64.h	126;"	d
UN16x4_MUL_UN16x4	pixman-combine64.h	149;"	d
UN16x4_MUL_UN16x4_ADD_UN16x4	pixman-combine64.h	168;"	d
UN16x4_MUL_UN16x4_ADD_UN16x4_MUL_UN16	pixman-combine64.h	191;"	d
UN8_rb_ADD_UN8_rb	pixman-combine32.h	64;"	d
UN8_rb_MUL_UN8	pixman-combine32.h	52;"	d
UN8_rb_MUL_UN8_rb	pixman-combine32.h	75;"	d
UN8x4_ADD_UN8x4	pixman-combine32.h	216;"	d
UN8x4_MUL_UN8	pixman-combine32.h	88;"	d
UN8x4_MUL_UN8_ADD_UN8x4	pixman-combine32.h	105;"	d
UN8x4_MUL_UN8_ADD_UN8x4_MUL_UN8	pixman-combine32.h	126;"	d
UN8x4_MUL_UN8x4	pixman-combine32.h	149;"	d
UN8x4_MUL_UN8x4_ADD_UN8x4	pixman-combine32.h	168;"	d
UN8x4_MUL_UN8x4_ADD_UN8x4_MUL_UN8	pixman-combine32.h	191;"	d
UPDATE_BITMASK	pixman-fast-path.c	1031;"	d	file:
UPDATE_BITMASK	pixman-fast-path.c	1034;"	d	file:
USE_GCC_INLINE_ASM	config.h	90;"	d
USE_MMX	config.h	93;"	d
USE_SSE2	config.h	96;"	d
VERSION	confdefs.h	12;"	d
VERSION	config.h	102;"	d
W	pixman-arm-neon-asm.h	/^    cmp         W, #pixblock_size$/;"	v
W	pixman-arm-neon-asm.h	/^    sub         DST_STRIDE, DST_STRIDE, W, lsl #1$/;"	v
W	pixman-arm-neon-asm.h	/^    sub         DST_W, DST_W, W, lsl #dst_bpp_shift$/;"	v
W	pixman-arm-neon-asm.h	/^    sub         MASK, MASK, W, lsl #mask_bpp_shift$/;"	v
W	pixman-arm-neon-asm.h	/^    sub         MASK_STRIDE, MASK_STRIDE, W, lsl #1$/;"	v
W	pixman-arm-neon-asm.h	/^    sub         SRC, SRC, W, lsl #src_bpp_shift$/;"	v
W	pixman-arm-neon-asm.h	/^    sub         SRC_STRIDE, SRC_STRIDE, W, lsl #1$/;"	v
W	pixman-arm-neon-asm.h	/^    sub         W, W, #(lowbit * 8 \/ dst_w_bpp)$/;"	v
W	pixman-arm-neon-asm.h	/^    subs        W, W, #(pixblock_size * 2)$/;"	v
W	pixman-arm-neon-asm.h	/^    subs        W, W, #pixblock_size$/;"	v
W	pixman-arm-neon-asm.h	/^    tst         W, #chunk_size$/;"	v
W	pixman-arm-neon-asm.h	/^    tst         W, #pixblock_size$/;"	v
WORDS_BIGENDIAN	config.h	108;"	d
WRITE	pixman-accessor.h	33;"	d
WRITE	pixman-accessor.h	7;"	d
X_FRAC_FIRST	pixman-private.h	356;"	d
X_FRAC_LAST	pixman-private.h	357;"	d
YV12_SETUP	pixman-access.c	61;"	d	file:
YV12_U	pixman-access.c	81;"	d	file:
YV12_V	pixman-access.c	85;"	d	file:
YV12_Y	pixman-access.c	78;"	d	file:
Y_FRAC_FIRST	pixman-private.h	350;"	d
Y_FRAC_LAST	pixman-private.h	351;"	d
_FAST_PATH_STANDARD_FLAGS	pixman-private.h	587;"	d
_broken_data_	pixman-region.c	/^static const region_data_type_t PREFIX (_broken_data_) = { 0, 0 };$/;"	v	file:
_contains_point	pixman-region.c	/^PREFIX (_contains_point) (region_type_t * region,$/;"	f
_contains_rectangle	pixman-region.c	/^PIXMAN_EXPORT PREFIX (_contains_rectangle) (region_type_t *  region,$/;"	f
_copy	pixman-region.c	/^PREFIX (_copy) (region_type_t *dst, region_type_t *src)$/;"	f
_empty_box_	pixman-region.c	/^static const box_type_t PREFIX (_empty_box_) = { 0, 0, 0, 0 };$/;"	v	file:
_empty_data_	pixman-region.c	/^static const region_data_type_t PREFIX (_empty_data_) = { 0, 0 };$/;"	v	file:
_equal	pixman-region.c	/^PREFIX (_equal) (region_type_t *reg1, region_type_t *reg2)$/;"	f
_extents	pixman-region.c	/^PREFIX (_extents) (region_type_t * region)$/;"	f
_fini	pixman-region.c	/^PREFIX (_fini) (region_type_t *region)$/;"	f
_init	pixman-region.c	/^PREFIX (_init) (region_type_t *region)$/;"	f
_init_from_image	pixman-region.c	/^PREFIX (_init_from_image) (region_type_t *region,$/;"	f
_init_rect	pixman-region.c	/^PREFIX (_init_rect) (region_type_t *	region,$/;"	f
_init_rects	pixman-region.c	/^PREFIX (_init_rects) (region_type_t *region,$/;"	f
_init_with_extents	pixman-region.c	/^PREFIX (_init_with_extents) (region_type_t *region, box_type_t *extents)$/;"	f
_intersect	pixman-region.c	/^PREFIX (_intersect) (region_type_t *     new_reg,$/;"	f
_inverse	pixman-region.c	/^PIXMAN_EXPORT PREFIX (_inverse) (region_type_t *new_reg,  \/* Destination region *\/$/;"	f
_m_empty	pixman-x64-mmx-emulation.h	/^_m_empty ()$/;"	f
_m_from_int	pixman-x64-mmx-emulation.h	/^_m_from_int (int a)$/;"	f
_m_packuswb	pixman-x64-mmx-emulation.h	/^_m_packuswb (__m64 m1, __m64 m2)          \/* unoptimized *\/$/;"	f
_m_paddusb	pixman-x64-mmx-emulation.h	/^_m_paddusb (__m64 a, __m64 b)        \/* unoptimized *\/$/;"	f
_m_paddusw	pixman-x64-mmx-emulation.h	/^_m_paddusw (__m64 a, __m64 b)        \/* unoptimized *\/$/;"	f
_m_pand	pixman-x64-mmx-emulation.h	/^_m_pand (__m64 a, __m64 b)$/;"	f
_m_pmulhuw	pixman-x64-mmx-emulation.h	/^_m_pmulhuw (__m64 a, __m64 b)        \/* unoptimized *\/$/;"	f
_m_pmullw	pixman-x64-mmx-emulation.h	/^_m_pmullw (__m64 a, __m64 b)        \/* unoptimized *\/$/;"	f
_m_pmullw2	pixman-x64-mmx-emulation.h	/^_m_pmullw2 (__m64 a, __m64 b)        \/* unoptimized *\/$/;"	f
_m_por	pixman-x64-mmx-emulation.h	/^_m_por (__m64 a, __m64 b)$/;"	f
_m_pshufw	pixman-x64-mmx-emulation.h	/^_m_pshufw (__m64 a, int n)         \/* unoptimized *\/$/;"	f
_m_psllqi	pixman-x64-mmx-emulation.h	/^__inline __m64 _m_psllqi (__m64 m, int n)$/;"	f
_m_psrlqi	pixman-x64-mmx-emulation.h	/^__inline __m64 _m_psrlqi (__m64 m, int n)$/;"	f
_m_psrlwi	pixman-x64-mmx-emulation.h	/^__inline __m64 _m_psrlwi (__m64 a, int n)       \/* unoptimized *\/$/;"	f
_m_punpckhbw	pixman-x64-mmx-emulation.h	/^__inline __m64 _m_punpckhbw (__m64 m1, __m64 m2)          \/* unoptimized *\/$/;"	f
_m_punpcklbw	pixman-x64-mmx-emulation.h	/^__inline __m64 _m_punpcklbw (__m64 m1, __m64 m2)          \/* unoptimized *\/$/;"	f
_m_pxor	pixman-x64-mmx-emulation.h	/^_m_pxor (__m64 a, __m64 b)$/;"	f
_m_to_int	pixman-x64-mmx-emulation.h	/^_m_to_int (__m64 m)$/;"	f
_mm_movepi64_pi64	pixman-x64-mmx-emulation.h	/^_mm_movepi64_pi64 (__m128i a)$/;"	f
_mm_set1_pi16	pixman-x64-mmx-emulation.h	/^_mm_set1_pi16 (short w)$/;"	f
_mm_set_pi32	pixman-x64-mmx-emulation.h	/^_mm_set_pi32 (int i1,   int i0)$/;"	f
_mm_setzero_si64	pixman-x64-mmx-emulation.h	/^_mm_setzero_si64 ()$/;"	f
_n_rects	pixman-region.c	/^PREFIX (_n_rects) (region_type_t *region)$/;"	f
_not_empty	pixman-region.c	/^PREFIX (_not_empty) (region_type_t * region)$/;"	f
_pixman_bits_image_setup_raw_accessors	pixman-access.c	/^_pixman_bits_image_setup_raw_accessors (bits_image_t *image)$/;"	f
_pixman_bits_image_setup_raw_accessors_accessors	pixman-access.c	/^_pixman_bits_image_setup_raw_accessors_accessors (bits_image_t *image)$/;"	f
_pixman_choose_implementation	pixman-cpu.c	/^_pixman_choose_implementation (void)$/;"	f
_pixman_edge_multi_init	pixman-trap.c	/^_pixman_edge_multi_init (pixman_edge_t * e,$/;"	f	file:
_pixman_gradient_walker_init	pixman-gradient-walker.c	/^_pixman_gradient_walker_init (pixman_gradient_walker_t *walker,$/;"	f
_pixman_gradient_walker_pixel	pixman-gradient-walker.c	/^_pixman_gradient_walker_pixel (pixman_gradient_walker_t *walker,$/;"	f
_pixman_gradient_walker_reset	pixman-gradient-walker.c	/^_pixman_gradient_walker_reset (pixman_gradient_walker_t *walker,$/;"	f
_pixman_image_allocate	pixman-image.c	/^_pixman_image_allocate (void)$/;"	f
_pixman_image_classify	pixman-image.c	/^_pixman_image_classify (pixman_image_t *image,$/;"	f
_pixman_image_get_scanline_32	pixman-image.c	/^_pixman_image_get_scanline_32 (pixman_image_t *image,$/;"	f
_pixman_image_get_scanline_64	pixman-image.c	/^_pixman_image_get_scanline_64 (pixman_image_t *image,$/;"	f
_pixman_image_get_scanline_generic_64	pixman-image.c	/^_pixman_image_get_scanline_generic_64 (pixman_image_t * image,$/;"	f
_pixman_image_get_solid	pixman-image.c	/^_pixman_image_get_solid (pixman_image_t *     image,$/;"	f
_pixman_image_reset_clip_region	pixman-image.c	/^_pixman_image_reset_clip_region (pixman_image_t *image)$/;"	f
_pixman_image_store_scanline_32	pixman-bits-image.c	/^_pixman_image_store_scanline_32 (bits_image_t *  image,$/;"	f
_pixman_image_store_scanline_64	pixman-bits-image.c	/^_pixman_image_store_scanline_64 (bits_image_t *  image,$/;"	f
_pixman_image_validate	pixman-image.c	/^_pixman_image_validate (pixman_image_t *image)$/;"	f
_pixman_implementation_blt	pixman-implementation.c	/^_pixman_implementation_blt (pixman_implementation_t * imp,$/;"	f
_pixman_implementation_combine_32	pixman-implementation.c	/^_pixman_implementation_combine_32 (pixman_implementation_t * imp,$/;"	f
_pixman_implementation_combine_32_ca	pixman-implementation.c	/^_pixman_implementation_combine_32_ca (pixman_implementation_t * imp,$/;"	f
_pixman_implementation_combine_64	pixman-implementation.c	/^_pixman_implementation_combine_64 (pixman_implementation_t * imp,$/;"	f
_pixman_implementation_combine_64_ca	pixman-implementation.c	/^_pixman_implementation_combine_64_ca (pixman_implementation_t * imp,$/;"	f
_pixman_implementation_create	pixman-implementation.c	/^_pixman_implementation_create (pixman_implementation_t *delegate,$/;"	f
_pixman_implementation_create_arm_simd	pixman-arm-simd.c	/^_pixman_implementation_create_arm_simd (void)$/;"	f
_pixman_implementation_create_fast_path	pixman-fast-path.c	/^_pixman_implementation_create_fast_path (void)$/;"	f
_pixman_implementation_create_general	pixman-general.c	/^_pixman_implementation_create_general (void)$/;"	f
_pixman_implementation_create_mmx	pixman-mmx.c	/^_pixman_implementation_create_mmx (void)$/;"	f
_pixman_implementation_create_sse2	pixman-sse2.c	/^_pixman_implementation_create_sse2 (void)$/;"	f
_pixman_implementation_create_vmx	pixman-vmx.c	/^_pixman_implementation_create_vmx (void)$/;"	f
_pixman_implementation_fill	pixman-implementation.c	/^_pixman_implementation_fill (pixman_implementation_t *imp,$/;"	f
_pixman_init_gradient	pixman-image.c	/^_pixman_init_gradient (gradient_t *                  gradient,$/;"	f
_pixman_log_error	pixman-private.h	792;"	d
_pixman_log_error	pixman-utils.c	/^_pixman_log_error (const char *function, const char *message)$/;"	f
_pixman_setup_combiner_functions_32	pixman-combine32.c	/^_pixman_setup_combiner_functions_32 (pixman_implementation_t *imp)$/;"	f
_pixman_setup_combiner_functions_64	pixman-combine64.c	/^_pixman_setup_combiner_functions_64 (pixman_implementation_t *imp)$/;"	f
_print	pixman-region.c	/^PREFIX (_print) (region_type_t *rgn)$/;"	f
_rectangles	pixman-region.c	/^PREFIX (_rectangles) (region_type_t *region,$/;"	f
_reset	pixman-region.c	/^PREFIX (_reset) (region_type_t *region, box_type_t *box)$/;"	f
_selfcheck	pixman-region.c	/^PREFIX (_selfcheck) (region_type_t *reg)$/;"	f
_subtract	pixman-region.c	/^PREFIX (_subtract) (region_type_t *reg_d,$/;"	f
_translate	pixman-region.c	/^PREFIX (_translate) (region_type_t *region, int x, int y)$/;"	f
_union	pixman-region.c	/^PREFIX (_union) (region_type_t *new_reg,$/;"	f
_union_rect	pixman-region.c	/^PREFIX (_union_rect) (region_type_t *dest,$/;"	f
a	pixman-matrix.c	/^static const int a[3] = { 3, 3, 2 };$/;"	v	file:
abits	pixman-arm-neon-asm.h	/^.macro pixld numpix, bpp, basereg, mem_operand, abits=0$/;"	v
abits	pixman-arm-neon-asm.h	/^.macro pixst numpix, bpp, basereg, mem_operand, abits=0$/;"	v
accessors	pixman-access.c	/^static const format_info_t accessors[] =$/;"	v	file:
alloc_data	pixman-region.c	/^alloc_data (size_t n)$/;"	f	file:
alpha	pixman.h	/^    uint16_t    alpha;$/;"	m	struct:pixman_color
alpha_map	pixman-private.h	/^    bits_image_t *              alpha_map;$/;"	m	struct:image_common
alpha_origin_x	pixman-private.h	/^    int                         alpha_origin_x;$/;"	m	struct:image_common
alpha_origin_y	pixman-private.h	/^    int                         alpha_origin_y;$/;"	m	struct:image_common
angle	pixman-private.h	/^    pixman_fixed_t       angle;$/;"	m	struct:conical_gradient
apply_workaround	pixman.c	/^apply_workaround (pixman_image_t *image,$/;"	f	file:
arm_has_iwmmxt	pixman-cpu.c	/^static pixman_bool_t arm_has_iwmmxt = FALSE;$/;"	v	file:
arm_has_neon	pixman-cpu.c	/^static pixman_bool_t arm_has_neon = FALSE;$/;"	v	file:
arm_has_v6	pixman-cpu.c	/^static pixman_bool_t arm_has_v6 = FALSE;$/;"	v	file:
arm_has_v7	pixman-cpu.c	/^static pixman_bool_t arm_has_v7 = FALSE;$/;"	v	file:
arm_has_vfp	pixman-cpu.c	/^static pixman_bool_t arm_has_vfp = FALSE;$/;"	v	file:
arm_neon_blt	pixman-arm-neon.c	/^arm_neon_blt (pixman_implementation_t *imp,$/;"	f	file:
arm_neon_fast_paths	pixman-arm-neon.c	/^static const pixman_fast_path_t arm_neon_fast_paths[] =$/;"	v	file:
arm_neon_fill	pixman-arm-neon.c	/^arm_neon_fill (pixman_implementation_t *imp,$/;"	f	file:
arm_simd_fast_paths	pixman-arm-simd.c	/^static const pixman_fast_path_t arm_simd_fast_paths[] =$/;"	v	file:
arm_tests_initialized	pixman-cpu.c	/^static pixman_bool_t arm_tests_initialized = FALSE;$/;"	v	file:
b	pixman-matrix.c	/^static const int b[3] = { 2, 1, 1 };$/;"	v	file:
basereg	pixman-arm-neon-asm.h	/^                              %(basereg+6), %(basereg+7), mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^                      %(basereg+6), %(basereg+7), mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^        pixldst0 op, 16, %(basereg+0), 1, mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^        pixldst0 op, 16, %(basereg+0), 2, mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^        pixldst0 op, 16, %(basereg+0), 3, mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^        pixldst0 op, 32, %(basereg+0), 1, mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 2, mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 3, mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 4, mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 5, mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 6, mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 7, mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixld numpix, bpp, basereg, mem_operand, %(bpp * numpix)$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixld numpix, bpp, basereg, mem_operand, 128$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst0 op, 8, %(basereg+0), 1, mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst1 op, elem_size, %(basereg+1), mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst2 op, elem_size, %(basereg+2), %(basereg+3), mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst3 vld3, 8, %(basereg+3), %(basereg+4), %(basereg+5), mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst3 vst3, 8, %(basereg+3), %(basereg+4), %(basereg+5), mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 1, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 2, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 3, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 4, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 5, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 6, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 7, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 1, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 2, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 3, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 4, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 5, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 6, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 7, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst4 op, elem_size, %(basereg+4), %(basereg+5), \\$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst4 vld4, 8, %(basereg+4), %(basereg+5), \\$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixldst4 vst4, 8, %(basereg+4), %(basereg+5), \\$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixst numpix, bpp, basereg, mem_operand, %(bpp * numpix)$/;"	v
basereg	pixman-arm-neon-asm.h	/^    pixst numpix, bpp, basereg, mem_operand, 128$/;"	v
basereg	pixman-arm-neon-asm.h	/^.macro pixld numpix, bpp, basereg, mem_operand, abits=0$/;"	v
basereg	pixman-arm-neon-asm.h	/^.macro pixld_a numpix, bpp, basereg, mem_operand$/;"	v
basereg	pixman-arm-neon-asm.h	/^.macro pixldst numbytes, op, elem_size, basereg, mem_operand, abits$/;"	v
basereg	pixman-arm-neon-asm.h	/^.macro pixst numpix, bpp, basereg, mem_operand, abits=0$/;"	v
basereg	pixman-arm-neon-asm.h	/^.macro pixst_a numpix, bpp, basereg, mem_operand$/;"	v
bilinear_interpolation	pixman-bits-image.c	/^bilinear_interpolation (uint32_t tl, uint32_t tr,$/;"	f	file:
bitmap_addrect	pixman-region.c	/^bitmap_addrect (region_type_t *reg,$/;"	f	file:
bits	pixman-private.h	/^    bits_image_t       bits;$/;"	m	union:pixman_image
bits	pixman-private.h	/^    uint32_t *                 bits;$/;"	m	struct:bits_image
bits_image	pixman-private.h	/^struct bits_image$/;"	s
bits_image_fetch_bilinear_no_repeat_8888	pixman-bits-image.c	/^bits_image_fetch_bilinear_no_repeat_8888 (pixman_image_t * ima,$/;"	f	file:
bits_image_fetch_pixel_alpha	pixman-bits-image.c	/^bits_image_fetch_pixel_alpha (bits_image_t *image, int x, int y)$/;"	f	file:
bits_image_fetch_pixel_bilinear	pixman-bits-image.c	/^bits_image_fetch_pixel_bilinear (bits_image_t   *image,$/;"	f	file:
bits_image_fetch_pixel_convolution	pixman-bits-image.c	/^bits_image_fetch_pixel_convolution (bits_image_t   *image,$/;"	f	file:
bits_image_fetch_pixel_filtered	pixman-bits-image.c	/^bits_image_fetch_pixel_filtered (bits_image_t *image,$/;"	f	file:
bits_image_fetch_pixel_nearest	pixman-bits-image.c	/^bits_image_fetch_pixel_nearest (bits_image_t   *image,$/;"	f	file:
bits_image_fetch_solid_32	pixman-bits-image.c	/^bits_image_fetch_solid_32 (pixman_image_t * image,$/;"	f	file:
bits_image_fetch_solid_64	pixman-bits-image.c	/^bits_image_fetch_solid_64 (pixman_image_t * image,$/;"	f	file:
bits_image_fetch_transformed	pixman-bits-image.c	/^bits_image_fetch_transformed (pixman_image_t * image,$/;"	f	file:
bits_image_fetch_untransformed_32	pixman-bits-image.c	/^bits_image_fetch_untransformed_32 (pixman_image_t * image,$/;"	f	file:
bits_image_fetch_untransformed_64	pixman-bits-image.c	/^bits_image_fetch_untransformed_64 (pixman_image_t * image,$/;"	f	file:
bits_image_fetch_untransformed_repeat_none	pixman-bits-image.c	/^bits_image_fetch_untransformed_repeat_none (bits_image_t *image,$/;"	f	file:
bits_image_fetch_untransformed_repeat_normal	pixman-bits-image.c	/^bits_image_fetch_untransformed_repeat_normal (bits_image_t *image,$/;"	f	file:
bits_image_property_changed	pixman-bits-image.c	/^bits_image_property_changed (pixman_image_t *image)$/;"	f	file:
bits_image_store_scanline_32	pixman-bits-image.c	/^bits_image_store_scanline_32 (bits_image_t *  image,$/;"	f	file:
bits_image_store_scanline_64	pixman-bits-image.c	/^bits_image_store_scanline_64 (bits_image_t *  image,$/;"	f	file:
bits_image_t	pixman-private.h	/^typedef struct bits_image bits_image_t;$/;"	t	typeref:struct:bits_image
blend_color_burn	pixman-combine32.c	/^blend_color_burn (uint32_t dca, uint32_t da, uint32_t sca, uint32_t sa)$/;"	f	file:
blend_color_burn	pixman-combine64.c	/^blend_color_burn (uint64_t dca, uint64_t da, uint64_t sca, uint64_t sa)$/;"	f	file:
blend_color_dodge	pixman-combine32.c	/^blend_color_dodge (uint32_t dca, uint32_t da, uint32_t sca, uint32_t sa)$/;"	f	file:
blend_color_dodge	pixman-combine64.c	/^blend_color_dodge (uint64_t dca, uint64_t da, uint64_t sca, uint64_t sa)$/;"	f	file:
blend_darken	pixman-combine32.c	/^blend_darken (uint32_t dca, uint32_t da, uint32_t sca, uint32_t sa)$/;"	f	file:
blend_darken	pixman-combine64.c	/^blend_darken (uint64_t dca, uint64_t da, uint64_t sca, uint64_t sa)$/;"	f	file:
blend_difference	pixman-combine32.c	/^blend_difference (uint32_t dca, uint32_t da, uint32_t sca, uint32_t sa)$/;"	f	file:
blend_difference	pixman-combine64.c	/^blend_difference (uint64_t dca, uint64_t da, uint64_t sca, uint64_t sa)$/;"	f	file:
blend_exclusion	pixman-combine32.c	/^blend_exclusion (uint32_t dca, uint32_t da, uint32_t sca, uint32_t sa)$/;"	f	file:
blend_exclusion	pixman-combine64.c	/^blend_exclusion (uint64_t dca, uint64_t da, uint64_t sca, uint64_t sa)$/;"	f	file:
blend_hard_light	pixman-combine32.c	/^blend_hard_light (uint32_t dca, uint32_t da, uint32_t sca, uint32_t sa)$/;"	f	file:
blend_hard_light	pixman-combine64.c	/^blend_hard_light (uint64_t dca, uint64_t da, uint64_t sca, uint64_t sa)$/;"	f	file:
blend_hsl_color	pixman-combine32.c	/^blend_hsl_color (uint32_t c[3],$/;"	f	file:
blend_hsl_color	pixman-combine64.c	/^blend_hsl_color (uint64_t c[3],$/;"	f	file:
blend_hsl_hue	pixman-combine32.c	/^blend_hsl_hue (uint32_t c[3],$/;"	f	file:
blend_hsl_hue	pixman-combine64.c	/^blend_hsl_hue (uint64_t c[3],$/;"	f	file:
blend_hsl_luminosity	pixman-combine32.c	/^blend_hsl_luminosity (uint32_t c[3],$/;"	f	file:
blend_hsl_luminosity	pixman-combine64.c	/^blend_hsl_luminosity (uint64_t c[3],$/;"	f	file:
blend_hsl_saturation	pixman-combine32.c	/^blend_hsl_saturation (uint32_t c[3],$/;"	f	file:
blend_hsl_saturation	pixman-combine64.c	/^blend_hsl_saturation (uint64_t c[3],$/;"	f	file:
blend_lighten	pixman-combine32.c	/^blend_lighten (uint32_t dca, uint32_t da, uint32_t sca, uint32_t sa)$/;"	f	file:
blend_lighten	pixman-combine64.c	/^blend_lighten (uint64_t dca, uint64_t da, uint64_t sca, uint64_t sa)$/;"	f	file:
blend_overlay	pixman-combine32.c	/^blend_overlay (uint32_t dca, uint32_t da, uint32_t sca, uint32_t sa)$/;"	f	file:
blend_overlay	pixman-combine64.c	/^blend_overlay (uint64_t dca, uint64_t da, uint64_t sca, uint64_t sa)$/;"	f	file:
blend_screen	pixman-combine32.c	/^blend_screen (uint32_t dca, uint32_t da, uint32_t sca, uint32_t sa)$/;"	f	file:
blend_screen	pixman-combine64.c	/^blend_screen (uint64_t dca, uint64_t da, uint64_t sca, uint64_t sa)$/;"	f	file:
blend_soft_light	pixman-combine32.c	/^blend_soft_light (uint32_t dca_org,$/;"	f	file:
blend_soft_light	pixman-combine64.c	/^blend_soft_light (uint64_t dca_org,$/;"	f	file:
blt	pixman-private.h	/^    pixman_blt_func_t		blt;$/;"	m	struct:pixman_implementation_t
blue	pixman.h	/^    uint16_t    blue;$/;"	m	struct:pixman_color
bot	pixman.h	/^    pixman_span_fix_t	top, bot;$/;"	m	struct:pixman_trap
bottom	pixman.h	/^    pixman_fixed_t	top, bottom;$/;"	m	struct:pixman_trapezoid
box_type_t	pixman-region16.c	/^typedef pixman_box16_t		box_type_t;$/;"	t	file:
box_type_t	pixman-region32.c	/^typedef pixman_box32_t		box_type_t;$/;"	t	file:
bpp	pixman-arm-neon-asm.h	/^    pixld numpix, bpp, basereg, mem_operand, %(bpp * numpix)$/;"	v
bpp	pixman-arm-neon-asm.h	/^    pixld numpix, bpp, basereg, mem_operand, 128$/;"	v
bpp	pixman-arm-neon-asm.h	/^    pixst numpix, bpp, basereg, mem_operand, %(bpp * numpix)$/;"	v
bpp	pixman-arm-neon-asm.h	/^    pixst numpix, bpp, basereg, mem_operand, 128$/;"	v
bpp	pixman-arm-neon-asm.h	/^.macro pixld numpix, bpp, basereg, mem_operand, abits=0$/;"	v
bpp	pixman-arm-neon-asm.h	/^.macro pixld_a numpix, bpp, basereg, mem_operand$/;"	v
bpp	pixman-arm-neon-asm.h	/^.macro pixst numpix, bpp, basereg, mem_operand, abits=0$/;"	v
bpp	pixman-arm-neon-asm.h	/^.macro pixst_a numpix, bpp, basereg, mem_operand$/;"	v
c	pixman-mmx.c	/^static const mmx_data_t c =$/;"	v	file:
c1	pixman-private.h	/^    circle_t   c1;$/;"	m	struct:radial_gradient
c2	pixman-private.h	/^    circle_t   c2;$/;"	m	struct:radial_gradient
c_fast_paths	pixman-fast-path.c	/^static const pixman_fast_path_t c_fast_paths[] =$/;"	v	file:
cache	pixman.c	/^    pixman_fast_path_t cache [N_CACHED_FAST_PATHS];$/;"	m	struct:__anon10	file:
cache_prefetch	pixman-sse2.c	/^cache_prefetch (__m128i* addr)$/;"	f	file:
cache_prefetch_next	pixman-sse2.c	/^cache_prefetch_next (__m128i* addr)$/;"	f	file:
cache_preload	pixman-arm-neon-asm.h	/^    cache_preload 0, pixblock_size$/;"	v
cache_t	pixman.c	/^} cache_t;$/;"	t	typeref:struct:__anon10	file:
cdx	pixman-private.h	/^    double     cdx;$/;"	m	struct:radial_gradient
cdy	pixman-private.h	/^    double     cdy;$/;"	m	struct:radial_gradient
center	pixman-private.h	/^    pixman_point_fixed_t center;$/;"	m	struct:conical_gradient
chunk_size	pixman-arm-neon-asm.h	/^    pixld       chunk_size, mask_bpp, mask_basereg, MASK$/;"	v
chunk_size	pixman-arm-neon-asm.h	/^    pixld       chunk_size, src_bpp, src_basereg, SRC$/;"	v
circle	pixman-private.h	/^struct circle$/;"	s
circle_t	pixman-private.h	/^typedef struct circle circle_t;$/;"	t	typeref:struct:circle
classify	pixman-private.h	/^    classify_func_t             classify;$/;"	m	struct:image_common
classify_func_t	pixman-private.h	/^typedef source_image_class_t (*classify_func_t) (pixman_image_t *image,$/;"	t
cleanup	pixman-arm-neon-asm.h	/^                                                   cleanup, \\$/;"	v
cleanup	pixman-arm-neon-asm.h	/^                                   cleanup, \\$/;"	v
client_clip	pixman-private.h	/^    pixman_bool_t               client_clip;        \/* Whether the source clip was$/;"	m	struct:image_common
clip255	pixman-edge.c	/^clip255 (int x)$/;"	f	file:
clip_general_image	pixman.c	/^clip_general_image (pixman_region32_t * region,$/;"	f	file:
clip_region	pixman-private.h	/^    pixman_region32_t           clip_region;$/;"	m	struct:image_common
clip_source_image	pixman.c	/^clip_source_image (pixman_region32_t * region,$/;"	f	file:
clip_sources	pixman-private.h	/^    pixman_bool_t               clip_sources;       \/* Whether the clip applies when$/;"	m	struct:image_common
color	pixman-private.h	/^    pixman_color_t color;$/;"	m	struct:solid_fill
color	pixman.h	/^    pixman_bool_t       color;$/;"	m	struct:pixman_indexed
color	pixman.h	/^    pixman_color_t color;$/;"	m	struct:pixman_gradient_stop
color_32	pixman-private.h	/^    uint32_t	   color_32;$/;"	m	struct:solid_fill
color_64	pixman-private.h	/^    uint64_t	   color_64;$/;"	m	struct:solid_fill
color_to_pixel	pixman.c	/^color_to_pixel (pixman_color_t *     color,$/;"	f	file:
color_to_uint32	pixman-solid-fill.c	/^color_to_uint32 (const pixman_color_t *color)$/;"	f	file:
color_to_uint32	pixman.c	/^color_to_uint32 (const pixman_color_t *color)$/;"	f	file:
color_to_uint64	pixman-solid-fill.c	/^color_to_uint64 (const pixman_color_t *color)$/;"	f	file:
combine	pixman-mmx.c	/^combine (const uint32_t *src, const uint32_t *mask)$/;"	f	file:
combine1	pixman-sse2.c	/^combine1 (const uint32_t *ps, const uint32_t *pm)$/;"	f	file:
combine4	pixman-sse2.c	/^combine4 (const __m128i *ps, const __m128i *pm)$/;"	f	file:
combine_32	pixman-private.h	/^    pixman_combine_32_func_t	combine_32[PIXMAN_N_OPERATORS];$/;"	m	struct:pixman_implementation_t
combine_32_ca	pixman-private.h	/^    pixman_combine_32_func_t	combine_32_ca[PIXMAN_N_OPERATORS];$/;"	m	struct:pixman_implementation_t
combine_64	pixman-private.h	/^    pixman_combine_64_func_t	combine_64[PIXMAN_N_OPERATORS];$/;"	m	struct:pixman_implementation_t
combine_64_ca	pixman-private.h	/^    pixman_combine_64_func_t	combine_64_ca[PIXMAN_N_OPERATORS];$/;"	m	struct:pixman_implementation_t
combine_add_ca	pixman-combine32.c	/^combine_add_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_add_ca	pixman-combine64.c	/^combine_add_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_add_u	pixman-combine32.c	/^combine_add_u (pixman_implementation_t *imp,$/;"	f	file:
combine_add_u	pixman-combine64.c	/^combine_add_u (pixman_implementation_t *imp,$/;"	f	file:
combine_atop_ca	pixman-combine32.c	/^combine_atop_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_atop_ca	pixman-combine64.c	/^combine_atop_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_atop_reverse_ca	pixman-combine32.c	/^combine_atop_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_atop_reverse_ca	pixman-combine64.c	/^combine_atop_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_atop_reverse_u	pixman-combine32.c	/^combine_atop_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_atop_reverse_u	pixman-combine64.c	/^combine_atop_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_atop_u	pixman-combine32.c	/^combine_atop_u (pixman_implementation_t *imp,$/;"	f	file:
combine_atop_u	pixman-combine64.c	/^combine_atop_u (pixman_implementation_t *imp,$/;"	f	file:
combine_clear	pixman-combine32.c	/^combine_clear (pixman_implementation_t *imp,$/;"	f	file:
combine_clear	pixman-combine64.c	/^combine_clear (pixman_implementation_t *imp,$/;"	f	file:
combine_clear_ca	pixman-combine32.c	/^combine_clear_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_clear_ca	pixman-combine64.c	/^combine_clear_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_atop_ca	pixman-combine32.c	/^combine_conjoint_atop_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_atop_ca	pixman-combine64.c	/^combine_conjoint_atop_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_atop_reverse_ca	pixman-combine32.c	/^combine_conjoint_atop_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_atop_reverse_ca	pixman-combine64.c	/^combine_conjoint_atop_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_atop_reverse_u	pixman-combine32.c	/^combine_conjoint_atop_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_atop_reverse_u	pixman-combine64.c	/^combine_conjoint_atop_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_atop_u	pixman-combine32.c	/^combine_conjoint_atop_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_atop_u	pixman-combine64.c	/^combine_conjoint_atop_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_general_ca	pixman-combine32.c	/^combine_conjoint_general_ca (uint32_t *      dest,$/;"	f	file:
combine_conjoint_general_ca	pixman-combine64.c	/^combine_conjoint_general_ca (uint64_t *      dest,$/;"	f	file:
combine_conjoint_general_u	pixman-combine32.c	/^combine_conjoint_general_u (uint32_t *      dest,$/;"	f	file:
combine_conjoint_general_u	pixman-combine64.c	/^combine_conjoint_general_u (uint64_t *      dest,$/;"	f	file:
combine_conjoint_in_ca	pixman-combine32.c	/^combine_conjoint_in_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_in_ca	pixman-combine64.c	/^combine_conjoint_in_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_in_part	pixman-combine32.c	/^combine_conjoint_in_part (uint8_t a, uint8_t b)$/;"	f	file:
combine_conjoint_in_part	pixman-combine64.c	/^combine_conjoint_in_part (uint16_t a, uint16_t b)$/;"	f	file:
combine_conjoint_in_reverse_ca	pixman-combine32.c	/^combine_conjoint_in_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_in_reverse_ca	pixman-combine64.c	/^combine_conjoint_in_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_in_reverse_u	pixman-combine32.c	/^combine_conjoint_in_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_in_reverse_u	pixman-combine64.c	/^combine_conjoint_in_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_in_u	pixman-combine32.c	/^combine_conjoint_in_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_in_u	pixman-combine64.c	/^combine_conjoint_in_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_out_ca	pixman-combine32.c	/^combine_conjoint_out_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_out_ca	pixman-combine64.c	/^combine_conjoint_out_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_out_part	pixman-combine32.c	/^combine_conjoint_out_part (uint8_t a, uint8_t b)$/;"	f	file:
combine_conjoint_out_part	pixman-combine64.c	/^combine_conjoint_out_part (uint16_t a, uint16_t b)$/;"	f	file:
combine_conjoint_out_reverse_ca	pixman-combine32.c	/^combine_conjoint_out_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_out_reverse_ca	pixman-combine64.c	/^combine_conjoint_out_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_out_reverse_u	pixman-combine32.c	/^combine_conjoint_out_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_out_reverse_u	pixman-combine64.c	/^combine_conjoint_out_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_out_u	pixman-combine32.c	/^combine_conjoint_out_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_out_u	pixman-combine64.c	/^combine_conjoint_out_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_over_ca	pixman-combine32.c	/^combine_conjoint_over_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_over_ca	pixman-combine64.c	/^combine_conjoint_over_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_over_reverse_ca	pixman-combine32.c	/^combine_conjoint_over_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_over_reverse_ca	pixman-combine64.c	/^combine_conjoint_over_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_over_reverse_u	pixman-combine32.c	/^combine_conjoint_over_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_over_reverse_u	pixman-combine64.c	/^combine_conjoint_over_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_over_u	pixman-combine32.c	/^combine_conjoint_over_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_over_u	pixman-combine64.c	/^combine_conjoint_over_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_xor_ca	pixman-combine32.c	/^combine_conjoint_xor_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_xor_ca	pixman-combine64.c	/^combine_conjoint_xor_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_xor_u	pixman-combine32.c	/^combine_conjoint_xor_u (pixman_implementation_t *imp,$/;"	f	file:
combine_conjoint_xor_u	pixman-combine64.c	/^combine_conjoint_xor_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_atop_ca	pixman-combine32.c	/^combine_disjoint_atop_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_atop_ca	pixman-combine64.c	/^combine_disjoint_atop_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_atop_reverse_ca	pixman-combine32.c	/^combine_disjoint_atop_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_atop_reverse_ca	pixman-combine64.c	/^combine_disjoint_atop_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_atop_reverse_u	pixman-combine32.c	/^combine_disjoint_atop_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_atop_reverse_u	pixman-combine64.c	/^combine_disjoint_atop_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_atop_u	pixman-combine32.c	/^combine_disjoint_atop_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_atop_u	pixman-combine64.c	/^combine_disjoint_atop_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_general_ca	pixman-combine32.c	/^combine_disjoint_general_ca (uint32_t *      dest,$/;"	f	file:
combine_disjoint_general_ca	pixman-combine64.c	/^combine_disjoint_general_ca (uint64_t *      dest,$/;"	f	file:
combine_disjoint_general_u	pixman-combine32.c	/^combine_disjoint_general_u (uint32_t *      dest,$/;"	f	file:
combine_disjoint_general_u	pixman-combine64.c	/^combine_disjoint_general_u (uint64_t *      dest,$/;"	f	file:
combine_disjoint_in_ca	pixman-combine32.c	/^combine_disjoint_in_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_in_ca	pixman-combine64.c	/^combine_disjoint_in_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_in_part	pixman-combine32.c	/^combine_disjoint_in_part (uint8_t a, uint8_t b)$/;"	f	file:
combine_disjoint_in_part	pixman-combine64.c	/^combine_disjoint_in_part (uint16_t a, uint16_t b)$/;"	f	file:
combine_disjoint_in_reverse_ca	pixman-combine32.c	/^combine_disjoint_in_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_in_reverse_ca	pixman-combine64.c	/^combine_disjoint_in_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_in_reverse_u	pixman-combine32.c	/^combine_disjoint_in_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_in_reverse_u	pixman-combine64.c	/^combine_disjoint_in_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_in_u	pixman-combine32.c	/^combine_disjoint_in_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_in_u	pixman-combine64.c	/^combine_disjoint_in_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_out_ca	pixman-combine32.c	/^combine_disjoint_out_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_out_ca	pixman-combine64.c	/^combine_disjoint_out_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_out_part	pixman-combine32.c	/^combine_disjoint_out_part (uint8_t a, uint8_t b)$/;"	f	file:
combine_disjoint_out_part	pixman-combine64.c	/^combine_disjoint_out_part (uint16_t a, uint16_t b)$/;"	f	file:
combine_disjoint_out_reverse_ca	pixman-combine32.c	/^combine_disjoint_out_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_out_reverse_ca	pixman-combine64.c	/^combine_disjoint_out_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_out_reverse_u	pixman-combine32.c	/^combine_disjoint_out_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_out_reverse_u	pixman-combine64.c	/^combine_disjoint_out_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_out_u	pixman-combine32.c	/^combine_disjoint_out_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_out_u	pixman-combine64.c	/^combine_disjoint_out_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_over_ca	pixman-combine32.c	/^combine_disjoint_over_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_over_ca	pixman-combine64.c	/^combine_disjoint_over_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_over_u	pixman-combine32.c	/^combine_disjoint_over_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_over_u	pixman-combine64.c	/^combine_disjoint_over_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_xor_ca	pixman-combine32.c	/^combine_disjoint_xor_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_xor_ca	pixman-combine64.c	/^combine_disjoint_xor_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_xor_u	pixman-combine32.c	/^combine_disjoint_xor_u (pixman_implementation_t *imp,$/;"	f	file:
combine_disjoint_xor_u	pixman-combine64.c	/^combine_disjoint_xor_u (pixman_implementation_t *imp,$/;"	f	file:
combine_in_ca	pixman-combine32.c	/^combine_in_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_in_ca	pixman-combine64.c	/^combine_in_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_in_reverse_ca	pixman-combine32.c	/^combine_in_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_in_reverse_ca	pixman-combine64.c	/^combine_in_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_in_reverse_u	pixman-combine32.c	/^combine_in_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_in_reverse_u	pixman-combine64.c	/^combine_in_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_in_u	pixman-combine32.c	/^combine_in_u (pixman_implementation_t *imp,$/;"	f	file:
combine_in_u	pixman-combine64.c	/^combine_in_u (pixman_implementation_t *imp,$/;"	f	file:
combine_mask	pixman-combine32.c	/^combine_mask (const uint32_t *src, const uint32_t *mask, int i)$/;"	f	file:
combine_mask	pixman-combine64.c	/^combine_mask (const uint64_t *src, const uint64_t *mask, int i)$/;"	f	file:
combine_mask_alpha_ca	pixman-combine32.c	/^combine_mask_alpha_ca (const uint32_t *src, uint32_t *mask)$/;"	f	file:
combine_mask_alpha_ca	pixman-combine64.c	/^combine_mask_alpha_ca (const uint64_t *src, uint64_t *mask)$/;"	f	file:
combine_mask_ca	pixman-combine32.c	/^combine_mask_ca (uint32_t *src, uint32_t *mask)$/;"	f	file:
combine_mask_ca	pixman-combine64.c	/^combine_mask_ca (uint64_t *src, uint64_t *mask)$/;"	f	file:
combine_mask_value_ca	pixman-combine32.c	/^combine_mask_value_ca (uint32_t *src, const uint32_t *mask)$/;"	f	file:
combine_mask_value_ca	pixman-combine64.c	/^combine_mask_value_ca (uint64_t *src, const uint64_t *mask)$/;"	f	file:
combine_multiply_ca	pixman-combine32.c	/^combine_multiply_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_multiply_ca	pixman-combine64.c	/^combine_multiply_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_multiply_u	pixman-combine32.c	/^combine_multiply_u (pixman_implementation_t *imp,$/;"	f	file:
combine_multiply_u	pixman-combine64.c	/^combine_multiply_u (pixman_implementation_t *imp,$/;"	f	file:
combine_out_ca	pixman-combine32.c	/^combine_out_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_out_ca	pixman-combine64.c	/^combine_out_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_out_reverse_ca	pixman-combine32.c	/^combine_out_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_out_reverse_ca	pixman-combine64.c	/^combine_out_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_out_reverse_u	pixman-combine32.c	/^combine_out_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_out_reverse_u	pixman-combine64.c	/^combine_out_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_out_u	pixman-combine32.c	/^combine_out_u (pixman_implementation_t *imp,$/;"	f	file:
combine_out_u	pixman-combine64.c	/^combine_out_u (pixman_implementation_t *imp,$/;"	f	file:
combine_over	pixman-fast-path.c	/^combine_over (uint32_t s, uint32_t *dst)$/;"	f	file:
combine_over_ca	pixman-combine32.c	/^combine_over_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_over_ca	pixman-combine64.c	/^combine_over_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_over_reverse_ca	pixman-combine32.c	/^combine_over_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_over_reverse_ca	pixman-combine64.c	/^combine_over_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_over_reverse_u	pixman-combine32.c	/^combine_over_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_over_reverse_u	pixman-combine64.c	/^combine_over_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
combine_over_u	pixman-combine32.c	/^combine_over_u (pixman_implementation_t *imp,$/;"	f	file:
combine_over_u	pixman-combine64.c	/^combine_over_u (pixman_implementation_t *imp,$/;"	f	file:
combine_saturate_ca	pixman-combine32.c	/^combine_saturate_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_saturate_ca	pixman-combine64.c	/^combine_saturate_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_saturate_u	pixman-combine32.c	/^combine_saturate_u (pixman_implementation_t *imp,$/;"	f	file:
combine_saturate_u	pixman-combine64.c	/^combine_saturate_u (pixman_implementation_t *imp,$/;"	f	file:
combine_src	pixman-fast-path.c	/^combine_src (uint32_t s, uint32_t *dst)$/;"	f	file:
combine_src_ca	pixman-combine32.c	/^combine_src_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_src_ca	pixman-combine64.c	/^combine_src_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_src_u	pixman-combine32.c	/^combine_src_u (pixman_implementation_t *imp,$/;"	f	file:
combine_src_u	pixman-combine64.c	/^combine_src_u (pixman_implementation_t *imp,$/;"	f	file:
combine_xor_ca	pixman-combine32.c	/^combine_xor_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_xor_ca	pixman-combine64.c	/^combine_xor_ca (pixman_implementation_t *imp,$/;"	f	file:
combine_xor_u	pixman-combine32.c	/^combine_xor_u (pixman_implementation_t *imp,$/;"	f	file:
combine_xor_u	pixman-combine64.c	/^combine_xor_u (pixman_implementation_t *imp,$/;"	f	file:
common	pixman-private.h	/^    gradient_t           common;$/;"	m	struct:conical_gradient
common	pixman-private.h	/^    gradient_t           common;$/;"	m	struct:linear_gradient
common	pixman-private.h	/^    gradient_t common;$/;"	m	struct:radial_gradient
common	pixman-private.h	/^    image_common_t             common;$/;"	m	struct:bits_image
common	pixman-private.h	/^    image_common_t     common;$/;"	m	union:pixman_image
common	pixman-private.h	/^    image_common_t common;$/;"	m	struct:source_image
common	pixman-private.h	/^    source_image_t          common;$/;"	m	struct:gradient
common	pixman-private.h	/^    source_image_t common;$/;"	m	struct:solid_fill
component_alpha	pixman-private.h	/^    pixman_bool_t               component_alpha;$/;"	m	struct:image_common
composite_over_8888_0565pixel	pixman-sse2.c	/^composite_over_8888_0565pixel (uint32_t src, uint16_t dst)$/;"	f	file:
compute_image_info	pixman-image.c	/^compute_image_info (pixman_image_t *image)$/;"	f	file:
compute_src_extents_flags	pixman.c	/^compute_src_extents_flags (pixman_image_t *image,$/;"	f	file:
conical	pixman-private.h	/^    conical_gradient_t conical;$/;"	m	union:pixman_image
conical_gradient	pixman-private.h	/^struct conical_gradient$/;"	s
conical_gradient_get_scanline_32	pixman-conical-gradient.c	/^conical_gradient_get_scanline_32 (pixman_image_t *image,$/;"	f	file:
conical_gradient_property_changed	pixman-conical-gradient.c	/^conical_gradient_property_changed (pixman_image_t *image)$/;"	f	file:
conical_gradient_t	pixman-private.h	/^typedef struct conical_gradient conical_gradient_t;$/;"	t	typeref:struct:conical_gradient
core_combine_add_ca_sse2	pixman-sse2.c	/^core_combine_add_ca_sse2 (uint32_t *      pd,$/;"	f	file:
core_combine_add_u_sse2	pixman-sse2.c	/^core_combine_add_u_sse2 (uint32_t*       dst,$/;"	f	file:
core_combine_atop_ca_pixel_sse2	pixman-sse2.c	/^core_combine_atop_ca_pixel_sse2 (uint32_t src,$/;"	f	file:
core_combine_atop_ca_sse2	pixman-sse2.c	/^core_combine_atop_ca_sse2 (uint32_t *      pd,$/;"	f	file:
core_combine_atop_u_pixel_sse2	pixman-sse2.c	/^core_combine_atop_u_pixel_sse2 (uint32_t src,$/;"	f	file:
core_combine_atop_u_sse2	pixman-sse2.c	/^core_combine_atop_u_sse2 (uint32_t*       pd,$/;"	f	file:
core_combine_in_ca_sse2	pixman-sse2.c	/^core_combine_in_ca_sse2 (uint32_t *      pd,$/;"	f	file:
core_combine_in_reverse_ca_sse2	pixman-sse2.c	/^core_combine_in_reverse_ca_sse2 (uint32_t *      pd,$/;"	f	file:
core_combine_in_u_pixelsse2	pixman-sse2.c	/^core_combine_in_u_pixelsse2 (uint32_t src, uint32_t dst)$/;"	f	file:
core_combine_in_u_sse2	pixman-sse2.c	/^core_combine_in_u_sse2 (uint32_t*       pd,$/;"	f	file:
core_combine_out_ca_sse2	pixman-sse2.c	/^core_combine_out_ca_sse2 (uint32_t *      pd,$/;"	f	file:
core_combine_out_reverse_ca_sse2	pixman-sse2.c	/^core_combine_out_reverse_ca_sse2 (uint32_t *      pd,$/;"	f	file:
core_combine_out_u_sse2	pixman-sse2.c	/^core_combine_out_u_sse2 (uint32_t*       pd,$/;"	f	file:
core_combine_over_ca_pixel_sse2	pixman-sse2.c	/^core_combine_over_ca_pixel_sse2 (uint32_t src,$/;"	f	file:
core_combine_over_ca_sse2	pixman-sse2.c	/^core_combine_over_ca_sse2 (uint32_t*       pd,$/;"	f	file:
core_combine_over_reverse_ca_pixel_sse2	pixman-sse2.c	/^core_combine_over_reverse_ca_pixel_sse2 (uint32_t src,$/;"	f	file:
core_combine_over_reverse_ca_sse2	pixman-sse2.c	/^core_combine_over_reverse_ca_sse2 (uint32_t*       pd,$/;"	f	file:
core_combine_over_reverse_u_sse2	pixman-sse2.c	/^core_combine_over_reverse_u_sse2 (uint32_t*       pd,$/;"	f	file:
core_combine_over_u_pixel_sse2	pixman-sse2.c	/^core_combine_over_u_pixel_sse2 (uint32_t src, uint32_t dst)$/;"	f	file:
core_combine_over_u_sse2	pixman-sse2.c	/^core_combine_over_u_sse2 (uint32_t*       pd,$/;"	f	file:
core_combine_reverse_atop_ca_pixel_sse2	pixman-sse2.c	/^core_combine_reverse_atop_ca_pixel_sse2 (uint32_t src,$/;"	f	file:
core_combine_reverse_atop_ca_sse2	pixman-sse2.c	/^core_combine_reverse_atop_ca_sse2 (uint32_t *      pd,$/;"	f	file:
core_combine_reverse_atop_u_pixel_sse2	pixman-sse2.c	/^core_combine_reverse_atop_u_pixel_sse2 (uint32_t src,$/;"	f	file:
core_combine_reverse_atop_u_sse2	pixman-sse2.c	/^core_combine_reverse_atop_u_sse2 (uint32_t*       pd,$/;"	f	file:
core_combine_reverse_in_u_sse2	pixman-sse2.c	/^core_combine_reverse_in_u_sse2 (uint32_t*       pd,$/;"	f	file:
core_combine_reverse_out_u_sse2	pixman-sse2.c	/^core_combine_reverse_out_u_sse2 (uint32_t*       pd,$/;"	f	file:
core_combine_saturate_u_pixel_sse2	pixman-sse2.c	/^core_combine_saturate_u_pixel_sse2 (uint32_t src,$/;"	f	file:
core_combine_saturate_u_sse2	pixman-sse2.c	/^core_combine_saturate_u_sse2 (uint32_t *      pd,$/;"	f	file:
core_combine_src_ca_sse2	pixman-sse2.c	/^core_combine_src_ca_sse2 (uint32_t*       pd,$/;"	f	file:
core_combine_xor_ca_pixel_sse2	pixman-sse2.c	/^core_combine_xor_ca_pixel_sse2 (uint32_t src,$/;"	f	file:
core_combine_xor_ca_sse2	pixman-sse2.c	/^core_combine_xor_ca_sse2 (uint32_t *      pd,$/;"	f	file:
core_combine_xor_u_pixel_sse2	pixman-sse2.c	/^core_combine_xor_u_pixel_sse2 (uint32_t src,$/;"	f	file:
core_combine_xor_u_sse2	pixman-sse2.c	/^core_combine_xor_u_sse2 (uint32_t*       dst,$/;"	f	file:
cpu_features_t	pixman-cpu.c	/^} cpu_features_t;$/;"	t	typeref:enum:__anon8	file:
create_bits	pixman-bits-image.c	/^create_bits (pixman_format_code_t format,$/;"	f	file:
create_mask_16_128	pixman-sse2.c	/^create_mask_16_128 (uint16_t mask)$/;"	f	file:
create_mask_16_64	pixman-sse2.c	/^create_mask_16_64 (uint16_t mask)$/;"	f	file:
create_mask_2x32_128	pixman-sse2.c	/^create_mask_2x32_128 (uint32_t mask0,$/;"	f	file:
create_mask_2x32_128	pixman-sse2.c	2655;"	d	file:
create_mask_2x32_64	pixman-sse2.c	/^create_mask_2x32_64 (uint32_t mask0,$/;"	f	file:
critical_if_fail	pixman-private.h	781;"	d
critical_if_fail	pixman-private.h	810;"	d
data	pixman.h	/^    pixman_region16_data_t *data;$/;"	m	struct:pixman_region16
data	pixman.h	/^    pixman_region32_data_t  *data;$/;"	m	struct:pixman_region32
delegate	pixman-private.h	/^    pixman_implementation_t *	delegate;$/;"	m	struct:pixman_implementation_t
delegate_blt	pixman-implementation.c	/^delegate_blt (pixman_implementation_t * imp,$/;"	f	file:
delegate_combine_32	pixman-implementation.c	/^delegate_combine_32 (pixman_implementation_t * imp,$/;"	f	file:
delegate_combine_32_ca	pixman-implementation.c	/^delegate_combine_32_ca (pixman_implementation_t * imp,$/;"	f	file:
delegate_combine_64	pixman-implementation.c	/^delegate_combine_64 (pixman_implementation_t * imp,$/;"	f	file:
delegate_combine_64_ca	pixman-implementation.c	/^delegate_combine_64_ca (pixman_implementation_t * imp,$/;"	f	file:
delegate_fill	pixman-implementation.c	/^delegate_fill (pixman_implementation_t *imp,$/;"	f	file:
dest_flags	pixman-private.h	/^    uint32_t		    dest_flags;$/;"	m	struct:__anon5
dest_format	pixman-private.h	/^    pixman_format_code_t    dest_format;$/;"	m	struct:__anon5
destroy_data	pixman-private.h	/^    void *                      destroy_data;$/;"	m	struct:image_common
destroy_func	pixman-private.h	/^    pixman_image_destroy_func_t destroy_func;$/;"	m	struct:image_common
detect_cpu_features	pixman-cpu.c	/^detect_cpu_features (void)$/;"	f	file:
dirty	pixman-private.h	/^    pixman_bool_t		dirty;$/;"	m	struct:image_common
do_composite	pixman.c	/^do_composite (pixman_implementation_t *imp,$/;"	f	file:
dr	pixman-private.h	/^    double     dr;$/;"	m	struct:radial_gradient
dst_r_basereg	pixman-arm-neon-asm.h	/^    pixld       chunk_size, dst_r_bpp, dst_r_basereg, DST_R$/;"	v
dst_r_basereg	pixman-arm-neon-asm.h	/^    pixld_a     chunk_size, dst_r_bpp, dst_r_basereg, DST_R$/;"	v
dst_r_basereg_	pixman-arm-neon-asm.h	/^                                                   dst_r_basereg_ = 4, \\$/;"	v
dst_r_basereg_	pixman-arm-neon-asm.h	/^                                   dst_r_basereg_ = 4, \\$/;"	v
dst_r_bpp	pixman-arm-neon-asm.h	/^    pixdeinterleave dst_r_bpp, dst_r_basereg$/;"	v
dst_r_bpp	pixman-arm-neon-asm.h	/^    pixld       chunk_size, dst_r_bpp, dst_r_basereg, DST_R$/;"	v
dst_r_bpp	pixman-arm-neon-asm.h	/^    pixld       pixblock_size, dst_r_bpp, \\$/;"	v
dst_r_bpp	pixman-arm-neon-asm.h	/^    pixld_a     chunk_size, dst_r_bpp, dst_r_basereg, DST_R$/;"	v
dst_r_bpp	pixman-arm-neon-asm.h	/^    pixld_a     pixblock_size, dst_r_bpp, \\$/;"	v
dst_w_basereg	pixman-arm-neon-asm.h	/^    pixst       chunk_size, dst_w_bpp, dst_w_basereg, DST_W$/;"	v
dst_w_basereg	pixman-arm-neon-asm.h	/^    pixst_a     chunk_size, dst_w_bpp, dst_w_basereg, DST_W$/;"	v
dst_w_basereg_	pixman-arm-neon-asm.h	/^                                                   dst_w_basereg_ = 28, \\$/;"	v
dst_w_basereg_	pixman-arm-neon-asm.h	/^                                   dst_w_basereg_ = 28, \\$/;"	v
dst_w_bpp	pixman-arm-neon-asm.h	/^    pixinterleave dst_w_bpp, dst_w_basereg$/;"	v
dst_w_bpp	pixman-arm-neon-asm.h	/^    pixst       chunk_size, dst_w_bpp, dst_w_basereg, DST_W$/;"	v
dst_w_bpp	pixman-arm-neon-asm.h	/^    pixst       pixblock_size, dst_w_bpp, \\$/;"	v
dst_w_bpp	pixman-arm-neon-asm.h	/^    pixst_a     chunk_size, dst_w_bpp, dst_w_basereg, DST_W$/;"	v
dst_w_bpp	pixman-arm-neon-asm.h	/^    pixst_a     pixblock_size, dst_w_bpp, \\$/;"	v
dst_w_bpp_	pixman-arm-neon-asm.h	/^                                                   dst_w_bpp_, \\$/;"	v
dst_w_bpp_	pixman-arm-neon-asm.h	/^                                   dst_w_bpp_, \\$/;"	v
dump_timers	pixman-timer.c	/^dump_timers (void)$/;"	f	file:
dx	pixman.h	/^    pixman_fixed_t	dx;$/;"	m	struct:pixman_edge
dx_big	pixman.h	/^    pixman_fixed_t	dx_big;$/;"	m	struct:pixman_edge
dx_small	pixman.h	/^    pixman_fixed_t	dx_small;$/;"	m	struct:pixman_edge
dy	pixman.h	/^    pixman_fixed_t	dy;$/;"	m	struct:pixman_edge
e	pixman.h	/^    pixman_fixed_t	e;$/;"	m	struct:pixman_edge
elem_size	pixman-arm-neon-asm.h	/^    pixldst1 op, elem_size, %(basereg+1), mem_operand, abits$/;"	v
elem_size	pixman-arm-neon-asm.h	/^    pixldst2 op, elem_size, %(basereg+2), %(basereg+3), mem_operand, abits$/;"	v
elem_size	pixman-arm-neon-asm.h	/^    pixldst4 op, elem_size, %(basereg+4), %(basereg+5), \\$/;"	v
elem_size	pixman-arm-neon-asm.h	/^.macro pixldst numbytes, op, elem_size, basereg, mem_operand, abits$/;"	v
elem_size	pixman-arm-neon-asm.h	/^.macro pixldst0 op, elem_size, reg1, idx, mem_operand, abits$/;"	v
elem_size	pixman-arm-neon-asm.h	/^.macro pixldst1 op, elem_size, reg1, mem_operand, abits$/;"	v
elem_size	pixman-arm-neon-asm.h	/^.macro pixldst2 op, elem_size, reg1, reg2, mem_operand, abits$/;"	v
elem_size	pixman-arm-neon-asm.h	/^.macro pixldst3 op, elem_size, reg1, reg2, reg3, mem_operand$/;"	v
elem_size	pixman-arm-neon-asm.h	/^.macro pixldst30 op, elem_size, reg1, reg2, reg3, idx, mem_operand$/;"	v
elem_size	pixman-arm-neon-asm.h	/^.macro pixldst4 op, elem_size, reg1, reg2, reg3, reg4, mem_operand, abits$/;"	v
ent	pixman.h	/^    pixman_index_type	ent[32768];$/;"	m	struct:pixman_indexed
expand16	pixman-utils.c	/^expand16 (const uint8_t val, int nbits)$/;"	f	file:
expand565	pixman-mmx.c	/^expand565 (__m64 pixel, int pos)$/;"	f	file:
expand565_16_1x64	pixman-sse2.c	/^expand565_16_1x64 (uint16_t pixel)$/;"	f	file:
expand8888	pixman-mmx.c	/^expand8888 (__m64 in, int pos)$/;"	f	file:
expand_alpha	pixman-mmx.c	/^expand_alpha (__m64 pixel)$/;"	f	file:
expand_alpha_1x128	pixman-sse2.c	/^expand_alpha_1x128 (__m128i data)$/;"	f	file:
expand_alpha_1x64	pixman-sse2.c	/^expand_alpha_1x64 (__m64 data)$/;"	f	file:
expand_alpha_2x128	pixman-sse2.c	/^expand_alpha_2x128 (__m128i  data_lo,$/;"	f	file:
expand_alpha_rev	pixman-mmx.c	/^expand_alpha_rev (__m64 pixel)$/;"	f	file:
expand_alpha_rev_1x64	pixman-sse2.c	/^expand_alpha_rev_1x64 (__m64 data)$/;"	f	file:
expand_alpha_rev_2x128	pixman-sse2.c	/^expand_alpha_rev_2x128 (__m128i  data_lo,$/;"	f	file:
expand_pixel_32_1x128	pixman-sse2.c	/^expand_pixel_32_1x128 (uint32_t data)$/;"	f	file:
expand_pixel_8_1x64	pixman-sse2.c	/^expand_pixel_8_1x64 (uint8_t data)$/;"	f	file:
expandx888	pixman-mmx.c	/^expandx888 (__m64 in, int pos)$/;"	f	file:
extended_format_code	pixman-private.h	/^    pixman_format_code_t	extended_format_code;$/;"	m	struct:image_common
extents	pixman.h	/^    pixman_box16_t          extents;$/;"	m	struct:pixman_region16
extents	pixman.h	/^    pixman_box32_t          extents;$/;"	m	struct:pixman_region32
fast_composite_add_1000_1000	pixman-fast-path.c	/^fast_composite_add_1000_1000 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_add_8000_8000	pixman-fast-path.c	/^fast_composite_add_8000_8000 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_add_8888_8888	pixman-fast-path.c	/^fast_composite_add_8888_8888 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_add_n_8888_8888_ca	pixman-fast-path.c	/^fast_composite_add_n_8888_8888_ca (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_add_n_8_8	pixman-fast-path.c	/^fast_composite_add_n_8_8 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_in_8_8	pixman-fast-path.c	/^fast_composite_in_8_8 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_in_n_8_8	pixman-fast-path.c	/^fast_composite_in_n_8_8 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_over_8888_0565	pixman-fast-path.c	/^fast_composite_over_8888_0565 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_over_8888_8888	pixman-fast-path.c	/^fast_composite_over_8888_8888 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_over_n_1_0565	pixman-fast-path.c	/^fast_composite_over_n_1_0565 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_over_n_1_8888	pixman-fast-path.c	/^fast_composite_over_n_1_8888 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_over_n_8888_0565_ca	pixman-fast-path.c	/^fast_composite_over_n_8888_0565_ca (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_over_n_8888_8888_ca	pixman-fast-path.c	/^fast_composite_over_n_8888_8888_ca (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_over_n_8_0565	pixman-fast-path.c	/^fast_composite_over_n_8_0565 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_over_n_8_0888	pixman-fast-path.c	/^fast_composite_over_n_8_0888 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_over_n_8_8888	pixman-fast-path.c	/^fast_composite_over_n_8_8888 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_over_x888_8_8888	pixman-fast-path.c	/^fast_composite_over_x888_8_8888 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_scaled_nearest	pixman-fast-path.c	/^fast_composite_scaled_nearest (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_solid_fill	pixman-fast-path.c	/^fast_composite_solid_fill (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_src_8888_x888	pixman-fast-path.c	/^fast_composite_src_8888_x888 (pixman_implementation_t *imp,$/;"	f	file:
fast_composite_src_x888_0565	pixman-fast-path.c	/^fast_composite_src_x888_0565 (pixman_implementation_t *imp,$/;"	f	file:
fast_path_fill	pixman-fast-path.c	/^fast_path_fill (pixman_implementation_t *imp,$/;"	f	file:
fast_paths	pixman-private.h	/^    const pixman_fast_path_t *	fast_paths;$/;"	m	struct:pixman_implementation_t
fetch_24	pixman-fast-path.c	/^fetch_24 (uint8_t *a)$/;"	f	file:
fetch_nearest	pixman-fast-path.c	/^fetch_nearest (pixman_repeat_t src_repeat,$/;"	f	file:
fetch_pixel_32	pixman-private.h	/^    fetch_pixel_32_t	       fetch_pixel_32;$/;"	m	struct:bits_image
fetch_pixel_32_t	pixman-private.h	/^typedef uint32_t (*fetch_pixel_32_t) (bits_image_t *image,$/;"	t
fetch_pixel_64	pixman-private.h	/^    fetch_pixel_64_t	       fetch_pixel_64;$/;"	m	struct:bits_image
fetch_pixel_64_t	pixman-private.h	/^typedef uint64_t (*fetch_pixel_64_t) (bits_image_t *image,$/;"	t
fetch_pixel_a1	pixman-access.c	/^fetch_pixel_a1 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a1b1g1r1	pixman-access.c	/^fetch_pixel_a1b1g1r1 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a1b5g5r5	pixman-access.c	/^fetch_pixel_a1b5g5r5 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a1r1g1b1	pixman-access.c	/^fetch_pixel_a1r1g1b1 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a1r5g5b5	pixman-access.c	/^fetch_pixel_a1r5g5b5 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a2b10g10r10	pixman-access.c	/^fetch_pixel_a2b10g10r10 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a2b2g2r2	pixman-access.c	/^fetch_pixel_a2b2g2r2 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a2r10g10b10	pixman-access.c	/^fetch_pixel_a2r10g10b10 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a2r2g2b2	pixman-access.c	/^fetch_pixel_a2r2g2b2 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a4	pixman-access.c	/^fetch_pixel_a4 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a4b4g4r4	pixman-access.c	/^fetch_pixel_a4b4g4r4 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a4r4g4b4	pixman-access.c	/^fetch_pixel_a4r4g4b4 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a8	pixman-access.c	/^fetch_pixel_a8 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a8b8g8r8	pixman-access.c	/^fetch_pixel_a8b8g8r8 (bits_image_t *image,$/;"	f	file:
fetch_pixel_a8r8g8b8	pixman-access.c	/^fetch_pixel_a8r8g8b8 (bits_image_t *image,$/;"	f	file:
fetch_pixel_b1g2r1	pixman-access.c	/^fetch_pixel_b1g2r1 (bits_image_t *image,$/;"	f	file:
fetch_pixel_b2g3r3	pixman-access.c	/^fetch_pixel_b2g3r3 (bits_image_t *image,$/;"	f	file:
fetch_pixel_b5g6r5	pixman-access.c	/^fetch_pixel_b5g6r5 (bits_image_t *image,$/;"	f	file:
fetch_pixel_b8g8r8	pixman-access.c	/^fetch_pixel_b8g8r8 (bits_image_t *image,$/;"	f	file:
fetch_pixel_b8g8r8a8	pixman-access.c	/^fetch_pixel_b8g8r8a8 (bits_image_t *image,$/;"	f	file:
fetch_pixel_b8g8r8x8	pixman-access.c	/^fetch_pixel_b8g8r8x8 (bits_image_t *image,$/;"	f	file:
fetch_pixel_c4	pixman-access.c	/^fetch_pixel_c4 (bits_image_t *image,$/;"	f	file:
fetch_pixel_c8	pixman-access.c	/^fetch_pixel_c8 (bits_image_t *image,$/;"	f	file:
fetch_pixel_g1	pixman-access.c	/^fetch_pixel_g1 (bits_image_t *image,$/;"	f	file:
fetch_pixel_g4	pixman-access.c	2814;"	d	file:
fetch_pixel_g8	pixman-access.c	2788;"	d	file:
fetch_pixel_generic_64	pixman-access.c	/^fetch_pixel_generic_64 (bits_image_t *image,$/;"	f	file:
fetch_pixel_generic_lossy_32	pixman-access.c	/^fetch_pixel_generic_lossy_32 (bits_image_t *image,$/;"	f	file:
fetch_pixel_r1g2b1	pixman-access.c	/^fetch_pixel_r1g2b1 (bits_image_t *image,$/;"	f	file:
fetch_pixel_r3g3b2	pixman-access.c	/^fetch_pixel_r3g3b2 (bits_image_t *image,$/;"	f	file:
fetch_pixel_r5g6b5	pixman-access.c	/^fetch_pixel_r5g6b5 (bits_image_t *image,$/;"	f	file:
fetch_pixel_r8g8b8	pixman-access.c	/^fetch_pixel_r8g8b8 (bits_image_t *image,$/;"	f	file:
fetch_pixel_raw_32	pixman-access.c	/^    fetch_pixel_32_t		fetch_pixel_raw_32;$/;"	m	struct:__anon7	file:
fetch_pixel_raw_32	pixman-private.h	/^    fetch_pixel_32_t	       fetch_pixel_raw_32;$/;"	m	struct:bits_image
fetch_pixel_raw_64	pixman-access.c	/^    fetch_pixel_64_t		fetch_pixel_raw_64;$/;"	m	struct:__anon7	file:
fetch_pixel_raw_64	pixman-private.h	/^    fetch_pixel_64_t	       fetch_pixel_raw_64;$/;"	m	struct:bits_image
fetch_pixel_x1b5g5r5	pixman-access.c	/^fetch_pixel_x1b5g5r5 (bits_image_t *image,$/;"	f	file:
fetch_pixel_x1r5g5b5	pixman-access.c	/^fetch_pixel_x1r5g5b5 (bits_image_t *image,$/;"	f	file:
fetch_pixel_x2b10g10r10	pixman-access.c	/^fetch_pixel_x2b10g10r10 (bits_image_t *image,$/;"	f	file:
fetch_pixel_x2r10g10b10	pixman-access.c	/^fetch_pixel_x2r10g10b10 (bits_image_t *image,$/;"	f	file:
fetch_pixel_x4a4	pixman-access.c	/^fetch_pixel_x4a4 (bits_image_t *image,$/;"	f	file:
fetch_pixel_x4b4g4r4	pixman-access.c	/^fetch_pixel_x4b4g4r4 (bits_image_t *image,$/;"	f	file:
fetch_pixel_x4c4	pixman-access.c	2793;"	d	file:
fetch_pixel_x4g4	pixman-access.c	2798;"	d	file:
fetch_pixel_x4r4g4b4	pixman-access.c	/^fetch_pixel_x4r4g4b4 (bits_image_t *image,$/;"	f	file:
fetch_pixel_x8b8g8r8	pixman-access.c	/^fetch_pixel_x8b8g8r8 (bits_image_t *image,$/;"	f	file:
fetch_pixel_x8r8g8b8	pixman-access.c	/^fetch_pixel_x8r8g8b8 (bits_image_t *image,$/;"	f	file:
fetch_pixel_yuy2	pixman-access.c	/^fetch_pixel_yuy2 (bits_image_t *image,$/;"	f	file:
fetch_pixel_yv12	pixman-access.c	/^fetch_pixel_yv12 (bits_image_t *image,$/;"	f	file:
fetch_scanline_a1	pixman-access.c	/^fetch_scanline_a1 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a1b1g1r1	pixman-access.c	/^fetch_scanline_a1b1g1r1 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a1b5g5r5	pixman-access.c	/^fetch_scanline_a1b5g5r5 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a1r1g1b1	pixman-access.c	/^fetch_scanline_a1r1g1b1 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a1r5g5b5	pixman-access.c	/^fetch_scanline_a1r5g5b5 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a2b10g10r10	pixman-access.c	/^fetch_scanline_a2b10g10r10 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a2b2g2r2	pixman-access.c	/^fetch_scanline_a2b2g2r2 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a2r10g10b10	pixman-access.c	/^fetch_scanline_a2r10g10b10 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a2r2g2b2	pixman-access.c	/^fetch_scanline_a2r2g2b2 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a4	pixman-access.c	/^fetch_scanline_a4 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a4b4g4r4	pixman-access.c	/^fetch_scanline_a4b4g4r4 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a4r4g4b4	pixman-access.c	/^fetch_scanline_a4r4g4b4 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a8	pixman-access.c	/^fetch_scanline_a8 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a8b8g8r8	pixman-access.c	/^fetch_scanline_a8b8g8r8 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_a8r8g8b8	pixman-access.c	/^fetch_scanline_a8r8g8b8 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_b1g2r1	pixman-access.c	/^fetch_scanline_b1g2r1 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_b2g3r3	pixman-access.c	/^fetch_scanline_b2g3r3 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_b5g6r5	pixman-access.c	/^fetch_scanline_b5g6r5 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_b8g8r8	pixman-access.c	/^fetch_scanline_b8g8r8 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_b8g8r8a8	pixman-access.c	/^fetch_scanline_b8g8r8a8 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_b8g8r8x8	pixman-access.c	/^fetch_scanline_b8g8r8x8 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_c4	pixman-access.c	/^fetch_scanline_c4 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_c8	pixman-access.c	/^fetch_scanline_c8 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_g1	pixman-access.c	/^fetch_scanline_g1 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_g4	pixman-access.c	2813;"	d	file:
fetch_scanline_g8	pixman-access.c	2787;"	d	file:
fetch_scanline_generic_64	pixman-access.c	/^fetch_scanline_generic_64 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_r1g2b1	pixman-access.c	/^fetch_scanline_r1g2b1 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_r3g3b2	pixman-access.c	/^fetch_scanline_r3g3b2 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_r5g6b5	pixman-access.c	/^fetch_scanline_r5g6b5 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_r8g8b8	pixman-access.c	/^fetch_scanline_r8g8b8 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_raw_32	pixman-access.c	/^    fetch_scanline_t		fetch_scanline_raw_32;$/;"	m	struct:__anon7	file:
fetch_scanline_raw_32	pixman-private.h	/^    fetch_scanline_t           fetch_scanline_raw_32;$/;"	m	struct:bits_image
fetch_scanline_raw_64	pixman-access.c	/^    fetch_scanline_t		fetch_scanline_raw_64;$/;"	m	struct:__anon7	file:
fetch_scanline_raw_64	pixman-private.h	/^    fetch_scanline_t           fetch_scanline_raw_64;$/;"	m	struct:bits_image
fetch_scanline_t	pixman-private.h	/^typedef void (*fetch_scanline_t) (pixman_image_t *image,$/;"	t
fetch_scanline_x1b5g5r5	pixman-access.c	/^fetch_scanline_x1b5g5r5 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_x1r5g5b5	pixman-access.c	/^fetch_scanline_x1r5g5b5 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_x2b10g10r10	pixman-access.c	/^fetch_scanline_x2b10g10r10 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_x2r10g10b10	pixman-access.c	/^fetch_scanline_x2r10g10b10 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_x4a4	pixman-access.c	/^fetch_scanline_x4a4 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_x4b4g4r4	pixman-access.c	/^fetch_scanline_x4b4g4r4 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_x4c4	pixman-access.c	2792;"	d	file:
fetch_scanline_x4g4	pixman-access.c	2797;"	d	file:
fetch_scanline_x4r4g4b4	pixman-access.c	/^fetch_scanline_x4r4g4b4 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_x8b8g8r8	pixman-access.c	/^fetch_scanline_x8b8g8r8 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_x8r8g8b8	pixman-access.c	/^fetch_scanline_x8r8g8b8 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_yuy2	pixman-access.c	/^fetch_scanline_yuy2 (pixman_image_t *image,$/;"	f	file:
fetch_scanline_yv12	pixman-access.c	/^fetch_scanline_yv12 (pixman_image_t *image,$/;"	f	file:
fill	pixman-private.h	/^    pixman_fill_func_t		fill;$/;"	m	struct:pixman_implementation_t
filter	pixman-private.h	/^    pixman_filter_t             filter;$/;"	m	struct:image_common
filter_params	pixman-private.h	/^    pixman_fixed_t *            filter_params;$/;"	m	struct:image_common
fixed_inverse	pixman-matrix.c	/^fixed_inverse (pixman_fixed_t x)$/;"	f	file:
flags	pixman-arm-neon-asm.h	/^                                                   flags, \\$/;"	v
flags	pixman-arm-neon-asm.h	/^                                   flags, \\$/;"	v
flags	pixman-private.h	/^    uint32_t			flags;$/;"	m	struct:image_common
fname	pixman-arm-simd-asm.S	/^fname:$/;"	l
force_inline	pixman-compiler.h	52;"	d
force_inline	pixman-compiler.h	55;"	d
force_inline	pixman-compiler.h	58;"	d
format	pixman-access.c	/^    pixman_format_code_t	format;$/;"	m	struct:__anon7	file:
format	pixman-private.h	/^    pixman_format_code_t       format;$/;"	m	struct:bits_image
format_info_t	pixman-access.c	/^} format_info_t;$/;"	t	typeref:struct:__anon7	file:
free_me	pixman-private.h	/^    uint32_t *                 free_me;$/;"	m	struct:bits_image
func	pixman-private.h	/^    pixman_composite_func_t func;$/;"	m	struct:__anon5
general_blt	pixman-general.c	/^general_blt (pixman_implementation_t *imp,$/;"	f	file:
general_composite_rect	pixman-general.c	/^general_composite_rect  (pixman_implementation_t *imp,$/;"	f	file:
general_fast_path	pixman-general.c	/^static const pixman_fast_path_t general_fast_path[] =$/;"	v	file:
general_fill	pixman-general.c	/^general_fill (pixman_implementation_t *imp,$/;"	f	file:
generate_composite_function	pixman-arm-neon-asm.S	/^generate_composite_function \\$/;"	l
generate_composite_function_single_scanline	pixman-arm-neon-asm.S	/^generate_composite_function_single_scanline \\$/;"	l
get_pixel	pixman-bits-image.c	/^get_pixel (bits_image_t *image, int x, int y, pixman_bool_t check_bounds)$/;"	f	file:
get_scanline_32	pixman-private.h	/^    fetch_scanline_t            get_scanline_32;$/;"	m	struct:image_common
get_scanline_64	pixman-private.h	/^    fetch_scanline_t            get_scanline_64;$/;"	m	struct:image_common
gradient	pixman-private.h	/^    gradient_t         gradient;$/;"	m	union:pixman_image
gradient	pixman-private.h	/^struct gradient$/;"	s
gradient_t	pixman-private.h	/^typedef struct gradient gradient_t;$/;"	t	typeref:struct:gradient
green	pixman.h	/^    uint16_t    green;$/;"	m	struct:pixman_color
have_clip_region	pixman-private.h	/^    pixman_bool_t               have_clip_region;   \/* FALSE if there is no clip *\/$/;"	m	struct:image_common
have_vmx	pixman-cpu.c	/^static volatile pixman_bool_t have_vmx = TRUE;$/;"	v	file:
height	pixman-private.h	/^    int                        height;$/;"	m	struct:bits_image
height	pixman.h	/^    uint16_t	width, height;$/;"	m	struct:pixman_rectangle16
height	pixman.h	/^    uint32_t width, height;$/;"	m	struct:pixman_rectangle32
horizontal_gradient_t	pixman-private.h	/^typedef struct horizontal_gradient horizontal_gradient_t;$/;"	t	typeref:struct:horizontal_gradient
idx	pixman-arm-neon-asm.h	/^.macro pixldst0 op, elem_size, reg1, idx, mem_operand, abits$/;"	v
idx	pixman-arm-neon-asm.h	/^.macro pixldst30 op, elem_size, reg1, reg2, reg3, idx, mem_operand$/;"	v
image_common	pixman-private.h	/^struct image_common$/;"	s
image_common_t	pixman-private.h	/^typedef struct image_common image_common_t;$/;"	t	typeref:struct:image_common
image_property_changed	pixman-image.c	/^image_property_changed (pixman_image_t *image)$/;"	f	file:
image_type_t	pixman-private.h	/^} image_type_t;$/;"	t	typeref:enum:__anon2
imp	pixman.c	/^static pixman_implementation_t *imp;$/;"	v	file:
in	pixman-fast-path.c	/^in (uint32_t x,$/;"	f	file:
in	pixman-mmx.c	/^in (__m64 src, __m64 mask)$/;"	f	file:
in_over	pixman-mmx.c	/^in_over (__m64 src, __m64 srca, __m64 mask, __m64 dest)$/;"	f	file:
in_over	pixman-mmx.c	296;"	d	file:
in_over	pixman-vmx.c	126;"	d	file:
in_over_1x64	pixman-sse2.c	/^in_over_1x64 (__m64* src, __m64* alpha, __m64* mask, __m64* dst)$/;"	f	file:
in_over_2x128	pixman-sse2.c	/^in_over_2x128 (__m128i* src_lo,$/;"	f	file:
in_over_full_src_alpha	pixman-mmx.c	/^in_over_full_src_alpha (__m64 src, __m64 mask, __m64 dest)$/;"	f	file:
indexed	pixman-private.h	/^    const pixman_indexed_t *   indexed;$/;"	m	struct:bits_image
init	pixman-arm-neon-asm.h	/^                                                   init, \\$/;"	v
init	pixman-arm-neon-asm.h	/^                                   init, \\$/;"	v
initialized	pixman-cpu.c	/^static pixman_bool_t initialized = FALSE;$/;"	v	file:
initialized	pixman-private.h	/^    int             initialized;$/;"	m	struct:pixman_timer_t
inline	pixman-compiler.h	51;"	d
inline	pixman-compiler.h	54;"	d
invert_colors	pixman-mmx.c	/^invert_colors (__m64 pixel)$/;"	f	file:
invert_colors_1x64	pixman-sse2.c	/^invert_colors_1x64 (__m64 data)$/;"	f	file:
invert_colors_2x128	pixman-sse2.c	/^invert_colors_2x128 (__m128i  data_lo,$/;"	f	file:
is_opaque	pixman-sse2.c	/^is_opaque (__m128i x)$/;"	f	file:
is_transparent	pixman-sse2.c	/^is_transparent (__m128i x)$/;"	f	file:
is_zero	pixman-sse2.c	/^is_zero (__m128i x)$/;"	f	file:
jump_env	pixman-cpu.c	/^static jmp_buf jump_env;$/;"	v	file:
l	pixman.h	/^    pixman_fixed_t	l, r, y;$/;"	m	struct:pixman_span_fix
left	pixman.h	/^    pixman_line_fixed_t	left, right;$/;"	m	struct:pixman_trapezoid
left_ag	pixman-private.h	/^    uint32_t                left_ag;$/;"	m	struct:__anon4
left_rb	pixman-private.h	/^    uint32_t                left_rb;$/;"	m	struct:__anon4
left_x	pixman-private.h	/^    int32_t                 left_x;$/;"	m	struct:__anon4
linear	pixman-private.h	/^    linear_gradient_t  linear;$/;"	m	union:pixman_image
linear_gradient	pixman-private.h	/^struct linear_gradient$/;"	s
linear_gradient_classify	pixman-linear-gradient.c	/^linear_gradient_classify (pixman_image_t *image,$/;"	f	file:
linear_gradient_get_scanline_32	pixman-linear-gradient.c	/^linear_gradient_get_scanline_32 (pixman_image_t *image,$/;"	f	file:
linear_gradient_property_changed	pixman-linear-gradient.c	/^linear_gradient_property_changed (pixman_image_t *image)$/;"	f	file:
linear_gradient_t	pixman-private.h	/^typedef struct linear_gradient linear_gradient_t;$/;"	t	typeref:struct:linear_gradient
load8888	pixman-mmx.c	/^load8888 (uint32_t v)$/;"	f	file:
load_128_aligned	pixman-sse2.c	/^load_128_aligned (__m128i* src)$/;"	f	file:
load_128_unaligned	pixman-sse2.c	/^load_128_unaligned (const __m128i* src)$/;"	f	file:
load_32_1x64	pixman-sse2.c	/^load_32_1x64 (uint32_t data)$/;"	f	file:
m	pixman.h	/^    double  m[3][3];$/;"	m	struct:pixman_f_transform
mask	make-combine.pl	/^sub mask {$/;"	s
mask_0080	pixman-sse2.c	/^static __m128i mask_0080;$/;"	v	file:
mask_00ff	pixman-sse2.c	/^static __m128i mask_00ff;$/;"	v	file:
mask_0101	pixman-sse2.c	/^static __m128i mask_0101;$/;"	v	file:
mask_565_b	pixman-sse2.c	/^static __m128i mask_565_b;$/;"	v	file:
mask_565_fix_g	pixman-sse2.c	/^static __m128i mask_565_fix_g;$/;"	v	file:
mask_565_fix_rb	pixman-sse2.c	/^static __m128i mask_565_fix_rb;$/;"	v	file:
mask_565_g1	pixman-sse2.c	/^static __m128i mask_565_g1, mask_565_g2;$/;"	v	file:
mask_565_g2	pixman-sse2.c	/^static __m128i mask_565_g1, mask_565_g2;$/;"	v	file:
mask_565_r	pixman-sse2.c	/^static __m128i mask_565_r;$/;"	v	file:
mask_alpha	pixman-sse2.c	/^static __m128i mask_alpha;$/;"	v	file:
mask_basereg	pixman-arm-neon-asm.h	/^    pixld       chunk_size, mask_bpp, mask_basereg, MASK$/;"	v
mask_basereg_	pixman-arm-neon-asm.h	/^                                                   mask_basereg_  = 24$/;"	v
mask_basereg_	pixman-arm-neon-asm.h	/^                                   mask_basereg_  = 24$/;"	v
mask_blue	pixman-sse2.c	/^static __m128i mask_blue;$/;"	v	file:
mask_bpp	pixman-arm-neon-asm.h	/^    pixdeinterleave mask_bpp, mask_basereg$/;"	v
mask_bpp	pixman-arm-neon-asm.h	/^    pixld       chunk_size, mask_bpp, mask_basereg, MASK$/;"	v
mask_bpp	pixman-arm-neon-asm.h	/^    pixld       pixblock_size, mask_bpp, \\$/;"	v
mask_bpp_	pixman-arm-neon-asm.h	/^                                                   mask_bpp_, \\$/;"	v
mask_bpp_	pixman-arm-neon-asm.h	/^                                   mask_bpp_, \\$/;"	v
mask_ff000000	pixman-sse2.c	/^static __m128i mask_ff000000;$/;"	v	file:
mask_ffff	pixman-sse2.c	/^static __m128i mask_ffff;$/;"	v	file:
mask_flags	pixman-private.h	/^    uint32_t		    mask_flags;$/;"	m	struct:__anon5
mask_format	pixman-private.h	/^    pixman_format_code_t    mask_format;$/;"	m	struct:__anon5
mask_green	pixman-sse2.c	/^static __m128i mask_green;$/;"	v	file:
mask_red	pixman-sse2.c	/^static __m128i mask_red;$/;"	v	file:
mask_x0080	pixman-sse2.c	/^static __m64 mask_x0080;$/;"	v	file:
mask_x00ff	pixman-sse2.c	/^static __m64 mask_x00ff;$/;"	v	file:
mask_x0101	pixman-sse2.c	/^static __m64 mask_x0101;$/;"	v	file:
mask_x565_rgb	pixman-sse2.c	/^static __m64 mask_x565_rgb;$/;"	v	file:
mask_x565_unpack	pixman-sse2.c	/^static __m64 mask_x565_unpack;$/;"	v	file:
mask_x_alpha	pixman-sse2.c	/^static __m64 mask_x_alpha;$/;"	v	file:
matrix	pixman.h	/^    pixman_fixed_t	matrix[3][3];$/;"	m	struct:pixman_transform
maybe_prefetch	pixman-sse2.c	/^maybe_prefetch (__m128i* addr)$/;"	f	file:
maybe_prefetch_next	pixman-sse2.c	/^maybe_prefetch_next (__m128i* addr)$/;"	f	file:
mem_operand	pixman-arm-neon-asm.h	/^                              %(basereg+6), %(basereg+7), mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^                      %(basereg+6), %(basereg+7), mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^        pixldst0 op, 16, %(basereg+0), 1, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^        pixldst0 op, 16, %(basereg+0), 2, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^        pixldst0 op, 16, %(basereg+0), 3, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^        pixldst0 op, 32, %(basereg+0), 1, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 2, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 3, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 4, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 5, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 6, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 7, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^    pixld numpix, bpp, basereg, mem_operand, %(bpp * numpix)$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^    pixld numpix, bpp, basereg, mem_operand, 128$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^    pixldst0 op, 8, %(basereg+0), 1, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^    pixldst1 op, elem_size, %(basereg+1), mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^    pixldst2 op, elem_size, %(basereg+2), %(basereg+3), mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^    pixst numpix, bpp, basereg, mem_operand, %(bpp * numpix)$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^    pixst numpix, bpp, basereg, mem_operand, 128$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^.macro pixld numpix, bpp, basereg, mem_operand, abits=0$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^.macro pixldst numbytes, op, elem_size, basereg, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^.macro pixldst0 op, elem_size, reg1, idx, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^.macro pixldst1 op, elem_size, reg1, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^.macro pixldst2 op, elem_size, reg1, reg2, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^.macro pixldst4 op, elem_size, reg1, reg2, reg3, reg4, mem_operand, abits$/;"	v
mem_operand	pixman-arm-neon-asm.h	/^.macro pixst numpix, bpp, basereg, mem_operand, abits=0$/;"	v
mmx_000000000000ffff	pixman-mmx.c	/^    mmxdatafield mmx_000000000000ffff;$/;"	m	struct:__anon1	file:
mmx_0000ffff00000000	pixman-mmx.c	/^    mmxdatafield mmx_0000ffff00000000;$/;"	m	struct:__anon1	file:
mmx_4x0080	pixman-mmx.c	/^    mmxdatafield mmx_4x0080;$/;"	m	struct:__anon1	file:
mmx_4x00ff	pixman-mmx.c	/^    mmxdatafield mmx_4x00ff;$/;"	m	struct:__anon1	file:
mmx_565_b	pixman-mmx.c	/^    mmxdatafield mmx_565_b;$/;"	m	struct:__anon1	file:
mmx_565_g	pixman-mmx.c	/^    mmxdatafield mmx_565_g;$/;"	m	struct:__anon1	file:
mmx_565_r	pixman-mmx.c	/^    mmxdatafield mmx_565_r;$/;"	m	struct:__anon1	file:
mmx_565_rgb	pixman-mmx.c	/^    mmxdatafield mmx_565_rgb;$/;"	m	struct:__anon1	file:
mmx_565_unpack_multiplier	pixman-mmx.c	/^    mmxdatafield mmx_565_unpack_multiplier;$/;"	m	struct:__anon1	file:
mmx_blt	pixman-mmx.c	/^mmx_blt (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_add_ca	pixman-mmx.c	/^mmx_combine_add_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_add_u	pixman-mmx.c	/^mmx_combine_add_u (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_atop_ca	pixman-mmx.c	/^mmx_combine_atop_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_atop_reverse_ca	pixman-mmx.c	/^mmx_combine_atop_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_atop_reverse_u	pixman-mmx.c	/^mmx_combine_atop_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_atop_u	pixman-mmx.c	/^mmx_combine_atop_u (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_in_ca	pixman-mmx.c	/^mmx_combine_in_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_in_reverse_ca	pixman-mmx.c	/^mmx_combine_in_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_in_reverse_u	pixman-mmx.c	/^mmx_combine_in_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_in_u	pixman-mmx.c	/^mmx_combine_in_u (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_out_ca	pixman-mmx.c	/^mmx_combine_out_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_out_reverse_ca	pixman-mmx.c	/^mmx_combine_out_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_out_reverse_u	pixman-mmx.c	/^mmx_combine_out_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_out_u	pixman-mmx.c	/^mmx_combine_out_u (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_over_ca	pixman-mmx.c	/^mmx_combine_over_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_over_reverse_ca	pixman-mmx.c	/^mmx_combine_over_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_over_reverse_u	pixman-mmx.c	/^mmx_combine_over_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_over_u	pixman-mmx.c	/^mmx_combine_over_u (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_saturate_u	pixman-mmx.c	/^mmx_combine_saturate_u (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_src_ca	pixman-mmx.c	/^mmx_combine_src_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_xor_ca	pixman-mmx.c	/^mmx_combine_xor_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_combine_xor_u	pixman-mmx.c	/^mmx_combine_xor_u (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_add_8000_8000	pixman-mmx.c	/^mmx_composite_add_8000_8000 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_add_8888_8888	pixman-mmx.c	/^mmx_composite_add_8888_8888 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_add_n_8_8	pixman-mmx.c	/^mmx_composite_add_n_8_8 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_copy_area	pixman-mmx.c	/^mmx_composite_copy_area (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_in_8_8	pixman-mmx.c	/^mmx_composite_in_8_8 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_in_n_8_8	pixman-mmx.c	/^mmx_composite_in_n_8_8 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_over_8888_0565	pixman-mmx.c	/^mmx_composite_over_8888_0565 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_over_8888_8888	pixman-mmx.c	/^mmx_composite_over_8888_8888 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_over_8888_n_8888	pixman-mmx.c	/^mmx_composite_over_8888_n_8888 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_over_n_0565	pixman-mmx.c	/^mmx_composite_over_n_0565 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_over_n_8888	pixman-mmx.c	/^mmx_composite_over_n_8888 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_over_n_8888_0565_ca	pixman-mmx.c	/^mmx_composite_over_n_8888_0565_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_over_n_8888_8888_ca	pixman-mmx.c	/^mmx_composite_over_n_8888_8888_ca (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_over_n_8_0565	pixman-mmx.c	/^mmx_composite_over_n_8_0565 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_over_n_8_8888	pixman-mmx.c	/^mmx_composite_over_n_8_8888 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_over_pixbuf_0565	pixman-mmx.c	/^mmx_composite_over_pixbuf_0565 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_over_pixbuf_8888	pixman-mmx.c	/^mmx_composite_over_pixbuf_8888 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_over_x888_n_8888	pixman-mmx.c	/^mmx_composite_over_x888_n_8888 (pixman_implementation_t *imp,$/;"	f	file:
mmx_composite_src_n_8_8888	pixman-mmx.c	/^mmx_composite_src_n_8_8888 (pixman_implementation_t *imp,$/;"	f	file:
mmx_data_t	pixman-mmx.c	/^} mmx_data_t;$/;"	t	typeref:struct:__anon1	file:
mmx_fast_paths	pixman-mmx.c	/^static const pixman_fast_path_t mmx_fast_paths[] =$/;"	v	file:
mmx_ffff0000ffff0000	pixman-mmx.c	/^    mmxdatafield mmx_ffff0000ffff0000;$/;"	m	struct:__anon1	file:
mmx_fill	pixman-mmx.c	/^mmx_fill (pixman_implementation_t *imp,$/;"	f	file:
mmx_full_alpha	pixman-mmx.c	/^    mmxdatafield mmx_full_alpha;$/;"	m	struct:__anon1	file:
mmx_mask_0	pixman-mmx.c	/^    mmxdatafield mmx_mask_0;$/;"	m	struct:__anon1	file:
mmx_mask_1	pixman-mmx.c	/^    mmxdatafield mmx_mask_1;$/;"	m	struct:__anon1	file:
mmx_mask_2	pixman-mmx.c	/^    mmxdatafield mmx_mask_2;$/;"	m	struct:__anon1	file:
mmx_mask_3	pixman-mmx.c	/^    mmxdatafield mmx_mask_3;$/;"	m	struct:__anon1	file:
mmxdatafield	pixman-mmx.c	/^typedef __m64 mmxdatafield;$/;"	t	file:
mmxdatafield	pixman-mmx.c	/^typedef uint64_t mmxdatafield;$/;"	t	file:
n_filter_params	pixman-private.h	/^    int                         n_filter_params;$/;"	m	struct:image_common
n_stops	pixman-private.h	/^    int                     n_stops;$/;"	m	struct:gradient
n_times	pixman-private.h	/^    uint64_t        n_times;$/;"	m	struct:pixman_timer_t
name	pixman-private.h	/^    const char *    name;$/;"	m	struct:pixman_timer_t
need_reset	pixman-private.h	/^    int                     need_reset;$/;"	m	struct:__anon4
negate	pixman-mmx.c	/^negate (__m64 mask)$/;"	f	file:
negate	pixman-vmx.c	/^negate (vector unsigned int src)$/;"	f	file:
negate_1x64	pixman-sse2.c	/^negate_1x64 (__m64 data)$/;"	f	file:
negate_2x128	pixman-sse2.c	/^negate_2x128 (__m128i  data_lo,$/;"	f	file:
next	pixman-private.h	/^    pixman_timer_t *next;$/;"	m	struct:pixman_timer_t
no_vERBOSE	pixman-mmx.c	42;"	d	file:
numRects	pixman.h	/^    long		numRects;$/;"	m	struct:pixman_region16_data
numRects	pixman.h	/^    long		numRects;$/;"	m	struct:pixman_region32_data
num_stops	pixman-private.h	/^    int                     num_stops;$/;"	m	struct:__anon4
oil_profile_stamp_rdtsc	pixman-private.h	/^oil_profile_stamp_rdtsc (void)$/;"	f
op	pixman-arm-neon-asm.h	/^        pixldst0 op, 16, %(basereg+0), 1, mem_operand, abits$/;"	v
op	pixman-arm-neon-asm.h	/^        pixldst0 op, 16, %(basereg+0), 3, mem_operand, abits$/;"	v
op	pixman-arm-neon-asm.h	/^        pixldst0 op, 32, %(basereg+0), 1, mem_operand, abits$/;"	v
op	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 3, mem_operand, abits$/;"	v
op	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 5, mem_operand, abits$/;"	v
op	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 6, mem_operand, abits$/;"	v
op	pixman-arm-neon-asm.h	/^        pixldst0 op, 8, %(basereg+0), 7, mem_operand, abits$/;"	v
op	pixman-arm-neon-asm.h	/^.macro pixldst numbytes, op, elem_size, basereg, mem_operand, abits$/;"	v
op	pixman-private.h	/^    pixman_op_t             op;$/;"	m	struct:__anon5
opaque_info	pixman.c	/^    uint8_t	opaque_info[4];$/;"	m	struct:operator_info_t	file:
operator_info_t	pixman.c	/^struct operator_info_t$/;"	s	file:
operator_info_t	pixman.c	/^typedef struct operator_info_t operator_info_t;$/;"	t	typeref:struct:operator_info_t	file:
operator_table	pixman.c	/^static const operator_info_t operator_table[] =$/;"	v	file:
optimize_operator	pixman.c	/^optimize_operator (pixman_op_t     op,$/;"	f	file:
out_of_bounds_workaround	pixman-image.c	/^static pixman_bool_t out_of_bounds_workaround = TRUE;$/;"	v	file:
over	pixman-fast-path.c	/^over (uint32_t src,$/;"	f	file:
over	pixman-mmx.c	/^over (__m64 src,$/;"	f	file:
over	pixman-vmx.c	/^over (vector unsigned int src,$/;"	f	file:
over_1x64	pixman-sse2.c	/^over_1x64 (__m64 src, __m64 alpha, __m64 dst)$/;"	f	file:
over_2x128	pixman-sse2.c	/^over_2x128 (__m128i* src_lo,$/;"	f	file:
over_rev_non_pre	pixman-mmx.c	/^over_rev_non_pre (__m64 src, __m64 dest)$/;"	f	file:
over_rev_non_pre_1x64	pixman-sse2.c	/^over_rev_non_pre_1x64 (__m64 src, __m64 dst)$/;"	f	file:
over_rev_non_pre_2x128	pixman-sse2.c	/^over_rev_non_pre_2x128 (__m128i  src_lo,$/;"	f	file:
overlap_proc_ptr	pixman-region.c	/^typedef pixman_bool_t (*overlap_proc_ptr) (region_type_t *region,$/;"	t	file:
p1	pixman-private.h	/^    pixman_point_fixed_t p1;$/;"	m	struct:linear_gradient
p1	pixman.h	/^    pixman_point_fixed_t	p1, p2;$/;"	m	struct:pixman_line_fixed
p2	pixman-private.h	/^    pixman_point_fixed_t p2;$/;"	m	struct:linear_gradient
p2	pixman.h	/^    pixman_point_fixed_t	p1, p2;$/;"	m	struct:pixman_line_fixed
pack8888	pixman-mmx.c	/^pack8888 (__m64 lo, __m64 hi)$/;"	f	file:
pack_1x64_32	pixman-sse2.c	/^pack_1x64_32 (__m64 data)$/;"	f	file:
pack_2x128_128	pixman-sse2.c	/^pack_2x128_128 (__m128i lo, __m128i hi)$/;"	f	file:
pack_565	pixman-mmx.c	/^pack_565 (__m64 pixel, __m64 target, int pos)$/;"	f	file:
pack_565_2x128_128	pixman-sse2.c	/^pack_565_2x128_128 (__m128i lo, __m128i hi)$/;"	f	file:
pack_565_32_16	pixman-sse2.c	/^pack_565_32_16 (uint32_t pixel)$/;"	f	file:
pack_565_4x128_128	pixman-sse2.c	/^pack_565_4x128_128 (__m128i* xmm0, __m128i* xmm1, __m128i* xmm2, __m128i* xmm3)$/;"	f	file:
pix_add	pixman-mmx.c	/^pix_add (__m64 a, __m64 b)$/;"	f	file:
pix_add	pixman-vmx.c	/^pix_add (vector unsigned int a, vector unsigned int b)$/;"	f	file:
pix_add_mul	pixman-mmx.c	/^pix_add_mul (__m64 x, __m64 a, __m64 y, __m64 b)$/;"	f	file:
pix_add_mul	pixman-mmx.c	411;"	d	file:
pix_add_mul	pixman-vmx.c	/^pix_add_mul (vector unsigned int x,$/;"	f	file:
pix_add_multiply_1x64	pixman-sse2.c	/^pix_add_multiply_1x64 (__m64* src,$/;"	f	file:
pix_add_multiply_2x128	pixman-sse2.c	/^pix_add_multiply_2x128 (__m128i* src_lo,$/;"	f	file:
pix_multiply	pixman-mmx.c	/^pix_multiply (__m64 a, __m64 b)$/;"	f	file:
pix_multiply	pixman-vmx.c	/^pix_multiply (vector unsigned int p, vector unsigned int a)$/;"	f	file:
pix_multiply_1x64	pixman-sse2.c	/^pix_multiply_1x64 (__m64 data,$/;"	f	file:
pix_multiply_2x128	pixman-sse2.c	/^pix_multiply_2x128 (__m128i* data_lo,$/;"	f	file:
pixblock_size	pixman-arm-neon-asm.h	/^    pixld       pixblock_size, dst_r_bpp, \\$/;"	v
pixblock_size	pixman-arm-neon-asm.h	/^    pixld       pixblock_size, mask_bpp, \\$/;"	v
pixblock_size	pixman-arm-neon-asm.h	/^    pixld       pixblock_size, src_bpp, \\$/;"	v
pixblock_size	pixman-arm-neon-asm.h	/^    pixld_a     pixblock_size, dst_r_bpp, \\$/;"	v
pixblock_size	pixman-arm-neon-asm.h	/^    pixst       pixblock_size, dst_w_bpp, \\$/;"	v
pixblock_size	pixman-arm-neon-asm.h	/^    pixst_a     pixblock_size, dst_w_bpp, \\$/;"	v
pixblock_size_	pixman-arm-neon-asm.h	/^                                                   pixblock_size_, \\$/;"	v
pixblock_size_	pixman-arm-neon-asm.h	/^                                   pixblock_size_, \\$/;"	v
pixman_add_trapezoids	pixman-trap.c	/^pixman_add_trapezoids (pixman_image_t *          image,$/;"	f
pixman_add_traps	pixman-trap.c	/^pixman_add_traps (pixman_image_t * image,$/;"	f
pixman_addition_overflows_int	pixman-utils.c	/^pixman_addition_overflows_int (unsigned int a,$/;"	f
pixman_arm_read_auxv	pixman-cpu.c	/^pixman_arm_read_auxv ()$/;"	f	file:
pixman_asm_function	pixman-arm-simd-asm.S	/^pixman_asm_function pixman_composite_add_8000_8000_asm_armv6$/;"	l
pixman_asm_function	pixman-arm-simd-asm.S	/^pixman_asm_function pixman_composite_over_8888_8888_asm_armv6$/;"	l
pixman_asm_function	pixman-arm-simd-asm.S	/^pixman_asm_function pixman_composite_over_8888_n_8888_asm_armv6$/;"	l
pixman_asm_function	pixman-arm-simd-asm.S	/^pixman_asm_function pixman_composite_over_n_8_8888_asm_armv6$/;"	l
pixman_blt	pixman.c	/^pixman_blt (uint32_t *src_bits,$/;"	f
pixman_blt_func_t	pixman-private.h	/^typedef pixman_bool_t (*pixman_blt_func_t) (pixman_implementation_t *imp,$/;"	t
pixman_blt_mmx	pixman-mmx.c	/^pixman_blt_mmx (uint32_t *src_bits,$/;"	f	file:
pixman_blt_neon	pixman-arm-neon.c	/^pixman_blt_neon (uint32_t *src_bits,$/;"	f	file:
pixman_blt_sse2	pixman-sse2.c	/^pixman_blt_sse2 (uint32_t *src_bits,$/;"	f	file:
pixman_bool_t	pixman.h	/^typedef int pixman_bool_t;$/;"	t
pixman_box16	pixman.h	/^struct pixman_box16$/;"	s
pixman_box16_t	pixman.h	/^typedef struct pixman_box16		pixman_box16_t;$/;"	t	typeref:struct:pixman_box16
pixman_box32	pixman.h	/^struct pixman_box32$/;"	s
pixman_box32_t	pixman.h	/^typedef struct pixman_box32		pixman_box32_t;$/;"	t	typeref:struct:pixman_box32
pixman_break	pixman-region.c	/^pixman_break (region_type_t *region)$/;"	f	file:
pixman_broken_data	pixman-region.c	/^static region_data_type_t *pixman_broken_data =$/;"	v	file:
pixman_coalesce	pixman-region.c	/^pixman_coalesce (region_type_t * region,      \/* Region to coalesce		 *\/$/;"	f	file:
pixman_color	pixman.h	/^struct pixman_color$/;"	s
pixman_color_t	pixman.h	/^typedef struct pixman_color pixman_color_t;$/;"	t	typeref:struct:pixman_color
pixman_combine_32_func_t	pixman-private.h	/^typedef void (*pixman_combine_32_func_t) (pixman_implementation_t *imp,$/;"	t
pixman_combine_64_func_t	pixman-private.h	/^typedef void (*pixman_combine_64_func_t) (pixman_implementation_t *imp,$/;"	t
pixman_composite_func_t	pixman-private.h	/^typedef void (*pixman_composite_func_t) (pixman_implementation_t *imp,$/;"	t
pixman_compute_composite_region	pixman.c	/^pixman_compute_composite_region (pixman_region16_t * region,$/;"	f
pixman_compute_composite_region32	pixman.c	/^pixman_compute_composite_region32 (pixman_region32_t * region,$/;"	f	file:
pixman_contract	pixman-utils.c	/^pixman_contract (uint32_t *      dst,$/;"	f
pixman_disable_out_of_bounds_workaround	pixman-image.c	/^pixman_disable_out_of_bounds_workaround (void)$/;"	f
pixman_double_to_fixed	pixman.h	131;"	d
pixman_edge	pixman.h	/^struct pixman_edge$/;"	s
pixman_edge_init	pixman-trap.c	/^pixman_edge_init (pixman_edge_t *e,$/;"	f
pixman_edge_step	pixman-trap.c	/^pixman_edge_step (pixman_edge_t *e,$/;"	f
pixman_edge_t	pixman.h	/^typedef struct pixman_edge pixman_edge_t;$/;"	t	typeref:struct:pixman_edge
pixman_expand	pixman-utils.c	/^pixman_expand (uint64_t *           dst,$/;"	f
pixman_f_transform	pixman.h	/^struct pixman_f_transform$/;"	s
pixman_f_transform_bounds	pixman-matrix.c	/^pixman_f_transform_bounds (const struct pixman_f_transform *t,$/;"	f
pixman_f_transform_from_pixman_transform	pixman-matrix.c	/^pixman_f_transform_from_pixman_transform (struct pixman_f_transform *    ft,$/;"	f
pixman_f_transform_init_identity	pixman-matrix.c	/^pixman_f_transform_init_identity (struct pixman_f_transform *t)$/;"	f
pixman_f_transform_init_rotate	pixman-matrix.c	/^pixman_f_transform_init_rotate (struct pixman_f_transform *t,$/;"	f
pixman_f_transform_init_scale	pixman-matrix.c	/^pixman_f_transform_init_scale (struct pixman_f_transform *t,$/;"	f
pixman_f_transform_init_translate	pixman-matrix.c	/^pixman_f_transform_init_translate (struct pixman_f_transform *t,$/;"	f
pixman_f_transform_invert	pixman-matrix.c	/^pixman_f_transform_invert (struct pixman_f_transform *      dst,$/;"	f
pixman_f_transform_multiply	pixman-matrix.c	/^pixman_f_transform_multiply (struct pixman_f_transform *      dst,$/;"	f
pixman_f_transform_point	pixman-matrix.c	/^pixman_f_transform_point (const struct pixman_f_transform *t,$/;"	f
pixman_f_transform_point_3d	pixman-matrix.c	/^pixman_f_transform_point_3d (const struct pixman_f_transform *t,$/;"	f
pixman_f_transform_rotate	pixman-matrix.c	/^pixman_f_transform_rotate (struct pixman_f_transform *forward,$/;"	f
pixman_f_transform_scale	pixman-matrix.c	/^pixman_f_transform_scale (struct pixman_f_transform *forward,$/;"	f
pixman_f_transform_translate	pixman-matrix.c	/^pixman_f_transform_translate (struct pixman_f_transform *forward,$/;"	f
pixman_f_vector	pixman.h	/^struct pixman_f_vector$/;"	s
pixman_fast_path_t	pixman-private.h	/^} pixman_fast_path_t;$/;"	t	typeref:struct:__anon5
pixman_fill	pixman.c	/^pixman_fill (uint32_t *bits,$/;"	f
pixman_fill16	pixman-fast-path.c	/^pixman_fill16 (uint32_t *bits,$/;"	f	file:
pixman_fill32	pixman-fast-path.c	/^pixman_fill32 (uint32_t *bits,$/;"	f	file:
pixman_fill8	pixman-fast-path.c	/^pixman_fill8 (uint32_t *bits,$/;"	f	file:
pixman_fill_func_t	pixman-private.h	/^typedef pixman_bool_t (*pixman_fill_func_t) (pixman_implementation_t *imp,$/;"	t
pixman_fill_mmx	pixman-mmx.c	/^pixman_fill_mmx (uint32_t *bits,$/;"	f
pixman_fill_neon	pixman-arm-neon.c	/^pixman_fill_neon (uint32_t *bits,$/;"	f	file:
pixman_fill_sse2	pixman-sse2.c	/^pixman_fill_sse2 (uint32_t *bits,$/;"	f
pixman_filter_t	pixman.h	/^} pixman_filter_t;$/;"	t	typeref:enum:__anon12
pixman_fixed_1	pixman.h	125;"	d
pixman_fixed_16_16_t	pixman.h	/^typedef int32_t			pixman_fixed_16_16_t;$/;"	t
pixman_fixed_1_16_t	pixman.h	/^typedef uint32_t		pixman_fixed_1_16_t;$/;"	t
pixman_fixed_1_31_t	pixman.h	/^typedef uint32_t		pixman_fixed_1_31_t;$/;"	t
pixman_fixed_1_minus_e	pixman.h	126;"	d
pixman_fixed_32_32_t	pixman.h	/^typedef int64_t			pixman_fixed_32_32_t;$/;"	t
pixman_fixed_34_30_t	pixman-matrix.c	/^typedef pixman_fixed_32_32_t pixman_fixed_34_30_t;$/;"	t	file:
pixman_fixed_48_16_t	pixman.h	/^typedef pixman_fixed_32_32_t	pixman_fixed_48_16_t;$/;"	t
pixman_fixed_ceil	pixman.h	134;"	d
pixman_fixed_e	pixman.h	124;"	d
pixman_fixed_floor	pixman.h	133;"	d
pixman_fixed_frac	pixman.h	132;"	d
pixman_fixed_fraction	pixman.h	135;"	d
pixman_fixed_minus_1	pixman.h	127;"	d
pixman_fixed_mod_2	pixman.h	136;"	d
pixman_fixed_t	pixman.h	/^typedef pixman_fixed_16_16_t	pixman_fixed_t;$/;"	t
pixman_fixed_to_double	pixman.h	130;"	d
pixman_fixed_to_int	pixman.h	128;"	d
pixman_format_code_t	pixman.h	/^} pixman_format_code_t;$/;"	t	typeref:enum:__anon15
pixman_format_supported_destination	pixman.c	/^pixman_format_supported_destination (pixman_format_code_t format)$/;"	f
pixman_format_supported_source	pixman.c	/^pixman_format_supported_source (pixman_format_code_t format)$/;"	f
pixman_gradient_stop	pixman.h	/^struct pixman_gradient_stop {$/;"	s
pixman_gradient_stop_t	pixman.h	/^typedef struct pixman_gradient_stop	pixman_gradient_stop_t;$/;"	t	typeref:struct:pixman_gradient_stop
pixman_gradient_walker_t	pixman-private.h	/^} pixman_gradient_walker_t;$/;"	t	typeref:struct:__anon4
pixman_have_arm_neon	pixman-cpu.c	/^pixman_have_arm_neon (void)$/;"	f
pixman_have_arm_simd	pixman-cpu.c	/^pixman_have_arm_simd (void)$/;"	f
pixman_have_mmx	pixman-cpu.c	/^pixman_have_mmx (void)$/;"	f	file:
pixman_have_mmx	pixman-cpu.c	540;"	d	file:
pixman_have_sse2	pixman-cpu.c	/^pixman_have_sse2 (void)$/;"	f	file:
pixman_have_sse2	pixman-cpu.c	543;"	d	file:
pixman_have_vmx	pixman-cpu.c	/^pixman_have_vmx (void)$/;"	f	file:
pixman_image	pixman-private.h	/^union pixman_image$/;"	u
pixman_image_composite	pixman.c	/^pixman_image_composite (pixman_op_t      op,$/;"	f
pixman_image_composite32	pixman.c	/^pixman_image_composite32 (pixman_op_t      op,$/;"	f
pixman_image_create_bits	pixman-bits-image.c	/^pixman_image_create_bits (pixman_format_code_t format,$/;"	f
pixman_image_create_conical_gradient	pixman-conical-gradient.c	/^pixman_image_create_conical_gradient (pixman_point_fixed_t *        center,$/;"	f
pixman_image_create_linear_gradient	pixman-linear-gradient.c	/^pixman_image_create_linear_gradient (pixman_point_fixed_t *        p1,$/;"	f
pixman_image_create_radial_gradient	pixman-radial-gradient.c	/^pixman_image_create_radial_gradient (pixman_point_fixed_t *        inner,$/;"	f
pixman_image_create_solid_fill	pixman-solid-fill.c	/^pixman_image_create_solid_fill (pixman_color_t *color)$/;"	f
pixman_image_destroy_func_t	pixman.h	/^typedef void     (* pixman_image_destroy_func_t) (pixman_image_t *image, void *data);$/;"	t
pixman_image_fill_boxes	pixman.c	/^pixman_image_fill_boxes (pixman_op_t           op,$/;"	f
pixman_image_fill_rectangles	pixman.c	/^pixman_image_fill_rectangles (pixman_op_t                 op,$/;"	f
pixman_image_get_data	pixman-image.c	/^pixman_image_get_data (pixman_image_t *image)$/;"	f
pixman_image_get_depth	pixman-image.c	/^pixman_image_get_depth (pixman_image_t *image)$/;"	f
pixman_image_get_destroy_data	pixman-image.c	/^pixman_image_get_destroy_data (pixman_image_t *image)$/;"	f
pixman_image_get_height	pixman-image.c	/^pixman_image_get_height (pixman_image_t *image)$/;"	f
pixman_image_get_stride	pixman-image.c	/^pixman_image_get_stride (pixman_image_t *image)$/;"	f
pixman_image_get_width	pixman-image.c	/^pixman_image_get_width (pixman_image_t *image)$/;"	f
pixman_image_ref	pixman-image.c	/^pixman_image_ref (pixman_image_t *image)$/;"	f
pixman_image_set_accessors	pixman-image.c	/^pixman_image_set_accessors (pixman_image_t *           image,$/;"	f
pixman_image_set_alpha_map	pixman-image.c	/^pixman_image_set_alpha_map (pixman_image_t *image,$/;"	f
pixman_image_set_clip_region	pixman-image.c	/^pixman_image_set_clip_region (pixman_image_t *   image,$/;"	f
pixman_image_set_clip_region32	pixman-image.c	/^pixman_image_set_clip_region32 (pixman_image_t *   image,$/;"	f
pixman_image_set_component_alpha	pixman-image.c	/^pixman_image_set_component_alpha   (pixman_image_t *image,$/;"	f
pixman_image_set_destroy_function	pixman-image.c	/^pixman_image_set_destroy_function (pixman_image_t *            image,$/;"	f
pixman_image_set_filter	pixman-image.c	/^pixman_image_set_filter (pixman_image_t *      image,$/;"	f
pixman_image_set_has_client_clip	pixman-image.c	/^pixman_image_set_has_client_clip (pixman_image_t *image,$/;"	f
pixman_image_set_indexed	pixman-image.c	/^pixman_image_set_indexed (pixman_image_t *        image,$/;"	f
pixman_image_set_repeat	pixman-image.c	/^pixman_image_set_repeat (pixman_image_t *image,$/;"	f
pixman_image_set_source_clipping	pixman-image.c	/^pixman_image_set_source_clipping (pixman_image_t *image,$/;"	f
pixman_image_set_transform	pixman-image.c	/^pixman_image_set_transform (pixman_image_t *          image,$/;"	f
pixman_image_t	pixman.h	/^typedef  union pixman_image		pixman_image_t;$/;"	t	typeref:union:pixman_image
pixman_image_unref	pixman-image.c	/^pixman_image_unref (pixman_image_t *image)$/;"	f
pixman_implementation_t	pixman-private.h	/^struct pixman_implementation_t$/;"	s
pixman_implementation_t	pixman-private.h	/^typedef struct pixman_implementation_t pixman_implementation_t;$/;"	t	typeref:struct:pixman_implementation_t
pixman_index_type	pixman.h	/^typedef uint8_t pixman_index_type;$/;"	t
pixman_indexed	pixman.h	/^struct pixman_indexed$/;"	s
pixman_indexed_t	pixman.h	/^typedef struct pixman_indexed		pixman_indexed_t;$/;"	t	typeref:struct:pixman_indexed
pixman_int_to_fixed	pixman.h	129;"	d
pixman_line_fixed	pixman.h	/^struct pixman_line_fixed$/;"	s
pixman_line_fixed_edge_init	pixman-trap.c	/^pixman_line_fixed_edge_init (pixman_edge_t *            e,$/;"	f
pixman_line_fixed_t	pixman.h	/^typedef struct pixman_line_fixed pixman_line_fixed_t;$/;"	t	typeref:struct:pixman_line_fixed
pixman_malloc_ab	pixman-utils.c	/^pixman_malloc_ab (unsigned int a,$/;"	f
pixman_malloc_abc	pixman-utils.c	/^pixman_malloc_abc (unsigned int a,$/;"	f
pixman_max_fixed_48_16	pixman.h	137;"	d
pixman_min_fixed_48_16	pixman.h	138;"	d
pixman_multiply_overflows_int	pixman-utils.c	/^pixman_multiply_overflows_int (unsigned int a,$/;"	f
pixman_op	pixman-region.c	/^pixman_op (region_type_t *  new_reg,               \/* Place to store result	    *\/$/;"	f	file:
pixman_op_t	pixman.h	/^} pixman_op_t;$/;"	t	typeref:enum:__anon13
pixman_point_fixed	pixman.h	/^struct pixman_point_fixed$/;"	s
pixman_point_fixed_t	pixman.h	/^typedef struct pixman_point_fixed pixman_point_fixed_t;$/;"	t	typeref:struct:pixman_point_fixed
pixman_rasterize_edges	pixman-edge.c	/^pixman_rasterize_edges (pixman_image_t *image,$/;"	f
pixman_rasterize_trapezoid	pixman-trap.c	/^pixman_rasterize_trapezoid (pixman_image_t *          image,$/;"	f
pixman_read_memory_func_t	pixman.h	/^typedef uint32_t (* pixman_read_memory_func_t) (const void *src, int size);$/;"	t
pixman_rect_alloc	pixman-region.c	/^pixman_rect_alloc (region_type_t * region,$/;"	f	file:
pixman_rectangle16	pixman.h	/^struct pixman_rectangle16$/;"	s
pixman_rectangle16_t	pixman.h	/^typedef struct pixman_rectangle16	pixman_rectangle16_t;$/;"	t	typeref:struct:pixman_rectangle16
pixman_rectangle32	pixman.h	/^struct pixman_rectangle32$/;"	s
pixman_rectangle32_t	pixman.h	/^typedef struct pixman_rectangle32	pixman_rectangle32_t;$/;"	t	typeref:struct:pixman_rectangle32
pixman_region16	pixman.h	/^struct pixman_region16$/;"	s
pixman_region16_copy_from_region32	pixman-utils.c	/^pixman_region16_copy_from_region32 (pixman_region16_t *dst,$/;"	f
pixman_region16_data	pixman.h	/^struct pixman_region16_data {$/;"	s
pixman_region16_data_t	pixman.h	/^typedef struct pixman_region16_data	pixman_region16_data_t;$/;"	t	typeref:struct:pixman_region16_data
pixman_region16_t	pixman.h	/^typedef struct pixman_region16		pixman_region16_t;$/;"	t	typeref:struct:pixman_region16
pixman_region32	pixman.h	/^struct pixman_region32$/;"	s
pixman_region32_copy_from_region16	pixman-utils.c	/^pixman_region32_copy_from_region16 (pixman_region32_t *dst,$/;"	f
pixman_region32_data	pixman.h	/^struct pixman_region32_data {$/;"	s
pixman_region32_data_t	pixman.h	/^typedef struct pixman_region32_data	pixman_region32_data_t;$/;"	t	typeref:struct:pixman_region32_data
pixman_region32_t	pixman.h	/^typedef struct pixman_region32		pixman_region32_t;$/;"	t	typeref:struct:pixman_region32
pixman_region_append_non_o	pixman-region.c	/^pixman_region_append_non_o (region_type_t * region,$/;"	f	file:
pixman_region_empty_box	pixman-region.c	/^static box_type_t *pixman_region_empty_box =$/;"	v	file:
pixman_region_empty_data	pixman-region.c	/^static region_data_type_t *pixman_region_empty_data =$/;"	v	file:
pixman_region_intersect_o	pixman-region.c	/^pixman_region_intersect_o (region_type_t *region,$/;"	f	file:
pixman_region_overlap_t	pixman.h	/^} pixman_region_overlap_t;$/;"	t	typeref:enum:__anon14
pixman_region_set_static_pointers	pixman-region16.c	/^pixman_region_set_static_pointers (pixman_box16_t *empty_box,$/;"	f
pixman_region_subtract_o	pixman-region.c	/^pixman_region_subtract_o (region_type_t * region,$/;"	f	file:
pixman_region_union_o	pixman-region.c	/^pixman_region_union_o (region_type_t *region,$/;"	f	file:
pixman_repeat_t	pixman.h	/^} pixman_repeat_t;$/;"	t	typeref:enum:__anon11
pixman_sample_ceil_y	pixman-trap.c	/^pixman_sample_ceil_y (pixman_fixed_t y, int n)$/;"	f
pixman_sample_floor_y	pixman-trap.c	/^pixman_sample_floor_y (pixman_fixed_t y,$/;"	f
pixman_set_extents	pixman-region.c	/^pixman_set_extents (region_type_t *region)$/;"	f	file:
pixman_span_fix	pixman.h	/^struct pixman_span_fix$/;"	s
pixman_span_fix_t	pixman.h	/^typedef struct pixman_span_fix pixman_span_fix_t;$/;"	t	typeref:struct:pixman_span_fix
pixman_timer_register	pixman-timer.c	/^pixman_timer_register (pixman_timer_t *timer)$/;"	f
pixman_timer_t	pixman-private.h	/^struct pixman_timer_t$/;"	s
pixman_timer_t	pixman-private.h	/^typedef struct pixman_timer_t pixman_timer_t;$/;"	t	typeref:struct:pixman_timer_t
pixman_transform	pixman.h	/^struct pixman_transform$/;"	s
pixman_transform_bounds	pixman-matrix.c	/^pixman_transform_bounds (const struct pixman_transform *matrix,$/;"	f
pixman_transform_from_pixman_f_transform	pixman-matrix.c	/^pixman_transform_from_pixman_f_transform (struct pixman_transform *        t,$/;"	f
pixman_transform_init_identity	pixman-matrix.c	/^pixman_transform_init_identity (struct pixman_transform *matrix)$/;"	f
pixman_transform_init_rotate	pixman-matrix.c	/^pixman_transform_init_rotate (struct pixman_transform *t,$/;"	f
pixman_transform_init_scale	pixman-matrix.c	/^pixman_transform_init_scale (struct pixman_transform *t,$/;"	f
pixman_transform_init_translate	pixman-matrix.c	/^pixman_transform_init_translate (struct pixman_transform *t,$/;"	f
pixman_transform_invert	pixman-matrix.c	/^pixman_transform_invert (struct pixman_transform *      dst,$/;"	f
pixman_transform_is_identity	pixman-matrix.c	/^pixman_transform_is_identity (const struct pixman_transform *t)$/;"	f
pixman_transform_is_int_translate	pixman-matrix.c	/^pixman_transform_is_int_translate (const struct pixman_transform *t)$/;"	f
pixman_transform_is_inverse	pixman-matrix.c	/^pixman_transform_is_inverse (const struct pixman_transform *a,$/;"	f
pixman_transform_is_scale	pixman-matrix.c	/^pixman_transform_is_scale (const struct pixman_transform *t)$/;"	f
pixman_transform_multiply	pixman-matrix.c	/^pixman_transform_multiply (struct pixman_transform *      dst,$/;"	f
pixman_transform_point	pixman-matrix.c	/^pixman_transform_point (const struct pixman_transform *transform,$/;"	f
pixman_transform_point_3d	pixman-matrix.c	/^pixman_transform_point_3d (const struct pixman_transform *transform,$/;"	f
pixman_transform_rotate	pixman-matrix.c	/^pixman_transform_rotate (struct pixman_transform *forward,$/;"	f
pixman_transform_scale	pixman-matrix.c	/^pixman_transform_scale (struct pixman_transform *forward,$/;"	f
pixman_transform_t	pixman.h	/^typedef struct pixman_transform pixman_transform_t;$/;"	t	typeref:struct:pixman_transform
pixman_transform_translate	pixman-matrix.c	/^pixman_transform_translate (struct pixman_transform *forward,$/;"	f
pixman_trap	pixman.h	/^struct pixman_trap$/;"	s
pixman_trap_t	pixman.h	/^typedef struct pixman_trap pixman_trap_t;$/;"	t	typeref:struct:pixman_trap
pixman_trapezoid	pixman.h	/^struct pixman_trapezoid$/;"	s
pixman_trapezoid_t	pixman.h	/^typedef struct pixman_trapezoid pixman_trapezoid_t;$/;"	t	typeref:struct:pixman_trapezoid
pixman_trapezoid_valid	pixman.h	879;"	d
pixman_vector	pixman.h	/^struct pixman_vector$/;"	s
pixman_vector_t	pixman.h	/^typedef struct pixman_vector pixman_vector_t;$/;"	t	typeref:struct:pixman_vector
pixman_version	pixman.c	/^pixman_version (void)$/;"	f
pixman_version_string	pixman.c	/^pixman_version_string (void)$/;"	f
pixman_write_memory_func_t	pixman.h	/^typedef void     (* pixman_write_memory_func_t) (void *dst, uint32_t value, int size);$/;"	t
point_type_t	pixman-region16.c	/^} point_type_t;$/;"	t	typeref:struct:__anon9	file:
point_type_t	pixman-region32.c	/^} point_type_t;$/;"	t	typeref:struct:__anon6	file:
prefetch_distance	pixman-arm-neon-asm.h	/^                                   prefetch_distance, \\$/;"	v
process_pixblock_head	pixman-arm-neon-asm.h	/^                                                   process_pixblock_head, \\$/;"	v
process_pixblock_head	pixman-arm-neon-asm.h	/^                                   process_pixblock_head, \\$/;"	v
process_pixblock_head	pixman-arm-neon-asm.h	/^                            process_pixblock_head, \\$/;"	v
process_pixblock_head	pixman-arm-neon-asm.h	/^    ensure_destination_ptr_alignment process_pixblock_head, \\$/;"	v
process_pixblock_tail	pixman-arm-neon-asm.h	/^                                                   process_pixblock_tail, \\$/;"	v
process_pixblock_tail	pixman-arm-neon-asm.h	/^                                        process_pixblock_tail, \\$/;"	v
process_pixblock_tail	pixman-arm-neon-asm.h	/^                                     process_pixblock_tail, \\$/;"	v
process_pixblock_tail	pixman-arm-neon-asm.h	/^                                   process_pixblock_tail, \\$/;"	v
process_pixblock_tail	pixman-arm-neon-asm.h	/^                            process_pixblock_tail, \\$/;"	v
process_pixblock_tail_head	pixman-arm-neon-asm.h	/^                                                   process_pixblock_tail_head, \\$/;"	v
process_pixblock_tail_head	pixman-arm-neon-asm.h	/^                                   process_pixblock_tail_head, \\$/;"	v
process_trailing_pixels	pixman-arm-neon-asm.h	/^    process_trailing_pixels 0, 0, \\$/;"	v
process_trailing_pixels	pixman-arm-neon-asm.h	/^    process_trailing_pixels 0, 1, \\$/;"	v
process_trailing_pixels	pixman-arm-neon-asm.h	/^    process_trailing_pixels 1, 1, \\$/;"	v
property_changed	pixman-private.h	/^    property_changed_func_t     property_changed;$/;"	m	struct:image_common
property_changed_func_t	pixman-private.h	/^typedef void (*property_changed_func_t) (pixman_image_t *image);$/;"	t
quick_sort_rects	pixman-region.c	/^quick_sort_rects ($/;"	f	file:
r	pixman.h	/^    pixman_fixed_t	l, r, y;$/;"	m	struct:pixman_span_fix
radial	pixman-private.h	/^    radial_gradient_t  radial;$/;"	m	union:pixman_image
radial_gradient	pixman-private.h	/^struct radial_gradient$/;"	s
radial_gradient_get_scanline_32	pixman-radial-gradient.c	/^radial_gradient_get_scanline_32 (pixman_image_t *image,$/;"	f	file:
radial_gradient_property_changed	pixman-radial-gradient.c	/^radial_gradient_property_changed (pixman_image_t *image)$/;"	f	file:
radial_gradient_t	pixman-private.h	/^typedef struct radial_gradient radial_gradient_t;$/;"	t	typeref:struct:radial_gradient
radius	pixman-private.h	/^    pixman_fixed_t radius;$/;"	m	struct:circle
rasterize_edges_8	pixman-edge.c	/^rasterize_edges_8 (pixman_image_t *image,$/;"	f	file:
rasterize_span	pixman-edge-imp.h	182;"	d
read_func	pixman-private.h	/^    pixman_read_memory_func_t  read_func;$/;"	m	struct:bits_image
red	pixman.h	/^    uint16_t	red;$/;"	m	struct:pixman_color
ref_count	pixman-private.h	/^    int32_t                     ref_count;$/;"	m	struct:image_common
reg1	pixman-arm-neon-asm.h	/^.macro pixldst0 op, elem_size, reg1, idx, mem_operand, abits$/;"	v
reg1	pixman-arm-neon-asm.h	/^.macro pixldst1 op, elem_size, reg1, mem_operand, abits$/;"	v
reg1	pixman-arm-neon-asm.h	/^.macro pixldst2 op, elem_size, reg1, reg2, mem_operand, abits$/;"	v
reg1	pixman-arm-neon-asm.h	/^.macro pixldst3 op, elem_size, reg1, reg2, reg3, mem_operand$/;"	v
reg1	pixman-arm-neon-asm.h	/^.macro pixldst30 op, elem_size, reg1, reg2, reg3, idx, mem_operand$/;"	v
reg1	pixman-arm-neon-asm.h	/^.macro pixldst4 op, elem_size, reg1, reg2, reg3, reg4, mem_operand, abits$/;"	v
reg2	pixman-arm-neon-asm.h	/^.macro pixldst2 op, elem_size, reg1, reg2, mem_operand, abits$/;"	v
reg2	pixman-arm-neon-asm.h	/^.macro pixldst3 op, elem_size, reg1, reg2, reg3, mem_operand$/;"	v
reg2	pixman-arm-neon-asm.h	/^.macro pixldst30 op, elem_size, reg1, reg2, reg3, idx, mem_operand$/;"	v
reg2	pixman-arm-neon-asm.h	/^.macro pixldst4 op, elem_size, reg1, reg2, reg3, reg4, mem_operand, abits$/;"	v
reg3	pixman-arm-neon-asm.h	/^.macro pixldst3 op, elem_size, reg1, reg2, reg3, mem_operand$/;"	v
reg3	pixman-arm-neon-asm.h	/^.macro pixldst30 op, elem_size, reg1, reg2, reg3, idx, mem_operand$/;"	v
reg3	pixman-arm-neon-asm.h	/^.macro pixldst4 op, elem_size, reg1, reg2, reg3, reg4, mem_operand, abits$/;"	v
reg4	pixman-arm-neon-asm.h	/^.macro pixldst4 op, elem_size, reg1, reg2, reg3, reg4, mem_operand, abits$/;"	v
region_data_type_t	pixman-region16.c	/^typedef pixman_region16_data_t	region_data_type_t;$/;"	t	file:
region_data_type_t	pixman-region32.c	/^typedef pixman_region32_data_t	region_data_type_t;$/;"	t	file:
region_type_t	pixman-region16.c	/^typedef pixman_region16_t	region_type_t;$/;"	t	file:
region_type_t	pixman-region32.c	/^typedef pixman_region32_t	region_type_t;$/;"	t	file:
repeat	pixman-bits-image.c	/^repeat (pixman_repeat_t repeat, int size, int *coord)$/;"	f	file:
repeat	pixman-fast-path.c	/^repeat (pixman_repeat_t repeat, int *c, int size)$/;"	f	file:
repeat	pixman-private.h	/^    pixman_repeat_t             repeat;$/;"	m	struct:image_common
return_if_fail	pixman-private.h	759;"	d
return_if_fail	pixman-private.h	794;"	d
return_val_if_fail	pixman-private.h	770;"	d
return_val_if_fail	pixman-private.h	802;"	d
rgba	pixman.h	/^    uint32_t		rgba[PIXMAN_MAX_INDEXED];$/;"	m	struct:pixman_indexed
right	pixman.h	/^    pixman_line_fixed_t	left, right;$/;"	m	struct:pixman_trapezoid
right_ag	pixman-private.h	/^    uint32_t                right_ag;$/;"	m	struct:__anon4
right_rb	pixman-private.h	/^    uint32_t                right_rb;$/;"	m	struct:__anon4
right_x	pixman-private.h	/^    int32_t                 right_x;$/;"	m	struct:__anon4
rowstride	pixman-private.h	/^    int                        rowstride;  \/* in number of uint32_t's *\/$/;"	m	struct:bits_image
sat16	pixman-x64-mmx-emulation.h	/^sat16 (unsigned short d)$/;"	f
save_128_aligned	pixman-sse2.c	/^save_128_aligned (__m128i* dst,$/;"	f	file:
save_128_unaligned	pixman-sse2.c	/^save_128_unaligned (__m128i* dst,$/;"	f	file:
save_128_write_combining	pixman-sse2.c	/^save_128_write_combining (__m128i* dst,$/;"	f	file:
set_lum	pixman-combine32.c	/^set_lum (uint32_t dest[3], uint32_t src[3], uint32_t sa, uint32_t lum)$/;"	f	file:
set_lum	pixman-combine64.c	/^set_lum (uint64_t dest[3], uint64_t src[3], uint64_t sa, uint64_t lum)$/;"	f	file:
set_sat	pixman-combine32.c	/^set_sat (uint32_t dest[3], uint32_t src[3], uint32_t sat)$/;"	f	file:
set_sat	pixman-combine64.c	/^set_sat (uint64_t dest[3], uint64_t src[3], uint64_t sat)$/;"	f	file:
setup_accessors	pixman-access.c	/^setup_accessors (bits_image_t *image)$/;"	f	file:
shift	pixman-mmx.c	/^shift (__m64 v,$/;"	f	file:
signdx	pixman.h	/^    pixman_fixed_t	signdx;$/;"	m	struct:pixman_edge
size	pixman.h	/^    long		size;$/;"	m	struct:pixman_region16_data
size	pixman.h	/^    long		size;$/;"	m	struct:pixman_region32_data
solid	pixman-private.h	/^    solid_fill_t       solid;$/;"	m	union:pixman_image
solid_fill	pixman-private.h	/^struct solid_fill$/;"	s
solid_fill_classify	pixman-solid-fill.c	/^solid_fill_classify (pixman_image_t *image,$/;"	f	file:
solid_fill_get_scanline_32	pixman-solid-fill.c	/^solid_fill_get_scanline_32 (pixman_image_t *image,$/;"	f	file:
solid_fill_get_scanline_64	pixman-solid-fill.c	/^solid_fill_get_scanline_64 (pixman_image_t *image,$/;"	f	file:
solid_fill_property_changed	pixman-solid-fill.c	/^solid_fill_property_changed (pixman_image_t *image)$/;"	f	file:
solid_fill_t	pixman-private.h	/^typedef struct solid_fill solid_fill_t;$/;"	t	typeref:struct:solid_fill
source	pixman-private.h	/^    source_image_t     source;$/;"	m	union:pixman_image
source_image	pixman-private.h	/^struct source_image$/;"	s
source_image_class_t	pixman-private.h	/^} source_image_class_t;$/;"	t	typeref:enum:__anon3
source_image_needs_out_of_bounds_workaround	pixman-image.c	/^source_image_needs_out_of_bounds_workaround (bits_image_t *image)$/;"	f	file:
source_image_t	pixman-private.h	/^typedef struct source_image source_image_t;$/;"	t	typeref:struct:source_image
splat_alpha	pixman-vmx.c	/^splat_alpha (vector unsigned int pix)$/;"	f	file:
spread	pixman-private.h	/^    unsigned int            spread;$/;"	m	struct:__anon4
src_basereg	pixman-arm-neon-asm.h	/^    pixld       chunk_size, src_bpp, src_basereg, SRC$/;"	v
src_basereg_	pixman-arm-neon-asm.h	/^                                                   src_basereg_   = 0, \\$/;"	v
src_basereg_	pixman-arm-neon-asm.h	/^                                   src_basereg_   = 0, \\$/;"	v
src_bpp	pixman-arm-neon-asm.h	/^    pixld       chunk_size, src_bpp, src_basereg, SRC$/;"	v
src_bpp	pixman-arm-neon-asm.h	/^    pixld       pixblock_size, src_bpp, \\$/;"	v
src_bpp_	pixman-arm-neon-asm.h	/^                                                   src_bpp_, \\$/;"	v
src_bpp_	pixman-arm-neon-asm.h	/^                                   src_bpp_, \\$/;"	v
src_flags	pixman-private.h	/^    uint32_t		    src_flags;$/;"	m	struct:__anon5
src_format	pixman-private.h	/^    pixman_format_code_t    src_format;$/;"	m	struct:__anon5
sse2_blt	pixman-sse2.c	/^sse2_blt (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_add_ca	pixman-sse2.c	/^sse2_combine_add_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_add_u	pixman-sse2.c	/^sse2_combine_add_u (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_atop_ca	pixman-sse2.c	/^sse2_combine_atop_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_atop_reverse_ca	pixman-sse2.c	/^sse2_combine_atop_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_atop_reverse_u	pixman-sse2.c	/^sse2_combine_atop_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_atop_u	pixman-sse2.c	/^sse2_combine_atop_u (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_in_ca	pixman-sse2.c	/^sse2_combine_in_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_in_reverse_ca	pixman-sse2.c	/^sse2_combine_in_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_in_reverse_u	pixman-sse2.c	/^sse2_combine_in_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_in_u	pixman-sse2.c	/^sse2_combine_in_u (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_out_ca	pixman-sse2.c	/^sse2_combine_out_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_out_reverse_ca	pixman-sse2.c	/^sse2_combine_out_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_out_reverse_u	pixman-sse2.c	/^sse2_combine_out_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_out_u	pixman-sse2.c	/^sse2_combine_out_u (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_over_ca	pixman-sse2.c	/^sse2_combine_over_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_over_reverse_ca	pixman-sse2.c	/^sse2_combine_over_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_over_reverse_u	pixman-sse2.c	/^sse2_combine_over_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_over_u	pixman-sse2.c	/^sse2_combine_over_u (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_saturate_u	pixman-sse2.c	/^sse2_combine_saturate_u (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_src_ca	pixman-sse2.c	/^sse2_combine_src_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_xor_ca	pixman-sse2.c	/^sse2_combine_xor_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_combine_xor_u	pixman-sse2.c	/^sse2_combine_xor_u (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_add_8000_8000	pixman-sse2.c	/^sse2_composite_add_8000_8000 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_add_8888_8888	pixman-sse2.c	/^sse2_composite_add_8888_8888 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_add_n_8888_8888_ca	pixman-sse2.c	/^sse2_composite_add_n_8888_8888_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_add_n_8_8	pixman-sse2.c	/^sse2_composite_add_n_8_8 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_copy_area	pixman-sse2.c	/^sse2_composite_copy_area (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_in_8_8	pixman-sse2.c	/^sse2_composite_in_8_8 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_in_n_8_8	pixman-sse2.c	/^sse2_composite_in_n_8_8 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_8888_0565	pixman-sse2.c	/^sse2_composite_over_8888_0565 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_8888_8888	pixman-sse2.c	/^sse2_composite_over_8888_8888 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_8888_8_8888	pixman-sse2.c	/^sse2_composite_over_8888_8_8888 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_8888_n_8888	pixman-sse2.c	/^sse2_composite_over_8888_n_8888 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_n_0565	pixman-sse2.c	/^sse2_composite_over_n_0565 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_n_8888	pixman-sse2.c	/^sse2_composite_over_n_8888 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_n_8888_0565_ca	pixman-sse2.c	/^sse2_composite_over_n_8888_0565_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_n_8888_8888_ca	pixman-sse2.c	/^sse2_composite_over_n_8888_8888_ca (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_n_8_0565	pixman-sse2.c	/^sse2_composite_over_n_8_0565 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_n_8_8888	pixman-sse2.c	/^sse2_composite_over_n_8_8888 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_pixbuf_0565	pixman-sse2.c	/^sse2_composite_over_pixbuf_0565 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_pixbuf_8888	pixman-sse2.c	/^sse2_composite_over_pixbuf_8888 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_x888_8_8888	pixman-sse2.c	/^sse2_composite_over_x888_8_8888 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_over_x888_n_8888	pixman-sse2.c	/^sse2_composite_over_x888_n_8888 (pixman_implementation_t *imp,$/;"	f	file:
sse2_composite_src_n_8_8888	pixman-sse2.c	/^sse2_composite_src_n_8_8888 (pixman_implementation_t *imp,$/;"	f	file:
sse2_fast_paths	pixman-sse2.c	/^static const pixman_fast_path_t sse2_fast_paths[] =$/;"	v	file:
sse2_fill	pixman-sse2.c	/^sse2_fill (pixman_implementation_t *imp,$/;"	f	file:
stepper	pixman-private.h	/^    int32_t                 stepper;$/;"	m	struct:__anon4
stepx	pixman.h	/^    pixman_fixed_t	stepx;$/;"	m	struct:pixman_edge
stepx_big	pixman.h	/^    pixman_fixed_t	stepx_big;$/;"	m	struct:pixman_edge
stepx_small	pixman.h	/^    pixman_fixed_t	stepx_small;$/;"	m	struct:pixman_edge
stop_range	pixman-private.h	/^    int                     stop_range;$/;"	m	struct:gradient
stops	pixman-private.h	/^    pixman_gradient_stop_t *stops;$/;"	m	struct:__anon4
stops	pixman-private.h	/^    pixman_gradient_stop_t *stops;$/;"	m	struct:gradient
store8888	pixman-mmx.c	/^store8888 (__m64 v)$/;"	f	file:
store_24	pixman-fast-path.c	/^store_24 (uint8_t *a,$/;"	f	file:
store_scanline_32	pixman-private.h	/^    store_scanline_t           store_scanline_32;$/;"	m	struct:bits_image
store_scanline_64	pixman-private.h	/^    store_scanline_t           store_scanline_64;$/;"	m	struct:bits_image
store_scanline_a1	pixman-access.c	/^store_scanline_a1 (bits_image_t *  image,$/;"	f	file:
store_scanline_a1b1g1r1	pixman-access.c	/^store_scanline_a1b1g1r1 (bits_image_t *  image,$/;"	f	file:
store_scanline_a1b5g5r5	pixman-access.c	/^store_scanline_a1b5g5r5 (bits_image_t *  image,$/;"	f	file:
store_scanline_a1r1g1b1	pixman-access.c	/^store_scanline_a1r1g1b1 (bits_image_t *  image,$/;"	f	file:
store_scanline_a1r5g5b5	pixman-access.c	/^store_scanline_a1r5g5b5 (bits_image_t *  image,$/;"	f	file:
store_scanline_a2b10g10r10	pixman-access.c	/^store_scanline_a2b10g10r10 (bits_image_t *  image,$/;"	f	file:
store_scanline_a2b2g2r2	pixman-access.c	/^store_scanline_a2b2g2r2 (bits_image_t *  image,$/;"	f	file:
store_scanline_a2r10g10b10	pixman-access.c	/^store_scanline_a2r10g10b10 (bits_image_t *  image,$/;"	f	file:
store_scanline_a2r2g2b2	pixman-access.c	/^store_scanline_a2r2g2b2 (bits_image_t *  image,$/;"	f	file:
store_scanline_a4	pixman-access.c	/^store_scanline_a4 (bits_image_t *  image,$/;"	f	file:
store_scanline_a4b4g4r4	pixman-access.c	/^store_scanline_a4b4g4r4 (bits_image_t *  image,$/;"	f	file:
store_scanline_a4r4g4b4	pixman-access.c	/^store_scanline_a4r4g4b4 (bits_image_t *  image,$/;"	f	file:
store_scanline_a8	pixman-access.c	/^store_scanline_a8 (bits_image_t *  image,$/;"	f	file:
store_scanline_a8b8g8r8	pixman-access.c	/^store_scanline_a8b8g8r8 (bits_image_t *  image,$/;"	f	file:
store_scanline_a8r8g8b8	pixman-access.c	/^store_scanline_a8r8g8b8 (bits_image_t *  image,$/;"	f	file:
store_scanline_b1g2r1	pixman-access.c	/^store_scanline_b1g2r1 (bits_image_t *  image,$/;"	f	file:
store_scanline_b2g3r3	pixman-access.c	/^store_scanline_b2g3r3 (bits_image_t *  image,$/;"	f	file:
store_scanline_b5g6r5	pixman-access.c	/^store_scanline_b5g6r5 (bits_image_t *  image,$/;"	f	file:
store_scanline_b8g8r8	pixman-access.c	/^store_scanline_b8g8r8 (bits_image_t *  image,$/;"	f	file:
store_scanline_b8g8r8a8	pixman-access.c	/^store_scanline_b8g8r8a8 (bits_image_t *  image,$/;"	f	file:
store_scanline_b8g8r8x8	pixman-access.c	/^store_scanline_b8g8r8x8 (bits_image_t *  image,$/;"	f	file:
store_scanline_c4	pixman-access.c	/^store_scanline_c4 (bits_image_t *  image,$/;"	f	file:
store_scanline_c8	pixman-access.c	/^store_scanline_c8 (bits_image_t *  image,$/;"	f	file:
store_scanline_g1	pixman-access.c	/^store_scanline_g1 (bits_image_t *  image,$/;"	f	file:
store_scanline_g4	pixman-access.c	2815;"	d	file:
store_scanline_g8	pixman-access.c	2789;"	d	file:
store_scanline_generic_64	pixman-access.c	/^store_scanline_generic_64 (bits_image_t *  image,$/;"	f	file:
store_scanline_r1g2b1	pixman-access.c	/^store_scanline_r1g2b1 (bits_image_t *  image,$/;"	f	file:
store_scanline_r3g3b2	pixman-access.c	/^store_scanline_r3g3b2 (bits_image_t *  image,$/;"	f	file:
store_scanline_r5g6b5	pixman-access.c	/^store_scanline_r5g6b5 (bits_image_t *  image,$/;"	f	file:
store_scanline_r8g8b8	pixman-access.c	/^store_scanline_r8g8b8 (bits_image_t *  image,$/;"	f	file:
store_scanline_raw_32	pixman-access.c	/^    store_scanline_t		store_scanline_raw_32;$/;"	m	struct:__anon7	file:
store_scanline_raw_32	pixman-private.h	/^    store_scanline_t           store_scanline_raw_32;$/;"	m	struct:bits_image
store_scanline_raw_64	pixman-access.c	/^    store_scanline_t		store_scanline_raw_64;$/;"	m	struct:__anon7	file:
store_scanline_raw_64	pixman-private.h	/^    store_scanline_t           store_scanline_raw_64;$/;"	m	struct:bits_image
store_scanline_t	pixman-private.h	/^typedef void (*store_scanline_t) (bits_image_t *  image,$/;"	t
store_scanline_x1b5g5r5	pixman-access.c	/^store_scanline_x1b5g5r5 (bits_image_t *  image,$/;"	f	file:
store_scanline_x1r5g5b5	pixman-access.c	/^store_scanline_x1r5g5b5 (bits_image_t *  image,$/;"	f	file:
store_scanline_x2b10g10r10	pixman-access.c	/^store_scanline_x2b10g10r10 (bits_image_t *  image,$/;"	f	file:
store_scanline_x2r10g10b10	pixman-access.c	/^store_scanline_x2r10g10b10 (bits_image_t *  image,$/;"	f	file:
store_scanline_x4a4	pixman-access.c	/^store_scanline_x4a4 (bits_image_t *  image,$/;"	f	file:
store_scanline_x4b4g4r4	pixman-access.c	/^store_scanline_x4b4g4r4 (bits_image_t *  image,$/;"	f	file:
store_scanline_x4c4	pixman-access.c	2794;"	d	file:
store_scanline_x4g4	pixman-access.c	2799;"	d	file:
store_scanline_x4r4g4b4	pixman-access.c	/^store_scanline_x4r4g4b4 (bits_image_t *  image,$/;"	f	file:
store_scanline_x8b8g8r8	pixman-access.c	/^store_scanline_x8b8g8r8 (bits_image_t *  image,$/;"	f	file:
store_scanline_x8r8g8b8	pixman-access.c	/^store_scanline_x8r8g8b8 (bits_image_t *  image,$/;"	f	file:
timers	pixman-timer.c	/^static pixman_timer_t *timers;$/;"	v	file:
top	pixman.h	/^    pixman_fixed_t	top, bottom;$/;"	m	struct:pixman_trapezoid
top	pixman.h	/^    pixman_span_fix_t	top, bot;$/;"	m	struct:pixman_trap
toplevel	pixman-private.h	/^    pixman_implementation_t *	toplevel;$/;"	m	struct:pixman_implementation_t
total	pixman-private.h	/^    uint64_t        total;$/;"	m	struct:pixman_timer_t
transform	pixman-private.h	/^    pixman_transform_t *        transform;$/;"	m	struct:image_common
type	pixman-private.h	/^    image_type_t                type;$/;"	m	struct:image_common
type	pixman-private.h	/^    image_type_t       type;$/;"	m	union:pixman_image
unapply_workaround	pixman.c	/^unapply_workaround (pixman_image_t *image, uint32_t *bits, int dx, int dy)$/;"	f	file:
unpack_128_2x128	pixman-sse2.c	/^unpack_128_2x128 (__m128i data, __m128i* data_lo, __m128i* data_hi)$/;"	f	file:
unpack_32_1x128	pixman-sse2.c	/^unpack_32_1x128 (uint32_t data)$/;"	f	file:
unpack_32_1x64	pixman-sse2.c	/^unpack_32_1x64 (uint32_t data)$/;"	f	file:
unpack_565_128_4x128	pixman-sse2.c	/^unpack_565_128_4x128 (__m128i  data,$/;"	f	file:
unpack_565_to_8888	pixman-sse2.c	/^unpack_565_to_8888 (__m128i lo)$/;"	f	file:
v	pixman.h	/^    double  v[3];$/;"	m	struct:pixman_f_vector
validate	pixman-region.c	/^validate (region_type_t * badreg,$/;"	f	file:
vector	pixman.h	/^    pixman_fixed_t	vector[3];$/;"	m	struct:pixman_vector
vertical_gradient_t	pixman-private.h	/^typedef struct vertical_gradient vertical_gradient_t;$/;"	t	typeref:struct:vertical_gradient
vld3	pixman-arm-neon-asm.h	/^    pixldst3 vld3, 8, %(basereg+3), %(basereg+4), %(basereg+5), mem_operand$/;"	v
vld3	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 1, mem_operand$/;"	v
vld3	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 2, mem_operand$/;"	v
vld3	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 3, mem_operand$/;"	v
vld3	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 4, mem_operand$/;"	v
vld3	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 5, mem_operand$/;"	v
vld3	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 6, mem_operand$/;"	v
vld3	pixman-arm-neon-asm.h	/^    pixldst30 vld3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 7, mem_operand$/;"	v
vmx_combine_add_ca	pixman-vmx.c	/^vmx_combine_add_ca (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_add_u	pixman-vmx.c	/^vmx_combine_add_u (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_add_u_mask	pixman-vmx.c	/^vmx_combine_add_u_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_add_u_no_mask	pixman-vmx.c	/^vmx_combine_add_u_no_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_atop_ca	pixman-vmx.c	/^vmx_combine_atop_ca (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_atop_reverse_ca	pixman-vmx.c	/^vmx_combine_atop_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_atop_reverse_u	pixman-vmx.c	/^vmx_combine_atop_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_atop_reverse_u_mask	pixman-vmx.c	/^vmx_combine_atop_reverse_u_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_atop_reverse_u_no_mask	pixman-vmx.c	/^vmx_combine_atop_reverse_u_no_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_atop_u	pixman-vmx.c	/^vmx_combine_atop_u (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_atop_u_mask	pixman-vmx.c	/^vmx_combine_atop_u_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_atop_u_no_mask	pixman-vmx.c	/^vmx_combine_atop_u_no_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_in_ca	pixman-vmx.c	/^vmx_combine_in_ca (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_in_reverse_ca	pixman-vmx.c	/^vmx_combine_in_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_in_reverse_u	pixman-vmx.c	/^vmx_combine_in_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_in_reverse_u_mask	pixman-vmx.c	/^vmx_combine_in_reverse_u_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_in_reverse_u_no_mask	pixman-vmx.c	/^vmx_combine_in_reverse_u_no_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_in_u	pixman-vmx.c	/^vmx_combine_in_u (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_in_u_mask	pixman-vmx.c	/^vmx_combine_in_u_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_in_u_no_mask	pixman-vmx.c	/^vmx_combine_in_u_no_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_out_ca	pixman-vmx.c	/^vmx_combine_out_ca (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_out_reverse_ca	pixman-vmx.c	/^vmx_combine_out_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_out_reverse_u	pixman-vmx.c	/^vmx_combine_out_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_out_reverse_u_mask	pixman-vmx.c	/^vmx_combine_out_reverse_u_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_out_reverse_u_no_mask	pixman-vmx.c	/^vmx_combine_out_reverse_u_no_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_out_u	pixman-vmx.c	/^vmx_combine_out_u (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_out_u_mask	pixman-vmx.c	/^vmx_combine_out_u_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_out_u_no_mask	pixman-vmx.c	/^vmx_combine_out_u_no_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_over_ca	pixman-vmx.c	/^vmx_combine_over_ca (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_over_reverse_ca	pixman-vmx.c	/^vmx_combine_over_reverse_ca (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_over_reverse_u	pixman-vmx.c	/^vmx_combine_over_reverse_u (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_over_reverse_u_mask	pixman-vmx.c	/^vmx_combine_over_reverse_u_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_over_reverse_u_no_mask	pixman-vmx.c	/^vmx_combine_over_reverse_u_no_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_over_u	pixman-vmx.c	/^vmx_combine_over_u (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_over_u_mask	pixman-vmx.c	/^vmx_combine_over_u_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_over_u_no_mask	pixman-vmx.c	/^vmx_combine_over_u_no_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_src_ca	pixman-vmx.c	/^vmx_combine_src_ca (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_xor_ca	pixman-vmx.c	/^vmx_combine_xor_ca (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_xor_u	pixman-vmx.c	/^vmx_combine_xor_u (pixman_implementation_t *imp,$/;"	f	file:
vmx_combine_xor_u_mask	pixman-vmx.c	/^vmx_combine_xor_u_mask (uint32_t *      dest,$/;"	f	file:
vmx_combine_xor_u_no_mask	pixman-vmx.c	/^vmx_combine_xor_u_no_mask (uint32_t *      dest,$/;"	f	file:
vmx_fast_paths	pixman-vmx.c	/^static const pixman_fast_path_t vmx_fast_paths[] =$/;"	v	file:
vmx_test	pixman-cpu.c	/^vmx_test (int        sig,$/;"	f	file:
vst3	pixman-arm-neon-asm.h	/^    pixldst3 vst3, 8, %(basereg+3), %(basereg+4), %(basereg+5), mem_operand$/;"	v
vst3	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 1, mem_operand$/;"	v
vst3	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 2, mem_operand$/;"	v
vst3	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 3, mem_operand$/;"	v
vst3	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 4, mem_operand$/;"	v
vst3	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 5, mem_operand$/;"	v
vst3	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 6, mem_operand$/;"	v
vst3	pixman-arm-neon-asm.h	/^    pixldst30 vst3, 8, %(basereg+0), %(basereg+1), %(basereg+2), 7, mem_operand$/;"	v
walk_region_internal	pixman.c	/^walk_region_internal (pixman_implementation_t *imp,$/;"	f	file:
width	pixman-private.h	/^    int                        width;$/;"	m	struct:bits_image
width	pixman.h	/^    uint16_t	width, height;$/;"	m	struct:pixman_rectangle16
width	pixman.h	/^    uint32_t width, height;$/;"	m	struct:pixman_rectangle32
within_epsilon	pixman-matrix.c	/^within_epsilon (pixman_fixed_t a,$/;"	f	file:
write_func	pixman-private.h	/^    pixman_write_memory_func_t write_func;$/;"	m	struct:bits_image
x	pixman-private.h	/^    pixman_fixed_t x;$/;"	m	struct:circle
x	pixman-region16.c	/^    int x, y;$/;"	m	struct:__anon9	file:
x	pixman-region32.c	/^    int x, y;$/;"	m	struct:__anon6	file:
x	pixman.h	/^    int16_t	x, y;$/;"	m	struct:pixman_rectangle16
x	pixman.h	/^    int32_t x, y;$/;"	m	struct:pixman_rectangle32
x	pixman.h	/^    pixman_fixed_t	x;$/;"	m	struct:pixman_edge
x	pixman.h	/^    pixman_fixed_t	x;$/;"	m	struct:pixman_point_fixed
x	pixman.h	/^    pixman_fixed_t x;$/;"	m	struct:pixman_gradient_stop
x1	pixman.h	/^    int16_t x1, y1, x2, y2;$/;"	m	struct:pixman_box16
x1	pixman.h	/^    int32_t x1, y1, x2, y2;$/;"	m	struct:pixman_box32
x2	pixman.h	/^    int16_t x1, y1, x2, y2;$/;"	m	struct:pixman_box16
x2	pixman.h	/^    int32_t x1, y1, x2, y2;$/;"	m	struct:pixman_box32
y	pixman-private.h	/^    pixman_fixed_t y;$/;"	m	struct:circle
y	pixman-region16.c	/^    int x, y;$/;"	m	struct:__anon9	file:
y	pixman-region32.c	/^    int x, y;$/;"	m	struct:__anon6	file:
y	pixman.h	/^    int16_t	x, y;$/;"	m	struct:pixman_rectangle16
y	pixman.h	/^    int32_t x, y;$/;"	m	struct:pixman_rectangle32
y	pixman.h	/^    pixman_fixed_t	l, r, y;$/;"	m	struct:pixman_span_fix
y	pixman.h	/^    pixman_fixed_t	y;$/;"	m	struct:pixman_point_fixed
y1	pixman.h	/^    int16_t x1, y1, x2, y2;$/;"	m	struct:pixman_box16
y1	pixman.h	/^    int32_t x1, y1, x2, y2;$/;"	m	struct:pixman_box32
y2	pixman.h	/^    int16_t x1, y1, x2, y2;$/;"	m	struct:pixman_box16
y2	pixman.h	/^    int32_t x1, y1, x2, y2;$/;"	m	struct:pixman_box32
